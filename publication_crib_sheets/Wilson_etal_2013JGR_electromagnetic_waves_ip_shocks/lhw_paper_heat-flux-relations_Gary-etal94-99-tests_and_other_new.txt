;-----------------------------------------------------------------------------------------
; => Constants
;-----------------------------------------------------------------------------------------
f        = !VALUES.F_NAN
d        = !VALUES.D_NAN
c        = 2.99792458d8      ; -Speed of light in vacuum (m/s)
kB       = 1.380658d-23      ; -Boltzmann Constant (J/K)
epo      = 8.854187817d-12   ; -Permittivity of free space (F/m)
muo      = 4d0*!DPI*1d-7     ; -Permeability of free space (N/A^2 or H/m)
me       = 9.1093897d-31     ; -Electron mass (kg)
mp       = 1.6726231d-27     ; -Proton mass (kg)
qq       = 1.60217733d-19    ; => Fundamental charge (C)

date     = '121097'
tramp    = '1997-12-10/04:33:14.664'
vshn     = 391.2                   ; => Up/Downstream normal flow speed [SC frame] RHO8
test0    = tdss_lhw_stats_read(DATE=date)
evn0     = test0.EVENT_N
scet0    = test0.SCET_SE[*,0]
betapa0  = (test0.BETA_PARCE_SE[*,0] + test0.BETA_PARCE_SE[*,1])/2d0
teavg0   = (test0.TE_AVG_SE[*,0] + test0.TE_AVG_SE[*,1])/2d0
tiavg0   = (test0.TI_AVG_SE[*,0] + test0.TI_AVG_SE[*,1])/2d0
tecavg0  = (test0.TEC_SE[*,0] + test0.TEC_SE[*,1])/2d0
tehavg0  = (test0.TEH_SE[*,0] + test0.TEH_SE[*,1])/2d0
tparc0   = (test0.TPAR_EC_SE[*,0] + test0.TPAR_EC_SE[*,1])/2d0
tperc0   = (test0.TPER_EC_SE[*,0] + test0.TPER_EC_SE[*,1])/2d0
tparh0   = (test0.TPAR_EH_SE[*,0] + test0.TPAR_EH_SE[*,1])/2d0
tperh0   = (test0.TPER_EH_SE[*,0] + test0.TPER_EH_SE[*,1])/2d0
qmag0    = (test0.QMAG_SE[*,0] + test0.QMAG_SE[*,1])/2d0

date     = '082698'
tramp    = '1998-08-26/06:40:24.972'
vshn     = 687.4                   ; => Up/Downstream normal flow speed [SC frame] RHO8
test1    = tdss_lhw_stats_read(DATE=date)
evn1     = test1.EVENT_N
scet1    = test1.SCET_SE[*,0]
betapa1  = (test1.BETA_PARCE_SE[*,0] + test1.BETA_PARCE_SE[*,1])/2d0
teavg1   = (test1.TE_AVG_SE[*,0] + test1.TE_AVG_SE[*,1])/2d0
tiavg1   = (test1.TI_AVG_SE[*,0] + test1.TI_AVG_SE[*,1])/2d0
tecavg1  = (test1.TEC_SE[*,0] + test1.TEC_SE[*,1])/2d0
tehavg1  = (test1.TEH_SE[*,0] + test1.TEH_SE[*,1])/2d0
tparc1   = (test1.TPAR_EC_SE[*,0] + test1.TPAR_EC_SE[*,1])/2d0
tperc1   = (test1.TPER_EC_SE[*,0] + test1.TPER_EC_SE[*,1])/2d0
tparh1   = (test1.TPAR_EH_SE[*,0] + test1.TPAR_EH_SE[*,1])/2d0
tperh1   = (test1.TPER_EH_SE[*,0] + test1.TPER_EH_SE[*,1])/2d0
qmag1    = (test1.QMAG_SE[*,0] + test1.QMAG_SE[*,1])/2d0

date     = '092498'
tramp    = '1998-09-24/23:20:37.374'
vshn     = 772.4                   ; => Up/Downstream normal flow speed [SC frame] RHO8
test2    = tdss_lhw_stats_read(DATE=date)
evn2     = test2.EVENT_N
scet2    = test2.SCET_SE[*,0]
betapa2  = (test2.BETA_PARCE_SE[*,0] + test2.BETA_PARCE_SE[*,1])/2d0
teavg2   = (test2.TE_AVG_SE[*,0] + test2.TE_AVG_SE[*,1])/2d0
tiavg2   = (test2.TI_AVG_SE[*,0] + test2.TI_AVG_SE[*,1])/2d0
tecavg2  = (test2.TEC_SE[*,0] + test2.TEC_SE[*,1])/2d0
tehavg2  = (test2.TEH_SE[*,0] + test2.TEH_SE[*,1])/2d0
tparc2   = (test2.TPAR_EC_SE[*,0] + test2.TPAR_EC_SE[*,1])/2d0
tperc2   = (test2.TPER_EC_SE[*,0] + test2.TPER_EC_SE[*,1])/2d0
tparh2   = (test2.TPAR_EH_SE[*,0] + test2.TPAR_EH_SE[*,1])/2d0
tperh2   = (test2.TPER_EH_SE[*,0] + test2.TPER_EH_SE[*,1])/2d0
qmag2    = (test2.QMAG_SE[*,0] + test2.QMAG_SE[*,1])/2d0

date     = '021100'
tramp    = '2000-02-11/23:33:55.319'
vshn     = 641.4                   ; => Up/Downstream normal flow speed [SC frame] RHO8
test3    = tdss_lhw_stats_read(DATE=date)
evn3     = test3.EVENT_N
scet3    = test3.SCET_SE[*,0]
betapa3  = (test3.BETA_PARCE_SE[*,0] + test3.BETA_PARCE_SE[*,1])/2d0
teavg3   = (test3.TE_AVG_SE[*,0] + test3.TE_AVG_SE[*,1])/2d0
tiavg3   = (test3.TI_AVG_SE[*,0] + test3.TI_AVG_SE[*,1])/2d0
tecavg3  = (test3.TEC_SE[*,0] + test3.TEC_SE[*,1])/2d0
tehavg3  = (test3.TEH_SE[*,0] + test3.TEH_SE[*,1])/2d0
tparc3   = (test3.TPAR_EC_SE[*,0] + test3.TPAR_EC_SE[*,1])/2d0
tperc3   = (test3.TPER_EC_SE[*,0] + test3.TPER_EC_SE[*,1])/2d0
tparh3   = (test3.TPAR_EH_SE[*,0] + test3.TPAR_EH_SE[*,1])/2d0
tperh3   = (test3.TPER_EH_SE[*,0] + test3.TPER_EH_SE[*,1])/2d0
qmag3    = (test3.QMAG_SE[*,0] + test3.QMAG_SE[*,1])/2d0
;-----------------------------------------------------------------------------------------
; => Combine terms
;-----------------------------------------------------------------------------------------
scets     = [scet0,scet1,scet2,scet3]
scete     = [test0.SCET_SE[*,1],test1.SCET_SE[*,1],test2.SCET_SE[*,1],test3.SCET_SE[*,1]]
evns      = [evn0,evn1,evn2,evn3]

; => core para. electron beta
beta_pac  = [test0.BETA_PARCE_SE,test1.BETA_PARCE_SE, $
             test2.BETA_PARCE_SE,test3.BETA_PARCE_SE]
; => EL electron avg. temp (eV)
teavg    = [test0.TE_AVG_SE,test1.TE_AVG_SE,test2.TE_AVG_SE,test3.TE_AVG_SE]
; => PL ion avg. temp (eV)
tiavg    = [test0.TI_AVG_SE,test1.TI_AVG_SE,test2.TI_AVG_SE,test3.TI_AVG_SE]
; => core avg.  temp (eV)
tecavg   = [test0.TEC_SE,test1.TEC_SE,test2.TEC_SE,test3.TEC_SE]
; => halo avg.  temp (eV)
tehavg   = [test0.TEH_SE,test1.TEH_SE,test2.TEH_SE,test3.TEH_SE]
; => core para. temp (eV)
tparc    = [test0.TPAR_EC_SE,test1.TPAR_EC_SE,test2.TPAR_EC_SE,test3.TPAR_EC_SE]
; => core perp. temp (eV)
tperc    = [test0.TPER_EC_SE,test1.TPER_EC_SE,test2.TPER_EC_SE,test3.TPER_EC_SE]
; => halo para. temp (eV)
tparh    = [test0.TPAR_EH_SE,test1.TPAR_EH_SE,test2.TPAR_EH_SE,test3.TPAR_EH_SE]
; => halo perp. temp (eV)
tperh    = [test0.TPER_EH_SE,test1.TPER_EH_SE,test2.TPER_EH_SE,test3.TPER_EH_SE]
; => heat flux magnitude [eV km/s cm^(-3)]
qmag     = [test0.QMAG_SE,test1.QMAG_SE,test2.QMAG_SE,test3.QMAG_SE]
; => Calc. temperature ratios
te_tiav  = teavg/tiavg
tanis_c  = tperc/tparc
tanis_h  = tperh/tparh
thc_par  = tparh/tparc
thc_per  = tperh/tperc
tehc_avg = tehavg/tecavg


evns_lhw = [00010618L,00010684L,02013066L,02014864L,02015635L,02015691L,$
            02017428L,02018091L]
evns_mix = [03408599L,00010488L,02011249L,02011723L,02011820L,02013165L,$
            02015299L,02015304L,02015650L,02017555L,23145465L,23145474L,$
            23145484L]
evns_whi = [00010807L,00010832L,00010868L,00010881L,00010888L,00010895L,$
            00010923L,00010937L,23145603L,23145610L,23153276L,23154909L,$
            23155087L]

good_lhw = array_where(evns,evns_lhw,/N_UNIQ)
good_mix = array_where(evns,evns_mix,/N_UNIQ)
good_whi = array_where(evns,evns_whi,/N_UNIQ)

good_lhw = good_lhw[*,0]
good_mix = good_mix[*,0]
good_whi = good_whi[*,0]

unq_lhw  = UNIQ(evns[good_lhw],SORT(evns[good_lhw]))
unq_mix  = UNIQ(evns[good_mix],SORT(evns[good_mix]))
unq_whi  = UNIQ(evns[good_whi],SORT(evns[good_whi]))

good_lhwu = good_lhw[unq_lhw]
good_mixu = good_mix[unq_mix]
good_whiu = good_whi[unq_whi]

;-----------------------------------------------------------------------------------------
; => Look at threshold conditions for Gary et. al. [1994,1999]
;
; => whistler heat flux instability  = WHFI
; => whistler anisotropy instability = WAI
;
; => Gary et al., [1999] found the whistler heat flux instability (WHFI) to ALWAYS be 
;      unstable if Thperp/Thpara > 1.01 and ALWAYS stable for beta_para,c < 0.25.  
;      Also, Gary et al., [1994] suggested that even when Thpara/Tcpara is small but 
;      Thperp/Thpara > 1.01, the WAI can still be unstable even in the absence of a
;      relative drift between halo and core.
;-----------------------------------------------------------------------------------------
scets_lhw       = scets[good_lhwu]
scete_lhw       = scete[good_lhwu]
gary_test_0_lhw = (beta_pac[good_lhwu,*] GT 6d-1 AND tanis_h[good_lhwu,*] GT 75d-2) OR  $
                  (beta_pac[good_lhwu,*] GT 6d-1 AND thc_par[good_lhwu,*] GT 75d-1)
gary_test_1_lhw = (beta_pac[good_lhwu,*] GT 6d-1 AND tanis_h[good_lhwu,*] GT 75d-2) AND $
                  (beta_pac[good_lhwu,*] GT 6d-1 AND thc_par[good_lhwu,*] GT 75d-1)
gary_test_2_lhw = (beta_pac[good_lhwu,*] GT 6d-1 AND tanis_h[good_lhwu,*] GT 75d-2)
gary_test_3_lhw = (thc_par[good_lhwu,*]  GT 75d-1)
gary_test_4_lhw = (tanis_h[good_lhwu,*]  GT 75d-2)
gary_test_5_lhw = (tanis_h[good_lhwu,*]  GT 1.01)
gary_test_6_lhw = (beta_pac[good_lhwu,*] LE 0.25)


scets_mix       = scets[good_mixu]
scete_mix       = scete[good_mixu]
gary_test_0_mix = (beta_pac[good_mixu,*] GT 6d-1 AND tanis_h[good_mixu,*] GT 75d-2) OR  $
                  (beta_pac[good_mixu,*] GT 6d-1 AND thc_par[good_mixu,*] GT 75d-1)
gary_test_1_mix = (beta_pac[good_mixu,*] GT 6d-1 AND tanis_h[good_mixu,*] GT 75d-2) AND $
                  (beta_pac[good_mixu,*] GT 6d-1 AND thc_par[good_mixu,*] GT 75d-1)
gary_test_2_mix = (beta_pac[good_mixu,*] GT 6d-1 AND tanis_h[good_mixu,*] GT 75d-2)
gary_test_3_mix = (thc_par[good_mixu,*]  GT 75d-1)
gary_test_4_mix = (tanis_h[good_mixu,*]  GT 75d-2)
gary_test_5_mix = (tanis_h[good_mixu,*]  GT 1.01)
gary_test_6_mix = (beta_pac[good_mixu,*] LE 0.25)


scets_whi       = scets[good_whiu]
scete_whi       = scete[good_whiu]
gary_test_0_whi = (beta_pac[good_whiu,*] GT 6d-1 AND tanis_h[good_whiu,*] GT 75d-2) OR  $
                  (beta_pac[good_whiu,*] GT 6d-1 AND thc_par[good_whiu,*] GT 75d-1)
gary_test_1_whi = (beta_pac[good_whiu,*] GT 6d-1 AND tanis_h[good_whiu,*] GT 75d-2) AND $
                  (beta_pac[good_whiu,*] GT 6d-1 AND thc_par[good_whiu,*] GT 75d-1)
gary_test_2_whi = (beta_pac[good_whiu,*] GT 6d-1 AND tanis_h[good_whiu,*] GT 75d-2)
gary_test_3_whi = (thc_par[good_whiu,*]  GT 75d-1)
gary_test_4_whi = (tanis_h[good_whiu,*]  GT 75d-2)
gary_test_5_whi = (tanis_h[good_whiu,*]  GT 1.01)
gary_test_6_whi = (beta_pac[good_whiu,*] LE 0.25)


mform      = '(";   ",a23,7I11.1)'
FOR j=0L, N_ELEMENTS(scets_lhw) - 1L DO BEGIN  $
  PRINT,FORMAT=mform,scets_lhw[j],gary_test_0_lhw[j,0],gary_test_1_lhw[j,0],gary_test_2_lhw[j,0],$
                     gary_test_3_lhw[j,0],gary_test_4_lhw[j,0],gary_test_5_lhw[j,0],         $
                     gary_test_6_lhw[j,0]

FOR j=0L, N_ELEMENTS(scete_lhw) - 1L DO BEGIN  $
  PRINT,FORMAT=mform,scete_lhw[j],gary_test_0_lhw[j,1],gary_test_1_lhw[j,1],gary_test_2_lhw[j,1],$
                     gary_test_3_lhw[j,1],gary_test_4_lhw[j,1],gary_test_5_lhw[j,1],         $
                     gary_test_6_lhw[j,1]
;----------------------------------------------------------------------------------------------------------
;      Date        Time            Test 0     Test 1     Test 2     Test 3     Test 4     Test 5     Test 6
;==========================================================================================================
;   1998-08-26/06:40:53.292          1          0          1          0          1          1          0
;   1998-08-26/06:41:08.353          1          0          1          0          1          1          0
;   1998-09-24/23:43:17.303          0          0          0          0          1          0          0
;   1998-09-24/23:48:37.371          0          0          0          0          1          0          0
;   1998-09-24/23:48:49.973          0          0          0          0          1          0          0
;   1998-09-25/00:04:02.897          1          0          1          0          1          1          0
;   1998-09-25/00:14:48.955          0          0          0          0          1          1          0
;----------------------------------------------------------------------------------------------------------
;   1998-08-26/06:40:54.383          1          0          1          0          1          1          0
;   1998-08-26/06:41:09.444          1          0          1          0          1          1          0
;   1998-09-24/23:43:18.394          0          0          0          0          1          0          0
;   1998-09-24/23:48:38.462          0          0          0          0          1          0          0
;   1998-09-24/23:48:51.064          0          0          0          0          1          0          0
;   1998-09-25/00:04:03.988          1          0          1          0          1          1          0
;   1998-09-25/00:14:50.046          0          0          0          0          1          1          0
;----------------------------------------------------------------------------------------------------------

mform      = '(";   ",a23,7I11.1)'
FOR j=0L, N_ELEMENTS(scets_mix) - 1L DO BEGIN  $
  PRINT,FORMAT=mform,scets_mix[j],gary_test_0_mix[j,0],gary_test_1_mix[j,0],gary_test_2_mix[j,0],$
                     gary_test_3_mix[j,0],gary_test_4_mix[j,0],gary_test_5_mix[j,0],         $
                     gary_test_6_mix[j,0]

FOR j=0L, N_ELEMENTS(scete_mix) - 1L DO BEGIN  $
  PRINT,FORMAT=mform,scete_mix[j],gary_test_0_mix[j,1],gary_test_1_mix[j,1],gary_test_2_mix[j,1],$
                     gary_test_3_mix[j,1],gary_test_4_mix[j,1],gary_test_5_mix[j,1],         $
                     gary_test_6_mix[j,1]
;----------------------------------------------------------------------------------------------------------
;      Date        Time            Test 0     Test 1     Test 2     Test 3     Test 4     Test 5     Test 6
;==========================================================================================================
;   1997-12-10/04:33:13.957          1          1          1          1          1          0          0
;   1998-08-26/06:40:24.472          1          1          1          1          1          1          0
;   1998-09-24/23:20:37.194          1          0          1          0          1          0          0
;   1998-09-24/23:22:24.983          0          0          0          0          1          1          1
;   1998-09-24/23:22:46.502          0          0          0          0          1          1          1
;   1998-09-24/23:30:46.893          0          0          0          0          1          1          0
;   1998-09-24/23:45:50.535          0          0          0          0          1          0          0
;   1998-09-24/23:45:51.730          0          0          0          0          1          1          0
;   1998-09-24/23:48:40.482          0          0          0          0          1          0          0
;   1998-09-25/00:05:21.783          1          0          1          0          1          1          0
;   2000-02-11/23:33:54.843          1          1          1          1          1          0          0
;   2000-02-11/23:33:56.703          1          0          1          0          1          0          0
;   2000-02-11/23:33:59.082          1          0          1          0          1          1          0
;----------------------------------------------------------------------------------------------------------
;   1997-12-10/04:33:15.048          1          1          1          1          1          0          0
;   1998-08-26/06:40:25.563          1          0          1          0          1          0          0
;   1998-09-24/23:20:38.285          0          0          0          0          1          1          0
;   1998-09-24/23:22:26.074          0          0          0          0          1          1          1
;   1998-09-24/23:22:47.593          0          0          0          0          1          1          1
;   1998-09-24/23:30:47.984          0          0          0          0          1          1          0
;   1998-09-24/23:45:51.626          0          0          0          0          1          1          0
;   1998-09-24/23:45:52.821          0          0          0          0          1          1          0
;   1998-09-24/23:48:41.573          0          0          0          0          1          0          0
;   1998-09-25/00:05:22.874          1          0          1          0          1          1          0
;   2000-02-11/23:33:55.934          1          0          1          0          1          0          0
;   2000-02-11/23:33:57.794          1          0          1          0          1          0          0
;   2000-02-11/23:34:00.173          1          0          1          0          1          1          0
;----------------------------------------------------------------------------------------------------------


FOR j=0L, N_ELEMENTS(scets_whi) - 1L DO BEGIN  $
  PRINT,FORMAT=mform,scets_whi[j],gary_test_0_whi[j,0],gary_test_1_whi[j,0],gary_test_2_whi[j,0],$
                     gary_test_3_whi[j,0],gary_test_4_whi[j,0],gary_test_5_whi[j,0],         $
                     gary_test_6_whi[j,0]

FOR j=0L, N_ELEMENTS(scete_whi) - 1L DO BEGIN  $
  PRINT,FORMAT=mform,scete_whi[j],gary_test_0_whi[j,1],gary_test_1_whi[j,1],gary_test_2_whi[j,1],$
                     gary_test_3_whi[j,1],gary_test_4_whi[j,1],gary_test_5_whi[j,1],         $
                     gary_test_6_whi[j,1]
;----------------------------------------------------------------------------------------------------------
;      Date        Time            Test 0     Test 1     Test 2     Test 3     Test 4     Test 5     Test 6
;==========================================================================================================
;   1998-08-26/06:41:35.975          1          0          1          0          1          1          0
;   1998-08-26/06:41:42.365          1          0          1          0          1          1          0
;   1998-08-26/06:41:51.600          1          0          1          0          1          1          0
;   1998-08-26/06:41:54.666          1          0          1          0          1          1          0
;   1998-08-26/06:41:56.261          1          0          1          0          1          1          0
;   1998-08-26/06:41:57.584          1          0          1          0          1          1          0
;   1998-08-26/06:42:04.115          1          0          1          0          1          1          0
;   1998-08-26/06:42:07.483          1          0          1          0          1          1          0
;   2000-02-11/23:34:25.854          0          0          0          0          1          1          0
;   2000-02-11/23:34:27.416          0          0          0          0          1          1          0
;   2000-02-12/00:14:20.060          1          1          1          1          1          0          0
;   2000-02-12/00:26:15.569          1          1          1          1          1          0          0
;   2000-02-12/00:27:17.494          1          0          1          0          1          0          0
;----------------------------------------------------------------------------------------------------------
;   1998-08-26/06:41:37.066          1          0          1          0          1          1          0
;   1998-08-26/06:41:43.456          1          0          1          0          1          1          0
;   1998-08-26/06:41:52.691          1          0          1          0          1          1          0
;   1998-08-26/06:41:55.757          1          0          1          0          1          1          0
;   1998-08-26/06:41:57.352          1          0          1          0          1          1          0
;   1998-08-26/06:41:58.675          1          0          1          0          1          1          0
;   1998-08-26/06:42:05.206          1          0          1          0          1          1          0
;   1998-08-26/06:42:08.575          1          0          1          0          1          1          0
;   2000-02-11/23:34:26.945          0          0          0          0          1          1          0
;   2000-02-11/23:34:28.507          0          0          0          0          1          1          0
;   2000-02-12/00:14:21.151          1          1          1          1          1          0          0
;   2000-02-12/00:26:16.660          1          1          1          1          1          0          0
;   2000-02-12/00:27:18.585          1          0          1          0          1          0          0
;----------------------------------------------------------------------------------------------------------



;-----------------------------------------------------------------------------------------
; => Look at threshold conditions for Gary et. al. [1994,1999]
;
; => whistler heat flux instability  = WHFI
; => whistler anisotropy instability = WAI
;
; => Gary et al., [1999] found the whistler heat flux instability (WHFI) to ALWAYS be 
;      unstable if Thperp/Thpara > 1.01 and ALWAYS stable for beta_para,c < 0.25.  
;      Also, Gary et al., [1994] suggested that even when Thpara/Tcpara is small but 
;      Thperp/Thpara > 1.01, the WAI can still be unstable even in the absence of a
;      relative drift between halo and core.
;
;      Test        Figure 7        Figure 8       Logical Result
;                 Conditions      Conditions
;================================================================
;     Test 0  :      yes     [OR]    yes                 1
;     Test 1  :      yes    [AND]    yes                 1
;     Test 2  :       no     [NA]    yes                 1
;     Test 3  :      yes     [NA]     no                 1
;     Test 4  :      yes     [NA]     no                 1
;-----------------------------------------------------------------------------------------

xdumb      = DINDGEN(100L)*(4.0 - 0.25)/(100L - 1L) + 0.25
xdumblog   = ALOG(xdumb)
; => Construct the line in Figure 7 of Gary et al., [1994]
xdat7      = [0.25,0.3,0.7,0.8,1.00,1.2,2.00,3.00,4.00]
ydat7      = [8.00,7.5,5.9,5.5,5.33,5.1,4.63,4.33,4.16]

; => Construct the line in Figure 8 of Gary et al., [1994]
xdat8      = [0.25,0.40000,0.50,0.7000,1.0000,2.0000,4.0000]
ydat8      = [0.84,0.78699,0.76,0.7336,0.7066,0.6687,0.6575]
; => natural log
xdatlog7   = ALOG(xdat7)
ydatlog7   = ALOG(ydat7)

xdatlog8   = ALOG(xdat8)
ydatlog8   = ALOG(ydat8)
; => Ln|F(x)| = Ln|A| + B Ln|x|
pfit7      = LADFIT(xdatlog7,ydatlog7,/DOUBLE)
pfit8      = LADFIT(xdatlog8,ydatlog8,/DOUBLE)
PRINT, pfit7, pfit8
;       1.6926014     -0.23088540
;     -0.33840346    -0.092284297
; => Power-Law Line
fitlinplo7 = pfit7[0] + pfit7[1]*xdumblog
fitlinp7   = EXP(fitlinplo7)
fitlinplo8 = pfit8[0] + pfit8[1]*xdumblog
fitlinp8   = EXP(fitlinplo8)

; => Power-Law Line with initial offset
dfit7      = COMFIT(xdat7,ydat7,[pfit7[0],pfit7[1],10.0],/DOUBLE,/GEOMETRIC,ITMAX=100)
dfit8      = COMFIT(xdat8,ydat8,[pfit8[0],pfit8[1],0.8394],/DOUBLE,/GEOMETRIC,ITMAX=100)
PRINT, dfit7, dfit8
;       2.0210338     -0.60954489       3.2945367
;      -2.2904976     0.027343356       3.0156473
fitlind7   = dfit7[2] + dfit7[0]*xdumb^(dfit7[1])
fitlind8   = dfit8[2] + dfit8[0]*xdumb^(dfit8[1])

xttl       = '!7b!3'+'!D'+'!9#'+'!3'+',c'+'!N'
yttl7      = 'T!D!9#'+'!3'+',h'+'!N'+'/T!D!9#'+'!3'+',c'+'!N'
yttl8      = 'T!D!9x'+'!3'+',h'+'!N'+'/T!D!9#'+'!3'+',h'+'!N'
xtv        = [0.3,0.5,0.7,1.0,1.5,2.0,3.0,4.0]
ytv7       = [4.0,5.0,6.0,7.0,8.0,9.0,10.]
ytv8       = [0.6,0.7,0.8,0.9,1.0,1.5]
xtn        = STRTRIM(STRING(FORMAT='(f8.1)',xtv),2)
ytn7       = STRTRIM(STRING(FORMAT='(f8.1)',ytv7),2)
ytn8       = STRTRIM(STRING(FORMAT='(f8.1)',ytv8),2)
xts        = N_ELEMENTS(xtn) - 1L
yts7       = N_ELEMENTS(ytn7) - 1L
yts8       = N_ELEMENTS(ytn8) - 1L
plim7      = {XRANGE:[0.25,4.0],YRANGE:[4.0,10.0],XSTYLE:1,YSTYLE:1,XLOG:1,YLOG:1,$
              YMINOR:10,XTITLE:xttl,YTITLE:yttl7,CHARSIZE:2.0,TICKLEN:1.  ,$
              XTICKNAME:xtn,XTICKV:xtv,XTICKS:xts,YTICKNAME:ytn7,YTICKV:ytv7,YTICKS:yts7}

plim8      = {XRANGE:[0.25,4.0],YRANGE:[0.6,1.5],XSTYLE:1,YSTYLE:1,XLOG:1,YLOG:1,$
              YMINOR:10,XTITLE:xttl,YTITLE:yttl8,CHARSIZE:2.0,TICKLEN:1.  ,$
              XTICKNAME:xtn,XTICKV:xtv,XTICKS:xts,YTICKNAME:ytn8,YTICKV:ytv8,YTICKS:yts8}
WSET,0
PLOT,xdumb,fitlinp7,/NODATA,_EXTRA=plim7,XGRIDSTYLE=1,YGRIDSTYLE=1
  OPLOT,xdumb,fitlinp7,LINESTYLE=1,COLOR=250L,THICK=2.0
  OPLOT,xdumb,fitlind7,LINESTYLE=1,COLOR= 50L,THICK=2.0

;wi,1
WSET,1
PLOT,xdumb,fitlinp8,/NODATA,_EXTRA=plim8,XGRIDSTYLE=1,YGRIDSTYLE=1
  OPLOT,xdumb,fitlinp8,LINESTYLE=1,COLOR=250L,THICK=2.0
  OPLOT,xdumb,fitlind8,LINESTYLE=1,COLOR= 50L,THICK=2.0

; => To test against Figure 7, interpolate fit line to the observed beta_parc values
;      and if result < tpar_hc => Unstable


unq         = UNIQ(evns,SORT(evns))
s_scets     = scets[unq]
s_scete     = scete[unq]
s_unixs     = time_double(s_scets)
beta_cpar   = beta_pac[unq,*]
tanih       = tanis_h[unq,*]
tanic       = tanis_c[unq,*]
tparhc      = thc_par[unq,*]
sp          = SORT(s_unixs)
s_scets     = s_scets[sp]
s_scete     = s_scete[sp]
beta_cpar  = beta_cpar[sp,*]
tanih      = tanih[sp,*]
tanic      = tanic[sp,*]
tparhc     = tparhc[sp,*]

temp_7ts    = interp(fitlind7,xdumb,beta_cpar[*,0],/NO_EXTRAP)
temp_7te    = interp(fitlind7,xdumb,beta_cpar[*,1],/NO_EXTRAP)
temp_7t     = [[temp_7ts],[temp_7te]]

temp_8ts    = interp(fitlind8,xdumb,beta_cpar[*,0],/NO_EXTRAP)
temp_8te    = interp(fitlind8,xdumb,beta_cpar[*,1],/NO_EXTRAP)
temp_8t     = [[temp_8ts],[temp_8te]]

gary_test_0 = (beta_cpar GT 6d-1 AND tanih GT 75d-2) OR  (beta_cpar GT 6d-1 AND tparhc GT 75d-1)
gary_test_1 = (beta_cpar GT 6d-1 AND tanih GT 75d-2) AND (beta_cpar GT 6d-1 AND tparhc GT 75d-1)
gary_test_2 = (beta_cpar GT 6d-1 AND tanih GT 75d-2)
gary_test_3 = (temp_7t LE tanih)                        ; => Figure 7 threshold
gary_test_4 = (temp_8t LE tparhc)                       ; => Figure 8 threshold
;gary_test_3 = (beta_cpar GT 3d-1 AND tparhc GT 75d-1)
;gary_test_4 = (tanih GT 75d-2) OR (tparhc GT 75d-1)


mform       = '(";   ",a23,5I11.1)'
FOR j=0L, N_ELEMENTS(s_scets) - 1L DO BEGIN  $
  PRINT,FORMAT=mform,s_scets[j],gary_test_0[j,0],gary_test_1[j,0],gary_test_2[j,0],$
                     gary_test_3[j,0],gary_test_4[j,0]
;----------------------------------------------------------------------------------------------
;       Date        Time           Test 0     Test 1     Test 2     Test 3     Test 4
;         [Start TDSS]
;==============================================================================================
;   1997-12-10/04:33:13.957          1          1          1          0          1
;----------------------------------------------------------------------------------------------
;   1998-08-26/06:40:24.472          1          1          1          0          1
;   1998-08-26/06:40:53.292          1          0          1          0          1
;   1998-08-26/06:41:08.353          1          0          1          0          1
;   1998-08-26/06:41:35.975          1          0          1          0          1
;   1998-08-26/06:41:42.365          1          0          1          0          1
;   1998-08-26/06:41:51.600          1          0          1          0          1
;   1998-08-26/06:41:54.666          1          0          1          0          1
;   1998-08-26/06:41:56.261          1          0          1          0          1
;   1998-08-26/06:41:57.584          1          0          1          0          1
;   1998-08-26/06:42:04.115          1          0          1          0          1
;   1998-08-26/06:42:07.483          1          0          1          0          1
;----------------------------------------------------------------------------------------------
;   1998-09-24/23:20:37.194          1          0          1          0          1
;   1998-09-24/23:22:24.983          0          0          0          0          0
;   1998-09-24/23:22:46.502          0          0          0          0          0
;   1998-09-24/23:30:46.893          0          0          0          0          1
;   1998-09-24/23:43:17.303          0          0          0          0          1
;   1998-09-24/23:45:50.535          0          0          0          0          1
;   1998-09-24/23:45:51.730          0          0          0          0          1
;   1998-09-24/23:48:37.371          0          0          0          0          1
;   1998-09-24/23:48:40.482          0          0          0          0          1
;   1998-09-24/23:48:49.973          0          0          0          0          1
;   1998-09-25/00:04:02.897          1          0          1          0          1
;   1998-09-25/00:05:21.783          1          0          1          0          1
;   1998-09-25/00:14:48.955          0          0          0          0          1
;----------------------------------------------------------------------------------------------
;   2000-02-11/23:33:54.843          1          1          1          0          1
;   2000-02-11/23:33:56.703          1          0          1          0          1
;   2000-02-11/23:33:59.082          1          0          1          0          1
;   2000-02-11/23:34:25.854          0          0          0          0          1
;   2000-02-11/23:34:27.416          0          0          0          0          1
;   2000-02-12/00:14:20.060          1          1          1          0          1
;   2000-02-12/00:26:15.569          1          1          1          0          1
;   2000-02-12/00:27:17.494          1          0          1          0          1
;----------------------------------------------------------------------------------------------

FOR j=0L, N_ELEMENTS(s_scete) - 1L DO BEGIN  $
  PRINT,FORMAT=mform,s_scete[j],gary_test_0[j,0],gary_test_1[j,0],gary_test_2[j,0],$
                     gary_test_3[j,0],gary_test_4[j,0]
;----------------------------------------------------------------------------------------------
;       Date        Time           Test 0     Test 1     Test 2     Test 3     Test 4
;          [End TDSS]
;==============================================================================================
;   1997-12-10/04:33:15.048          1          1          1          0          1
;----------------------------------------------------------------------------------------------
;   1998-08-26/06:40:25.563          1          1          1          0          1
;   1998-08-26/06:40:54.383          1          0          1          0          1
;   1998-08-26/06:41:09.444          1          0          1          0          1
;   1998-08-26/06:41:37.066          1          0          1          0          1
;   1998-08-26/06:41:43.456          1          0          1          0          1
;   1998-08-26/06:41:52.691          1          0          1          0          1
;   1998-08-26/06:41:55.757          1          0          1          0          1
;   1998-08-26/06:41:57.352          1          0          1          0          1
;   1998-08-26/06:41:58.675          1          0          1          0          1
;   1998-08-26/06:42:05.206          1          0          1          0          1
;   1998-08-26/06:42:08.575          1          0          1          0          1
;----------------------------------------------------------------------------------------------
;   1998-09-24/23:20:38.285          1          0          1          0          1
;   1998-09-24/23:22:26.074          0          0          0          0          0
;   1998-09-24/23:22:47.593          0          0          0          0          0
;   1998-09-24/23:30:47.984          0          0          0          0          1
;   1998-09-24/23:43:18.394          0          0          0          0          1
;   1998-09-24/23:45:51.626          0          0          0          0          1
;   1998-09-24/23:45:52.821          0          0          0          0          1
;   1998-09-24/23:48:38.462          0          0          0          0          1
;   1998-09-24/23:48:41.573          0          0          0          0          1
;   1998-09-24/23:48:51.064          0          0          0          0          1
;   1998-09-25/00:04:03.988          1          0          1          0          1
;   1998-09-25/00:05:22.874          1          0          1          0          1
;   1998-09-25/00:14:50.046          0          0          0          0          1
;----------------------------------------------------------------------------------------------
;   2000-02-11/23:33:55.934          1          1          1          0          1
;   2000-02-11/23:33:57.794          1          0          1          0          1
;   2000-02-11/23:34:00.173          1          0          1          0          1
;   2000-02-11/23:34:26.945          0          0          0          0          1
;   2000-02-11/23:34:28.507          0          0          0          0          1
;   2000-02-12/00:14:21.151          1          1          1          0          1
;   2000-02-12/00:26:16.660          1          1          1          0          1
;   2000-02-12/00:27:18.585          1          0          1          0          1
;----------------------------------------------------------------------------------------------



;-----------------------------------------------------------------------------------------
; => Constants and dummy variables
;-----------------------------------------------------------------------------------------
f       = !VALUES.F_NAN
d       = !VALUES.D_NAN
kB      = 1.3806504d-23     ;  => Boltzmann Constant (J/K)
muo     = 4d0*!DPI*1d-7     ;  => Permeability of free space (N/A^2 or H/m)
K_eV    = 1.160474d4        ;  => Conversion  = degree Kelvin/eV
epo     = 8.854187817d-12   ;  => Permittivity of free space (F/m)
muo     = 4d0*!DPI*1d-7     ;  => Permeability of free space (N/A^2 or H/m)
me      = 9.1093897d-31     ;  => Electron mass (kg)
mp      = 1.6726231d-27     ;  => Proton mass (kg)
qq      = 1.60217733d-19    ;  => Fundamental charge (C)
c       = 2.99792458d8      ;  => Speed of light in vacuum (m/s)
c2      = (c*1d-3)^2        ;  => " " squared (km/s)^2
me_ev   = 0.5109906d6       ;  => Electron mass in eV/c^2
me_3dp  = me_ev/c2          ;  => Electron mass [eV/(km/s)^2]
mp_ev   = 938.27231d6       ;  => Proton mass in eV/c^2
mp_3dp  = mp_ev/c2          ;  => Proton mass [eV/(km/s)^2]
; => Multiplicative factors
vthefac = SQRT(2d0*K_eV*kB/me)                ; => Thermal speed factor [km/s eV^(-1/2)]
vthpfac = SQRT(2d0*K_eV*kB/mp)
wcefac  = qq*1d-9/me                          ; => Cyclotron frequency factor [rad/s nT^(-1)]
wcpfac  = qq*1d-9/mp                          ; => Cyclotron frequency factor [rad/s nT^(-1)]
wpefac  = SQRT((1d6*qq^2)/(me*epo))           ; => Plasma frequency factor [rad/s cm^(3/2)]
wppfac  = SQRT((1d6*qq^2)/(mp*epo))           ; => Plasma frequency factor [rad/s cm^(3/2)]

valffac = 1d-9/SQRT(muo*mp*1d6)
csfac   = SQRT((K_eV*kB)/mp)
;-----------------------------------------------------------------------------------------
; => Special Example
;-----------------------------------------------------------------------------------------
evns     = 00010488L
scets    = '1998-08-26/06:40:24.472'
scete    = '1998-08-26/06:40:25.563'
wscframe = [5d0,30d0]*(2d0*!DPI)  ; => SC Frame frequency of observed wave [rad/s]

date     = '082698'
tramp    = '1998-08-26/06:40:24.972'
; => Using RHO8 from JCK's site
vshn80   = 687.4                    ; => Up/Downstream normal flow speed [SC frame]
gnorm80  = [-0.655,0.040,-0.754]    ; => Shock normal vector
; => Using RHO9 from JCK's site
vshn90   = 747.2                    ; => Up/Downstream normal flow speed [SC frame]
gnorm90  = [-0.822,0.138,-0.553]    ; => Shock normal vector

test0    = tdss_lhw_stats_read(DATE=date)
evn0     = test0.EVENT_N
good0    = WHERE(evn0 EQ evns[0],gd0)
PRINT,';  ', gd0
;            36
evn0     = evn0[good0]
thkbl0   = test0.THETA_KB[good0,0]
thkbh0   = test0.THETA_KB[good0,1]
thkvl0   = test0.THETA_KV[good0,0]
thkvh0   = test0.THETA_KV[good0,1]
kvec0    = test0.KVEC[good0,*]

thkbl0s  = thkbl0 < (18d1 - thkbl0)
thkbh0s  = thkbh0 < (18d1 - thkbh0)
thkvl0s  = thkvl0 < (18d1 - thkvl0)
thkvh0s  = thkvh0 < (18d1 - thkvh0)

PRINT,'; ', MIN(thkbl0s,/NAN), MAX(thkbl0s,/NAN), MEAN(thkbl0s,/NAN), STDDEV(thkbl0s,/NAN)
PRINT,'; ', MIN(thkbh0s,/NAN), MAX(thkbh0s,/NAN), MEAN(thkbh0s,/NAN), STDDEV(thkbh0s,/NAN)
;        6.0010071       89.247002       47.266333       25.865496
;        20.766006       83.624001       47.518834       17.179166

PRINT,'; ', MIN(thkvl0s,/NAN), MAX(thkvl0s,/NAN), MEAN(thkvl0s,/NAN), STDDEV(thkvl0s,/NAN)
PRINT,'; ', MIN(thkvh0s,/NAN), MAX(thkvh0s,/NAN), MEAN(thkvh0s,/NAN), STDDEV(thkvh0s,/NAN)
;        11.592000       84.642998       44.468583       27.769071
;        9.9340057       87.219002       44.190416       28.536295

thkn80   = ACOS(my_dot_prod(kvec0,gnorm80,/NOM))*18d1/!DPI
thkn90   = ACOS(my_dot_prod(kvec0,gnorm90,/NOM))*18d1/!DPI
thbn80   = REPLICATE(82.2,N_ELEMENTS(evn0))
thbn90   = REPLICATE(78.7,N_ELEMENTS(evn0))
thkn80s  = thkn80 < (18d1 - thkn80)
thkn90s  = thkn90 < (18d1 - thkn90)

PRINT,'; ', MIN(thkn80s,/NAN), MAX(thkn80s,/NAN), MEAN(thkn80s,/NAN), STDDEV(thkn80s,/NAN)
PRINT,'; ', MIN(thkn90s,/NAN), MAX(thkn90s,/NAN), MEAN(thkn90s,/NAN), STDDEV(thkn90s,/NAN)
;        21.753383       89.413578       56.421155       22.482023
;        6.8984178       89.036545       46.298744       26.308994

; => Calc. dist. from ramp
del_t0   = time_double([scets[0],scete[0]]) - time_double(tramp)
dist_80  = del_t0*vshn80[0]
dist_90  = del_t0*vshn90[0]
PRINT,';  ', dist_80[0], dist_80[1]
PRINT,';  ', dist_90[0], dist_90[1]
;        -343.70001       406.25339
;        -373.60001       441.59518


;-----------------------------------------------------------------------------------------
; => Interpolated Avg. values at start and end of TDSS samples
;-----------------------------------------------------------------------------------------
no_se   = [15.2365,24.2840]                   ; => Plasma density [cm^(-3)]
tavi_se = [ 27.1161, 75.8381]                 ; => Ion Temperature [eV]
tave_se = [ 47.2018, 55.6140]                 ; => Electron Temperature [eV]
tecorse = [ 38.1028, 43.8421]                 ; => core electron temperature [eV]
tehalse = [278.0833,304.8251]                 ; => halo electron temperature [eV]
tpar_se = [ 41.1665, 56.9739]                 ; => parallel electron temperature [eV]
tpac_se = [ 32.3521, 44.8757]                 ; => core parallel electron temperature [eV]
tpah_se = [268.0002,304.4658]                 ; => halo parallel electron temperature [eV]
tper_se = [ 50.2194, 54.9342]                 ; => perpendicular electron temperature [eV]
tpec_se = [ 40.9782, 43.3252]                 ; => core perpendicular electron temperature [eV]
tpeh_se = [283.1248,305.0048]                 ; => halo perpendicular electron temperature [eV]
vsws    = [ -498.0852,    5.2454,  -16.9941]  ; => PL solar wind velocity [km/s]
vswe    = [ -633.4152,  -13.1236, -137.1909]  ; => PL solar wind velocity [km/s]
vmag_se = [  498.4027,  648.2348]             ; => PL solar wind velocity magnitudes [km/s]
quvec_s = [ -0.9678,  0.1000, -0.0477]        ; => electron heat flux vector [GSE]
quvec_e = [ -0.6213, -0.7740, -0.1216]        ; => electron heat flux vector [GSE]
qmag_se = [ 536411.401, 622388.893]           ; => electron heat flux vector magnitude [eV km/s cm^(-3)]
magf_bs = [   -2.9724,    8.6121,    1.2525]  ; => HTR magnetic field vector [nT]
magf_be = [   -9.8042,   15.4713,    4.8746]  ; => HTR magnetic field vector [nT]
bmag_se = [    9.1963,   18.9537]             ; => HTR magnetic field vector magnitude [nT]
;-----------------------------------------------------------------------------------------
; => Calculate relevant frequencies [rad/s]
;-----------------------------------------------------------------------------------------
wce_se  = wcefac[0]*bmag_se
wci_se  = wcpfac[0]*bmag_se
wlh_se  = SQRT(wce_se*wci_se)
wpe_se  = wpefac[0]*SQRT(no_se)
wpi_se  = wppfac[0]*SQRT(no_se)

PRINT,';  ', wci_se[0], wlh_se[0], wce_se[0], wpi_se[0], wpe_se[0]*1d-3
PRINT,';  ', wci_se[1], wlh_se[1], wce_se[1], wpi_se[1], wpe_se[1]*1d-3
;        0.88089795       37.746788       1617.4632       5139.0137       220.20855
;         1.8155427       77.796647       3333.6138       6487.7974       278.00441

PRINT,';  ', wlh_se[0]/(2d0*!DPI), wlh_se[1]/(2d0*!DPI)
;         6.0075879       12.381721
;-----------------------------------------------------------------------------------------
; => Calculate thermal speeds [km/s]
;-----------------------------------------------------------------------------------------
vthe_se = vthefac[0]*SQRT(tave_se)*1d-3
vthi_se = vthpfac[0]*SQRT(tavi_se)*1d-3
valf_se = valffac[0]*bmag_se/SQRT(no_se)*1d-3
c_sound = csfac[0]*SQRT(tave_se + 3d0*tavi_se)*1d-3

PRINT,';  ', valf_se[0], c_sound[0], vthi_se[0], vthe_se[0]
PRINT,';  ', valf_se[1], c_sound[1], vthi_se[1], vthe_se[1]
;         51.388570       110.96774       72.075743       4074.8273
;         83.893806       164.68428       120.53669       4423.0515

;-----------------------------------------------------------------------------------------
; => Calculate relevant scales [km]
;-----------------------------------------------------------------------------------------
inert_e = c[0]/wpe_se*1d-3
inert_i = c[0]/wpi_se*1d-3
rho_ce  = vthe_se/wce_se
rho_ci  = vthi_se/wci_se

PRINT,';  ', inert_e[0], rho_ce[0], inert_i[0], rho_ci[0]
PRINT,';  ', inert_e[1], rho_ce[1], inert_i[1], rho_ci[1]
;         1.3614024       2.5192705       58.336575       81.820764
;         1.0783730       1.3268038       46.208665       66.391546



;-----------------------------------------------------------------------------------------
; => Constants and dummy variables
;-----------------------------------------------------------------------------------------
f       = !VALUES.F_NAN
d       = !VALUES.D_NAN
kB      = 1.3806504d-23     ;  => Boltzmann Constant (J/K)
muo     = 4d0*!DPI*1d-7     ;  => Permeability of free space (N/A^2 or H/m)
K_eV    = 1.160474d4        ;  => Conversion  = degree Kelvin/eV
epo     = 8.854187817d-12   ;  => Permittivity of free space (F/m)
muo     = 4d0*!DPI*1d-7     ;  => Permeability of free space (N/A^2 or H/m)
me      = 9.1093897d-31     ;  => Electron mass (kg)
mp      = 1.6726231d-27     ;  => Proton mass (kg)
qq      = 1.60217733d-19    ;  => Fundamental charge (C)
c       = 2.99792458d8      ;  => Speed of light in vacuum (m/s)
c2      = (c*1d-3)^2        ;  => " " squared (km/s)^2
me_ev   = 0.5109906d6       ;  => Electron mass in eV/c^2
me_3dp  = me_ev/c2          ;  => Electron mass [eV/(km/s)^2]
mp_ev   = 938.27231d6       ;  => Proton mass in eV/c^2
mp_3dp  = mp_ev/c2          ;  => Proton mass [eV/(km/s)^2]
; => Multiplicative factors
eAlfvenf = 0d0                ; => Factor for "electron Alfven" speed
wcefac   = 0d0                ; => Factor for electron cyclotron frequency
wcpfac   = 0d0                ; => Factor for proton cyclotron frequency
wpefac   = 0d0                ; => Factor for electron plasma frequency
vtefac   = 0d0                ; => Factor for electron thermal speed

eAlfvenf = 1d-9/SQRT(2d0*muo*me*1d6)
wcefac   = qq*1d-9/me
wcpfac   = qq*1d-9/mp
wpefac   = SQRT(qq^2*1d6/(epo*me))
vtefac   = SQRT(2d0*K_eV*kB/me)
;----------------------------------------------------------------------------------------------
; => Calculations of Eq. 4 from Coroniti et al., [1982]
;
;  Coroniti, F. V., C. F. Kennel, F. L. Scarf, and E. J. Smith (1982),
;    Whistler mode turbulence in the disturbed solar wind, J. Geophys.
;    Res., 87, 6029–6044, doi:10.1029/JA087iA08p06029.
;----------------------------------------------------------------------------------------------
; => Relevant parameters for the 1998-08-26/06:40:24.472 UT Event
wscframe = [5d0,30d0]*(2d0*!DPI)              ; => SC Frame frequency of observed wave [rad/s]

theta_kB = [6.0010071,89.247002]*(!DPI/18d1)  ; => Determined from MVA (rad)
theta_kV = [11.592000,84.642998]*(!DPI/18d1)  ; => Determined from MVA (rad)

vsw_mg   = [  498.4027,  648.2348]
bo_mg    = [    9.1963,   18.9537]    ; => Determined from Wind/MFI
ni_mg    = [   15.2365,   24.2840]    ; => Determined from Wind/WAVES-TNR data
te_avg   = [   47.2018,   55.6140]    ; => Determined from Wind/3DP EESA Low

wce      = 0d0                ; => electron cyclotron frequency (rad/s)
wcp      = 0d0                ; => proton cyclotron frequency (rad/s)
wlh      = 0d0                ; => lower hybrid resonance frequency (rad/s)
wpe      = 0d0                ; => electron plasma frequency (rad/s)
vte      = 0d0                ; => electron thermal speed (m/s)
rhoe     = 0d0                ; => electron thermal gyroradius (km)
eAlfvenv = 0d0                ; => "electron Alfven" speed [m/s] (= V_Ae)
vsw_eAlf = 0d0                ; => |Vsw|/(2d0*V_Ae)
e_inert  = 0d0                ; => electron inertial length (km)
wr_wce   = DBLARR(2,2)        ; => w_r/w_ce  [real freqs, Bo]


eAlfvenv = eAlfvenf[0]*bo_mg/SQRT(ni_mg)
vsw_eAlf = vsw_mg/(2d0*eAlfvenv*1d-3)
PRINT,';  ', eAlfvenv[0]*1d-3, vsw_eAlf[0]
PRINT,';  ', eAlfvenv[1]*1d-3, vsw_eAlf[1]
;         1557.0621      0.16004587
;         2541.9635      0.12750671

wce      = wcefac[0]*bo_mg
wcp      = wcpfac[0]*bo_mg
wlh      = SQRT(wce*wcp)
wpe      = wpefac[0]*SQRT(ni_mg)
vte      = vtefac[0]*SQRT(te_avg)
rhoe     = vte*1d-3/wce
e_inert  = c*1d-3/wpe        ; => electron inertial length (km)
PRINT,';  ', e_inert[0], rhoe[0], vte[0]*1d-3, wce[0], wpe[0]*1d-3
PRINT,';  ', e_inert[1], rhoe[1], vte[1]*1d-3, wce[1], wpe[1]*1d-3
;         1.3614024       2.5192705       4074.8273       1617.4632       220.20855
;         1.0783730       1.3268038       4423.0515       3333.6138       278.00441


; => Estimate SC-Frame wave numbers from above data
; [wr, Bo/Ni/Vsw, theta_kB, theta_kV]
; [i ,     j    ,    k    ,    m    ]
wr_wce[*,0] = wscframe[*]/wce[0]
wr_wce[*,1] = wscframe[*]/wce[1]

costhkb     = ABS(COS(theta_kB))
costhkv     = ABS(COS(theta_kV))
costhkb2    = costhkb^2
costhkv2    = costhkv^2
kscframel   = DBLARR(2,2,2,2)   ; => Units of inverse electron inertial lengths
kscframeh   = DBLARR(2,2,2,2)   ; => Units of inverse electron inertial lengths
FOR i=0L, 1L DO BEGIN                                            $
  FOR j=0L, 1L DO BEGIN                                          $
    FOR k=0L, 1L DO BEGIN                                        $
      FOR m=0L, 1L DO BEGIN                                      $
        temp0 = vsw_eAlf[j]*costhkv[m]/costhkb[k]              & $
        temp1 = temp0^2                                        & $
        temp2 = wr_wce[i,j]/costhkb[k]                         & $
        kscframel[i,j,k,m] = -1d0*temp0 + SQRT(temp1 + temp2)  & $
        kscframeh[i,j,k,m] = temp0 + SQRT(temp1 + temp2)

; => convert to inverse km
kscframe_el  = DBLARR(2,2,2,2)   ; => [km^(-1)]
kscframe_eh  = DBLARR(2,2,2,2)   ; => [km^(-1)]
FOR j=0L, 1L DO BEGIN                                      $
  kscframe_el[*,j,*,*] = kscframel[*,j,*,*]/e_inert[j]   & $
  kscframe_eh[*,j,*,*] = kscframeh[*,j,*,*]/e_inert[j]


PRINT,'; ', MIN(  kscframel[0,*,*,*],/NAN), MAX(  kscframel[0,*,*,*],/NAN), $
            MIN(kscframe_el[0,*,*,*],/NAN), MAX(kscframe_el[0,*,*,*],/NAN)
PRINT,'; ', MIN(  kscframel[1,*,*,*],/NAN), MAX(  kscframel[1,*,*,*],/NAN), $
            MIN(kscframe_el[1,*,*,*],/NAN), MAX(kscframe_el[1,*,*,*],/NAN)
;      0.033307696      0.52755161     0.030886989      0.38750599
;       0.14390416       2.0505534      0.13344562       1.5062067

PRINT,'; ', MIN(  kscframeh[0,*,*,*],/NAN), MAX(  kscframeh[0,*,*,*],/NAN), $
            MIN(kscframe_eh[0,*,*,*],/NAN), MAX(kscframe_eh[0,*,*,*],/NAN)
PRINT,'; ', MIN(  kscframeh[1,*,*,*],/NAN), MAX(  kscframeh[1,*,*,*],/NAN), $
            MIN(kscframe_eh[1,*,*,*],/NAN), MAX(kscframe_eh[1,*,*,*],/NAN)
;       0.11004723       23.921529      0.10204931       17.662196
;       0.25071388       24.225787      0.23249272       17.834737


PRINT,'; ', MIN(  kscframel,/NAN), MAX(  kscframel,/NAN), $
            MIN(kscframe_el,/NAN), MAX(kscframe_el,/NAN)
;      0.033307696       2.0505534     0.030886989       1.5062067

PRINT,'; ', MIN(  kscframeh,/NAN), MAX(  kscframeh,/NAN), $
            MIN(kscframe_eh,/NAN), MAX(kscframe_eh,/NAN)
;       0.11004723       24.225787      0.10204931       17.834737


;  => k_perp = (M_i/m_e)^(1/2) alpha k_para  [Cairns and McMillan, 2005]
;       where:  0.5 < alpha < 2.0
;
;  Cairns, I. H., and B. F. McMillan (2005), Electron acceleration by 
;    lower hybrid waves in magnetic reconnection regions, Phys. Plasmas, 
;    12, 102,110–+, doi:10.1063/1.2080567.

kscframe_el_low  = kscframe_el/2d0
kscframe_el_high = kscframe_el*2d0
kscframe_eh_low  = kscframe_eh/2d0
kscframe_eh_high = kscframe_eh*2d0

PRINT,'; ', MIN(kscframe_el_low ,/NAN), MAX(kscframe_el_low ,/NAN), $
            MIN(kscframe_el_high,/NAN), MAX(kscframe_el_high,/NAN)
;      0.015443494      0.75310333     0.061773978       3.0124133
PRINT,'; ', MIN(kscframe_eh_low ,/NAN), MAX(kscframe_eh_low ,/NAN), $
            MIN(kscframe_eh_high,/NAN), MAX(kscframe_eh_high,/NAN)
;      0.051024657       8.9173685      0.20409863       35.669474


good    = WHERE(kscframe_eh LT 10.)
kwave_e = [MIN(kscframe_el,/NAN),MAX(kscframe_el,/NAN),$
           MIN(kscframe_eh[good],/NAN),MAX(kscframe_eh[good],/NAN)]
costhkv = COS(theta_kV)
wplasma = DBLARR(2,2,2,4)
FOR i=0L, 1L DO BEGIN                                            $
  FOR j=0L, 1L DO BEGIN                                          $
    FOR k=0L, 1L DO BEGIN                                        $
      FOR m=0L, 3L DO BEGIN                                      $
        wplasma[i,j,k,m] = wscframe[i] - kwave_e[m]*vsw_mg[j]*costhkv[k]

PRINT,'; ', MIN(wplasma[*,*,*,0:1],/NAN), MAX(wplasma[*,*,*,0:1],/NAN), $
            MIN(wplasma[*,*,*,2:3],/NAN), MAX(wplasma[*,*,*,2:3],/NAN)
;       -925.04483       187.05834      -1985.7090       183.74706
PRINT,'; ', kwave_e
; => Wave number estimates [km^(-1)]
;      0.030886989       1.5062067      0.10204931       3.1765098

bad     = WHERE(wplasma LT 0,bd)
IF (bd GT 0) THEN wplasma[bad] = d
PRINT,'; ', MIN(wplasma[*,*,*,0:1],/NAN), MAX(wplasma[*,*,*,0:1],/NAN), $
            MIN(wplasma[*,*,*,2:3],/NAN), MAX(wplasma[*,*,*,2:3],/NAN)
;        11.802288       187.05834       25.239907       183.74706

PRINT,'; ', MIN(wplasma[*,*,*,0:1],/NAN)/(2d0*!DPI), MAX(wplasma[*,*,*,0:1],/NAN)/(2d0*!DPI), $
            MIN(wplasma[*,*,*,2:3],/NAN)/(2d0*!DPI), MAX(wplasma[*,*,*,2:3],/NAN)/(2d0*!DPI)
; => Plasma frame frequency estimates [Hz]
;        1.8783925       29.771260       4.0170559       29.244252

PRINT,'; ', MIN(wplasma[*,*,*,0:1],/NAN)/wcp[0], MAX(wplasma[*,*,*,0:1],/NAN)/wcp[0], $
            MIN(wplasma[*,*,*,2:3],/NAN)/wcp[0], MAX(wplasma[*,*,*,2:3],/NAN)/wcp[0]
; => Plasma frame frequency estimates [proton cyclotron frequencies, 0]
;        13.398020       212.34962       28.652475       208.59063

PRINT,'; ', MIN(wplasma[*,*,*,0:1],/NAN)/wcp[1], MAX(wplasma[*,*,*,0:1],/NAN)/wcp[1], $
            MIN(wplasma[*,*,*,2:3],/NAN)/wcp[1], MAX(wplasma[*,*,*,2:3],/NAN)/wcp[1]
; => Plasma frame frequency estimates [proton cyclotron frequencies, 0]
;        6.5006943       103.03164       13.902128       101.20778

'----------------------------------------------------------------------------------------------'
'Resonance Estimates (from parallel cuts of 3DP EESA Low DFs)                                  '
'----------------------------------------------------------------------------------------------'
; => Constants and dummy variables
f      = !VALUES.F_NAN
d      = !VALUES.D_NAN
me     = 9.1093897d-31     ; -Electron mass (kg)
mp     = 1.6726231d-27     ; -Proton mass (kg)
mrat   = SQRT(mp/me)

vpara = [7e3,20e3]                 ; => Parallel Resonance Velocity determined from tail of 3DP ELB DF
freq  = [6d0,13d0]                 ; => Frequency (Hz) [range estimate for f_lh]
rhoe  = [2.5192705d0,1.3268038d0]  ; => electron thermal gyroradius (km)


;  [freq, vpara]
;  [  i ,   j  ]
kpara = DBLARR(2,2)    ; => Parallel Wave Number [km^(-1)]
kperp = DBLARR(2,2)    ; => Perpendicular Wave Number [km^(-1)]

FOR j=0L, 1L DO BEGIN                                      $
  kpara[*,j] = (2d0*!DPI*freq)/vpara[j]

PRINT,'; ', kpara[*,0]
PRINT,'; ', kpara[*,1]
; => |k_para| [km^(-1)]
;     0.0053855874     0.011668773
;     0.0018849556    0.0040840704


kperp = mrat[0]*kpara
PRINT,'; ', kperp[*,0]
PRINT,'; ', kperp[*,1]
; => |k_perp| [km^(-1)]
;       0.23077432      0.50001103
;      0.080771013      0.17500386

knumb = SQRT(kpara^2 + kperp^2)
PRINT,'; ', knumb[*,0]
PRINT,'; ', knumb[*,1]
; => |k| [km^(-1)]
;       0.23083715      0.50014717
;      0.080793004      0.17505151

;  [freq, vpara, rho_e]
;  [  i ,   j  ,   k  ]
kpar_rho = DBLARR(2,2,2)    ; => Parallel Wave Number [electron thermal gyroradii]
kper_rho = DBLARR(2,2,2)    ; => Perpendicular Wave Number [electron thermal gyroradii]
FOR i=0L, 1L DO BEGIN                                      $
  FOR j=0L, 1L DO BEGIN                                    $
    kpar_rho[i,j,*] = kpara[i,j]*rhoe[*]                 & $
    kper_rho[i,j,*] = kperp[i,j]*rhoe[*]


PRINT,'; ', kpar_rho[0,0,0], kpar_rho[1,0,0], kpar_rho[0,1,0], kpar_rho[1,1,0]
PRINT,'; ', kpar_rho[0,0,1], kpar_rho[1,0,1], kpar_rho[0,1,1], kpar_rho[1,1,1]
; => |k_para| rho_ce
;      0.013567751     0.029396795    0.0047487130     0.010288878
;     0.0071456178     0.015482172    0.0025009662    0.0054187602


PRINT,'; ', kper_rho[0,0,0], kper_rho[1,0,0], kper_rho[0,1,0], kper_rho[1,1,0]
PRINT,'; ', kper_rho[0,0,1], kper_rho[1,0,1], kper_rho[0,1,1], kper_rho[1,1,1]
; => |k_perp| rho_ce
;       0.58138294       1.2596630      0.20348403      0.44088206
;       0.30619225      0.66341654      0.10716729      0.23219579


PRINT,'; ', MIN(kpar_rho[*,*,0],/NAN), MAX(kpar_rho[*,*,0],/NAN), $
            MIN(kpar_rho[*,*,1],/NAN), MAX(kpar_rho[*,*,1],/NAN)
PRINT,'; ', MIN(kper_rho[*,*,0],/NAN), MAX(kper_rho[*,*,0],/NAN), $
            MIN(kper_rho[*,*,1],/NAN), MAX(kper_rho[*,*,1],/NAN)
;     0.0047487130     0.029396795    0.0025009662     0.015482172
;       0.20348403       1.2596630      0.10716729      0.66341654

kper_ra  = [MIN(kperp,/NAN),MAX(kperp,/NAN)]
kpar_ra  = [MIN(kpara,/NAN),MAX(kpara,/NAN)]
kn_ra    = [MIN(knumb,/NAN),MAX(knumb,/NAN)]
vph_perp = DBLARR(2,2)    ; => Perpendicular Phase Speed (km/s)
vph_para = DBLARR(2,2)    ; => Parallel Phase Speed (km/s)
vphase   = DBLARR(2,2)    ; => Total phase speed (km/s)
FOR i=0L, 1L DO BEGIN                                      $
  FOR j=0L, 1L DO BEGIN                                    $
    vph_para[i,j] = (2d0*!DPI*freq[i])/kpar_ra[j]        & $
    vph_perp[i,j] = (2d0*!DPI*freq[i])/kper_ra[j]        & $
    vphase[i,j]   = (2d0*!DPI*freq[i])/kn_ra[j]

PRINT,'; ', vph_para[*,0]
PRINT,'; ', vph_para[*,1]
; => |V_ph,para|  [km/s]
;        20000.000       43333.333
;        3230.7692       7000.0000

PRINT,'; ', vph_perp[*,0]
PRINT,'; ', vph_perp[*,1]
; => |V_ph,perp|  [km/s]
;        466.74061       1011.2713
;        75.396560       163.35921

PRINT,'; ', vphase[*,0]
PRINT,'; ', vphase[*,1]
; => |V_ph|  [km/s]
;        466.61357       1010.9961
;        75.376038       163.31475

'----------------------------------------------------------------------------------------------'
'Resonance Estimates (from both cuts of 3DP EESA Low DFs)                                      '
'----------------------------------------------------------------------------------------------'
; => Constants and dummy variables
f      = !VALUES.F_NAN
d      = !VALUES.D_NAN
me     = 9.1093897d-31     ; -Electron mass (kg)
mp     = 1.6726231d-27     ; -Proton mass (kg)
mrat   = SQRT(mp/me)

vpara = [7d3,20d3]                 ; => Parallel Resonance Velocity determined from tail of 3DP ELB DF
vperp = [17d1,7d2]                 ; => Perpendicular Resonance Velocity determined from PESA High and SWE
freq  = [6d0,13d0]                 ; => Frequency (Hz) [range estimate for f_lh]
rhoe  = [2.5192705d0,1.3268038d0]  ; => electron thermal gyroradius (km)


;  [freq, vpara]
;  [  i ,   j  ]
kpara = DBLARR(2,2)    ; => Parallel Wave Number [km^(-1)]
;  [freq, vperp]
;  [  i ,   j  ]
kperp = DBLARR(2,2)    ; => Perpendicular Wave Number [km^(-1)]

FOR j=0L, 1L DO BEGIN                                      $
  kpara[*,j] = (2d0*!DPI*freq)/vpara[j]                  & $
  kperp[*,j] = (2d0*!DPI*freq)/vperp[j]

PRINT,'; ', kpara[*,0]
PRINT,'; ', kpara[*,1]
; => |k_para| [km^(-1)]
;     0.0053855874     0.011668773
;     0.0018849556    0.0040840704

PRINT,'; ', kperp[*,0]
PRINT,'; ', kperp[*,1]
; => |k_perp| [km^(-1)]
;       0.22175948      0.48047888
;      0.053855874      0.11668773

knumb = SQRT(kpara^2 + kperp^2)
PRINT,'; ', knumb[*,0]
PRINT,'; ', knumb[*,1]
; => |k| [km^(-1)]
;       0.22182487      0.48062055
;      0.053888851      0.11675918

theta = DBLARR(2,2)    ; => Resulting wave normal angle [deg]
FOR j=0L, 1L DO BEGIN                                      $
  theta[*,j] = ATAN(kperp[*,j],kpara[*,j])*18d1/!DPI

PRINT,'; ', theta[*,0]
PRINT,'; ', theta[*,1]
; => theta_kB [degrees]
;        88.608805       88.608805
;        87.995466       87.995466

;  [freq, vpara, rho_e]
;  [  i ,   j  ,   k  ]
kpar_rho = DBLARR(2,2,2)    ; => Parallel Wave Number [electron thermal gyroradii]
kper_rho = DBLARR(2,2,2)    ; => Perpendicular Wave Number [electron thermal gyroradii]
FOR i=0L, 1L DO BEGIN                                      $
  FOR j=0L, 1L DO BEGIN                                    $
    kpar_rho[i,j,*] = kpara[i,j]*rhoe[*]                 & $
    kper_rho[i,j,*] = kperp[i,j]*rhoe[*]

PRINT,'; ', kpar_rho[0,0,0], kpar_rho[1,0,0], kpar_rho[0,1,0], kpar_rho[1,1,0]
PRINT,'; ', kpar_rho[0,0,1], kpar_rho[1,0,1], kpar_rho[0,1,1], kpar_rho[1,1,1]
; => |k_para| rho_ce
;      0.013567751     0.029396795    0.0047487130     0.010288878
;     0.0071456178     0.015482172    0.0025009662    0.0054187602


PRINT,'; ', kper_rho[0,0,0], kper_rho[1,0,0], kper_rho[0,1,0], kper_rho[1,1,0]
PRINT,'; ', kper_rho[0,0,1], kper_rho[1,0,1], kper_rho[0,1,1], kper_rho[1,1,1]
; => |k_perp| rho_ce
;       0.55867212       1.2104563      0.13567751      0.29396795
;       0.29423132      0.63750120     0.071456178      0.15482172


kper_ra  = [MIN(kperp,/NAN),MAX(kperp,/NAN)]
kpar_ra  = [MIN(kpara,/NAN),MAX(kpara,/NAN)]
kn_ra    = [MIN(knumb,/NAN),MAX(knumb,/NAN)]
vph_perp = DBLARR(2,2)    ; => Perpendicular Phase Speed (km/s)
vph_para = DBLARR(2,2)    ; => Parallel Phase Speed (km/s)
vphase   = DBLARR(2,2)    ; => Total phase speed (km/s)
FOR i=0L, 1L DO BEGIN                                      $
  FOR j=0L, 1L DO BEGIN                                    $
    vph_para[i,j] = (2d0*!DPI*freq[i])/kpar_ra[j]        & $
    vph_perp[i,j] = (2d0*!DPI*freq[i])/kper_ra[j]        & $
    vphase[i,j]   = (2d0*!DPI*freq[i])/kn_ra[j]

PRINT,'; ', vph_para[*,0]
PRINT,'; ', vph_para[*,1]
; => |V_ph,para|  [km/s]
;        20000.000       43333.333
;        3230.7692       7000.0000

PRINT,'; ', vph_perp[*,0]
PRINT,'; ', vph_perp[*,1]
; => |V_ph,perp|  [km/s]
;        700.00000       1516.6667
;        78.461538       170.00000

PRINT,'; ', vphase[*,0]
PRINT,'; ', vphase[*,1]
; => |V_ph|  [km/s]
;        699.57164       1515.7386
;        78.438411       169.94989








