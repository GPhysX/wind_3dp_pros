;-----------------------------------------------------------------------------------------
; => Constants
;-----------------------------------------------------------------------------------------
f        = !VALUES.F_NAN
d        = !VALUES.D_NAN
c        = 2.99792458d8      ; -Speed of light in vacuum (m/s)
kB       = 1.380658d-23      ; -Boltzmann Constant (J/K)
epo      = 8.854187817d-12   ; -Permittivity of free space (F/m)
muo      = 4d0*!DPI*1d-7     ; -Permeability of free space (N/A^2 or H/m)
me       = 9.1093897d-31     ; -Electron mass (kg)
mp       = 1.6726231d-27     ; -Proton mass (kg)
qq       = 1.60217733d-19    ; => Fundamental charge (C)

date     = '121097'
test0    = tdss_lhw_stats_read(DATE=date)
avg_lfk0 = (test0.K_ST_LOWF_MP + test0.K_EN_LOWF_MP)/2d0
avg_hfk0 = (test0.K_ST_highF_MP + test0.K_EN_highF_MP)/2d0
freql0   = test0.FREQ_LOW_HIGH[*,0]
freqh0   = test0.FREQ_LOW_HIGH[*,1]
thkb0    = test0.THETA_KB
thkv0    = test0.THETA_KV
pkamp0   = test0.PEAK_AMP
thkbav0  = (test0.THETA_KB[*,0] + test0.THETA_KB[*,1])/2d0   ; => Avg. between start and end
thkvav0  = (test0.THETA_KV[*,0] + test0.THETA_KV[*,1])/2d0   ; => Avg. between start and end
wce0     = (test0.WCE_SE[*,0] + test0.WCE_SE[*,1])/2d0
wpe0     = (test0.WPE_SE[*,0] + test0.WPE_SE[*,1])/2d0
wlh0     = (test0.WLH_SE[*,0] + test0.WLH_SE[*,1])/2d0
vte0     = (test0.VTE_SE[*,0] + test0.VTE_SE[*,1])/2d0
rhoe0    = (test0.RHO_VTCE_SE[*,0] + test0.RHO_VTCE_SE[*,1])/2d0
thkb0    = (thkb0) < (18d1 - thkb0)
thkv0    = (thkv0) < (18d1 - thkv0)
thkb0    = (thkb0[*,0] + thkb0[*,1])/2d0
thkv0    = (thkv0[*,0] + thkv0[*,1])/2d0
vsw0     = (test0.VSW_ST + test0.VSW_EN)/2d0
magf0    = (test0.MAGF_ST + test0.MAGF_EN)/2d0
dens0    = (test0.NE_SE[*,0] + test0.NE_SE[*,1])/2d0
bmag0    = SQRT(TOTAL(magf0^2,2L,/NAN))

date     = '082698'
test1    = tdss_lhw_stats_read(DATE=date)
avg_lfk1 = (test1.K_ST_LOWF_MP + test1.K_EN_LOWF_MP)/2d0
avg_hfk1 = (test1.K_ST_highF_MP + test1.K_EN_highF_MP)/2d0
freql1   = test1.FREQ_LOW_HIGH[*,0]
freqh1   = test1.FREQ_LOW_HIGH[*,1]
thkb1    = test1.THETA_KB
thkv1    = test1.THETA_KV
pkamp1   = test1.PEAK_AMP
thkbav1  = (test1.THETA_KB[*,0] + test1.THETA_KB[*,1])/2d0   ; => Avg. between start and end
thkvav1  = (test1.THETA_KV[*,0] + test1.THETA_KV[*,1])/2d0   ; => Avg. between start and end
wce1     = (test1.WCE_SE[*,0] + test1.WCE_SE[*,1])/2d0
wpe1     = (test1.WPE_SE[*,0] + test1.WPE_SE[*,1])/2d0
wlh1     = (test1.WLH_SE[*,0] + test1.WLH_SE[*,1])/2d0
vte1     = (test1.VTE_SE[*,0] + test1.VTE_SE[*,1])/2d0
rhoe1    = (test1.RHO_VTCE_SE[*,0] + test1.RHO_VTCE_SE[*,1])/2d0
thkb1    = (thkb1) < (18d1 - thkb1)
thkv1    = (thkv1) < (18d1 - thkv1)
thkb1    = (thkb1[*,0] + thkb1[*,1])/2d0
thkv1    = (thkv1[*,0] + thkv1[*,1])/2d0
vsw1     = (test1.VSW_ST + test1.VSW_EN)/2d0
magf1    = (test1.MAGF_ST + test1.MAGF_EN)/2d0
dens1    = (test1.NE_SE[*,0] + test1.NE_SE[*,1])/2d0
bmag1    = SQRT(TOTAL(magf1^2,2L,/NAN))

date     = '092498'
test2    = tdss_lhw_stats_read(DATE=date)
avg_lfk2 = (test2.K_ST_LOWF_MP + test2.K_EN_LOWF_MP)/2d0
avg_hfk2 = (test2.K_ST_highF_MP + test2.K_EN_highF_MP)/2d0
freql2   = test2.FREQ_LOW_HIGH[*,0]
freqh2   = test2.FREQ_LOW_HIGH[*,1]
thkb2    = test2.THETA_KB
thkv2    = test2.THETA_KV
pkamp2   = test2.PEAK_AMP
thkbav2  = (test2.THETA_KB[*,0] + test2.THETA_KB[*,1])/2d0   ; => Avg. between start and end
thkvav2  = (test2.THETA_KV[*,0] + test2.THETA_KV[*,1])/2d0   ; => Avg. between start and end
wce2     = (test2.WCE_SE[*,0] + test2.WCE_SE[*,1])/2d0
wpe2     = (test2.WPE_SE[*,0] + test2.WPE_SE[*,1])/2d0
wlh2     = (test2.WLH_SE[*,0] + test2.WLH_SE[*,1])/2d0
vte2     = (test2.VTE_SE[*,0] + test2.VTE_SE[*,1])/2d0
rhoe2    = (test2.RHO_VTCE_SE[*,0] + test2.RHO_VTCE_SE[*,1])/2d0
thkb2    = (thkb2) < (18d1 - thkb2)
thkv2    = (thkv2) < (18d1 - thkv2)
thkb2    = (thkb2[*,0] + thkb2[*,1])/2d0
thkv2    = (thkv2[*,0] + thkv2[*,1])/2d0
vsw2     = (test2.VSW_ST + test2.VSW_EN)/2d0
magf2    = (test2.MAGF_ST + test2.MAGF_EN)/2d0
dens2    = (test2.NE_SE[*,0] + test2.NE_SE[*,1])/2d0
bmag2    = SQRT(TOTAL(magf2^2,2L,/NAN))

date     = '021100'
test3    = tdss_lhw_stats_read(DATE=date)
avg_lfk3 = (test3.K_ST_LOWF_MP + test3.K_EN_LOWF_MP)/2d0
avg_hfk3 = (test3.K_ST_highF_MP + test3.K_EN_highF_MP)/2d0
freql3   = test3.FREQ_LOW_HIGH[*,0]
freqh3   = test3.FREQ_LOW_HIGH[*,1]
thkb3    = test3.THETA_KB
thkv3    = test3.THETA_KV
pkamp3   = test3.PEAK_AMP
thkbav3  = (test3.THETA_KB[*,0] + test3.THETA_KB[*,1])/2d0   ; => Avg. between start and end
thkvav3  = (test3.THETA_KV[*,0] + test3.THETA_KV[*,1])/2d0   ; => Avg. between start and end
wce3     = (test3.WCE_SE[*,0] + test3.WCE_SE[*,1])/2d0
wpe3     = (test3.WPE_SE[*,0] + test3.WPE_SE[*,1])/2d0
wlh3     = (test3.WLH_SE[*,0] + test3.WLH_SE[*,1])/2d0
vte3     = (test3.VTE_SE[*,0] + test3.VTE_SE[*,1])/2d0
rhoe3    = (test3.RHO_VTCE_SE[*,0] + test3.RHO_VTCE_SE[*,1])/2d0
thkb3    = (thkb3) < (18d1 - thkb3)
thkv3    = (thkv3) < (18d1 - thkv3)
thkb3    = (thkb3[*,0] + thkb3[*,1])/2d0
thkv3    = (thkv3[*,0] + thkv3[*,1])/2d0
vsw3     = (test3.VSW_ST + test3.VSW_EN)/2d0
magf3    = (test3.MAGF_ST + test3.MAGF_EN)/2d0
dens3    = (test3.NE_SE[*,0] + test3.NE_SE[*,1])/2d0
bmag3    = SQRT(TOTAL(magf3^2,2L,/NAN))
;-----------------------------------------------------------------------------------------
; => Combine terms
;-----------------------------------------------------------------------------------------
thkb     = [thkb0,thkb1,thkb2,thkb3]
thkv     = [thkv0,thkv1,thkv2,thkv3]
vsw      = [vsw0,vsw1,vsw2,vsw3]
vmag     = SQRT(TOTAL(vsw^2,2L,/NAN))
freql    = [freql0,freql1,freql2,freql3]
freqh    = [freqh0,freqh1,freqh2,freqh3]
wce      = [wce0,wce1,wce2,wce3]
wcp      = wce*me/mp
wx1      = SQRT(2d0)*wcp            ; => Cross-over frequency
wpe      = [wpe0,wpe1,wpe2,wpe3]
wlh      = [wlh0,wlh1,wlh2,wlh3]
vte      = [vte0,vte1,vte2,vte3]
rhoe     = [rhoe0,rhoe1,rhoe2,rhoe3]
avg_lfk  = [avg_lfk0,avg_lfk1,avg_lfk2,avg_lfk3]
avg_hfk  = [avg_hfk0,avg_hfk1,avg_hfk2,avg_hfk3]
dens     = [dens0,dens1,dens2,dens3]
bmag     = [bmag0,bmag1,bmag2,bmag3]

kcwpelfm = avg_lfk[*,0]*c*1d-3/wpe
kcwpelfp = avg_lfk[*,1]*c*1d-3/wpe
kcwpehfm = avg_hfk[*,0]*c*1d-3/wpe
kcwpehfp = avg_hfk[*,1]*c*1d-3/wpe

krhoelfm = avg_lfk[*,0]*rhoe
krhoelfp = avg_lfk[*,1]*rhoe
krhoehfm = avg_hfk[*,0]*rhoe
krhoehfp = avg_hfk[*,1]*rhoe
; => Separate by plus and minus sign
avg_lfkm = avg_lfk[*,0]
avg_lfkp = avg_lfk[*,1]
avg_hfkm = avg_hfk[*,0]
avg_hfkp = avg_hfk[*,1]
; => Calculate rest frame frequencies
ckm        = (c*1d-3)
fac0       = wce*COS(thkb*!DPI/18d1)
fac1lm     = (wpe/(ckm*avg_lfkm))^2
fac1lp     = (wpe/(ckm*avg_lfkp))^2
fac1hm     = (wpe/(ckm*avg_hfkm))^2
fac1hp     = (wpe/(ckm*avg_hfkp))^2
frest_lfkm = fac0/(1d0 + fac1lm)
frest_lfkp = fac0/(1d0 + fac1lp)
frest_hfkm = fac0/(1d0 + fac1hm)
frest_hfkp = fac0/(1d0 + fac1hp)

; => Calculate index of refraction
testlm   = cold_plasma_params_2d(bmag,dens,FREQF=frest_lfkm/(2d0*!DPI),ANGLE=thkb,/ONED)
testlp   = cold_plasma_params_2d(bmag,dens,FREQF=frest_lfkp/(2d0*!DPI),ANGLE=thkb,/ONED)
testhm   = cold_plasma_params_2d(bmag,dens,FREQF=frest_hfkm/(2d0*!DPI),ANGLE=thkb,/ONED)
testhp   = cold_plasma_params_2d(bmag,dens,FREQF=frest_hfkp/(2d0*!DPI),ANGLE=thkb,/ONED)
indexlm  = testlm.INDEX_REF_1
alfvinlm = testlm.INDEX_ALFVEN
bad      = WHERE(indexlm LT 0.,bd)
IF (bd GT 0) THEN indexlm[bad] = d
indexlp  = testlp.INDEX_REF_1
alfvinlp = testlp.INDEX_ALFVEN
bad      = WHERE(indexlp LT 0.,bd)
IF (bd GT 0) THEN indexlp[bad] = d
indexhm  = testhm.INDEX_REF_1
alfvinhm = testhm.INDEX_ALFVEN
bad      = WHERE(indexhm LT 0.,bd)
IF (bd GT 0) THEN indexhm[bad] = d
indexhp  = testhp.INDEX_REF_1
alfvinhp = testhp.INDEX_ALFVEN
bad      = WHERE(indexhp LT 0.,bd)
IF (bd GT 0) THEN indexhp[bad] = d

; => Plot data
wi,0
wi,1
wi,2

; => Cross-over frequency [pg. 105, Gurnett & Bhattacharjee, [2005]]
;wxf    = SQRT(2d0)*wcp/(wlh*SQRT(1d0 + (me/mp)^2))
;wcross = MEAN(wxf,/NAN,/DOUBLE)

; => Cross-over frequencies only apply when multiple ion species exist
;     => use wcp/wlh
wcross = SQRT(me/mp)
;-------------------------------------------
xran  = [1e-4,15.0]
yran  = [1e-3,1d3]
xttl  = '!7x!3'+'!Drest!N'+'/!7x!3'+'!Dlh!N (unitless)'
yttl  = 'n!U2!N/n!DA!N'+'!U2!N (unitless)'
; => Minus Sign
xda0  = frest_lfkm/wlh
yda0  = indexlm/alfvinlm
xda2  = frest_hfkm/wlh
yda2  = indexhm/alfvinhm
; => Plus Sign
xda1  = frest_lfkp/wlh
yda1  = indexlp/alfvinlp
xda3  = frest_hfkp/wlh
yda3  = indexhp/alfvinhp
vertx = [1d0,1d0]*wcross[0]
;vertx = [1d0,1d0]*1d0/SQRT(mp/me)
verty = yran
vertl = '!7x!3'+'!Dx!N'+'/!7x!3'+'!Dlh!N'
horix = xran
horiy = [1d0,1d0]
horil = ''
xposi = 0.1
yposi = [5d2,1d2,5d1,1d1]
xx    = DINDGEN(500)*xran[1]/499L
yy    = -1d0*xx
fnam0 = 'whistler_dispersion_estimates_n2_nA2-vs-w_wlh_minus-sign'
fnam1 = 'whistler_dispersion_estimates_n2_nA2-vs-w_wlh_pluss-sign'
fnam2 = 'whistler_dispersion_estimates_n2_nA2-vs-w_wlh_both-signs'
;-------------------------------------------
xran  = [0.01,3.50]
yran  = [1e-3,1d3]
xttl  = 'kc/'+'!7x!3'+'!Dpe!N (unitless)'
yttl  = 'n!U2!N/n!DA!N'+'!U2!N (unitless)'
; => Minus Sign
xda0  = kcwpelfm
xda2  = kcwpehfm
yda0  = indexlm/alfvinlm
yda2  = indexhm/alfvinhm
; => Plus Sign
xda1  = kcwpelfp
xda3  = kcwpehfp
yda1  = indexlp/alfvinlp
yda3  = indexhp/alfvinhp
vertx = [1d0,1d0]*1d0/SQRT(mp/me)
verty = yran
vertl = '!7x!3'+'!Dpi!N'+'/'+'!7x!3'+'!Dpe!N'
horix = xran
horiy = [1d0,1d0]
xposi = 0.5
yposi = [5d2,1d2,5d1,1d1]
xx    = DINDGEN(500)*xran[1]/499L
yy    = -1d0*xx
fnam0 = 'whistler_dispersion_estimates_n2_nA2-vs-kc_wpe_minus-sign'
fnam1 = 'whistler_dispersion_estimates_n2_nA2-vs-kc_wpe_pluss-sign'
fnam2 = 'whistler_dispersion_estimates_n2_nA2-vs-kc_wpe_both-signs'
;-------------------------------------------
xran  = [0.01,3.50]
yran  = [1e-4,15.0]
xttl  = 'kc/'+'!7x!3'+'!Dpe!N (unitless)'
yttl  = '!7x!3'+'!Drest!N'+'/!7x!3'+'!Dlh!N (unitless)'
; => Minus Sign
xda0  = kcwpelfm
xda2  = kcwpehfm
yda0  = frest_lfkm/wlh
yda2  = frest_hfkm/wlh
; => Plus Sign
xda1  = kcwpelfp
xda3  = kcwpehfp
yda1  = frest_lfkp/wlh
yda3  = frest_hfkp/wlh
verty = [1d0,1d0]*wcross[0]
vertx = xran
vertl = '!7x!3'+'!Dx!N'+'/!7x!3'+'!Dlh!N'
horix = [1d0,1d0]*1d0/SQRT(mp/me)
horiy = yran
horil = '(m!De!N/M!Di!N)!U1/2!N'
xposi = 0.5
yposi = [1d0,1d-1,1d-2,1d-3]
xx    = DINDGEN(500)*xran[1]/499L
yy    = -0.0983403d0 + 2.68113d0*xx + 30.3499d0*xx^2
fnam0 = 'whistler_dispersion_estimates_w_wlh-vs-kc_wpe_minus-sign'
fnam1 = 'whistler_dispersion_estimates_w_wlh-vs-kc_wpe_pluss-sign'
fnam2 = 'whistler_dispersion_estimates_w_wlh-vs-kc_wpe_both-signs'
;-------------------------------------------
xran  = [0.01,4.00]
yran  = [1e-4,15.0]
xttl  = 'k'+'!7q!3'+'!Dce!N (unitless)'
yttl  = '!7x!3'+'!Drest!N'+'/!7x!3'+'!Dlh!N (unitless)'
; => Minus Sign
xda0  = krhoelfm
xda2  = krhoehfm
yda0  = frest_lfkm/wlh
yda2  = frest_hfkm/wlh
; => Plus Sign
xda1  = krhoelfp
xda3  = krhoehfp
yda1  = frest_lfkp/wlh
yda3  = frest_hfkp/wlh
verty = [1d0,1d0]*wcross[0]
vertx = xran
vertl = '!7x!3'+'!Dx!N'+'/!7x!3'+'!Dlh!N'
horix = [1d0,1d0]*1d0/SQRT(mp/me)
horiy = yran
horil = '(m!De!N/M!Di!N)!U1/2!N'
xposi = 0.5
yposi = [1d0,1d-1,1d-2,1d-3]
xx    = DINDGEN(500)*xran[1]/499L
yy    = -0.0983403d0 + 2.68113d0*xx + 30.3499d0*xx^2
fnam0 = 'whistler_dispersion_estimates_w_wlh-vs-krhoe_minus-sign'
fnam1 = 'whistler_dispersion_estimates_w_wlh-vs-krhoe_pluss-sign'
fnam2 = 'whistler_dispersion_estimates_w_wlh-vs-krhoe_both-signs'
;-------------------------------------------
pstr = {xrange:xran,yrange:yran,xtitle:xttl,ytitle:yttl,nodata:1,ylog:1,$
        xlog:1,ystyle:1,xstyle:1}
WSET,0
  PLOT,xda0,yda0,_EXTRA=pstr
    OPLOT,xda0,yda0,PSYM=4,COLOR=250
    OPLOT,xda2,yda2,PSYM=4,COLOR= 50
    OPLOT,vertx,verty,LINESTYLE=2
    OPLOT,horix,horiy,LINESTYLE=2
    OPLOT,xx,yy,LINESTYLE=3
    XYOUTS,xposi[0],yposi[0],'!9V!3 = Low  Freq. - Sign',/DATA,COLOR=250
    XYOUTS,xposi[0],yposi[1],'!9V!3 = High Freq. - Sign',/DATA,COLOR= 50
    XYOUTS,vertx[0]*1.1,verty[0]*1.2,vertl,/DATA
    XYOUTS,horix[0]*1.1,horiy[0]*1.2,horil,/DATA

WSET,1
  PLOT,xda1,yda1,_EXTRA=pstr
    OPLOT,xda1,yda1,PSYM=1,COLOR=250
    OPLOT,xda3,yda3,PSYM=1,COLOR= 50
    OPLOT,vertx,verty,LINESTYLE=2
    OPLOT,horix,horiy,LINESTYLE=2
    OPLOT,xx,yy,LINESTYLE=3
    XYOUTS,xposi[0],yposi[0],'+ = Low  Freq. + Sign',/DATA,COLOR=250
    XYOUTS,xposi[0],yposi[1],'+ = High Freq. + Sign',/DATA,COLOR= 50
    XYOUTS,vertx[0]*1.1,verty[0]*1.2,vertl,/DATA
    XYOUTS,horix[0]*1.1,horiy[0]*1.2,horil,/DATA

WSET,2
  PLOT,xda0,yda0,_EXTRA=pstr
    OPLOT,xda0,yda0,PSYM=4,COLOR=250
    OPLOT,xda1,yda1,PSYM=1,COLOR=200
    OPLOT,xda2,yda2,PSYM=4,COLOR=150
    OPLOT,xda3,yda3,PSYM=1,COLOR= 50
    OPLOT,vertx,verty,LINESTYLE=2
    OPLOT,horix,horiy,LINESTYLE=2
    OPLOT,xx,yy,LINESTYLE=3
    XYOUTS,xposi[0],yposi[0],'!9V!3 = Low  Freq. - Sign',/DATA,COLOR=250
    XYOUTS,xposi[0],yposi[1],'+ = Low  Freq. + Sign',/DATA,COLOR=200
    XYOUTS,xposi[0],yposi[2],'!9V!3 = High Freq. - Sign',/DATA,COLOR=150
    XYOUTS,xposi[0],yposi[3],'+ = High Freq. + Sign',/DATA,COLOR= 50
    XYOUTS,vertx[0]*1.1,verty[0]*1.2,vertl,/DATA
    XYOUTS,horix[0]*1.1,horiy[0]*1.2,horil,/DATA



;-----------------------------------------------------------------------------------------
; => Produce envelope around data
;-----------------------------------------------------------------------------------------
;-------------------------------------------
xran  = [0.01,3.50]
yran  = [1e-4,15.0]
;xran  = [0.,0.5]
;yran  = [0.,5.]
xttl  = 'kc/'+'!7x!3'+'!Dpe!N (unitless)'
yttl  = '!7x!3'+'!Drest!N'+'/!7x!3'+'!Dlh!N (unitless)'
; => Minus Sign
xda0  = kcwpelfm
xda2  = kcwpehfm
yda0  = frest_lfkm/wlh
yda2  = frest_hfkm/wlh
; => Plus Sign
xda1  = kcwpelfp
xda3  = kcwpehfp
yda1  = frest_lfkp/wlh
yda3  = frest_hfkp/wlh
verty = [1d0,1d0]*wcross[0]
vertx = xran
vertl = '!7x!3'+'!Dx!N'+'/!7x!3'+'!Dlh!N'
horix = [1d0,1d0]*1d0/SQRT(mp/me)
horiy = yran
horil = '(m!De!N/M!Di!N)!U1/2!N'
xposi = 0.5
yposi = [1d0,1d-1,1d-2,1d-3]
xx    = DINDGEN(500)*xran[1]/499L
yy    = -0.0983403d0 + 2.68113d0*xx + 30.3499d0*xx^2
fnam0 = 'whistler_dispersion_estimates_w_wlh-vs-kc_wpe_minus-sign'
fnam1 = 'whistler_dispersion_estimates_w_wlh-vs-kc_wpe_pluss-sign'
fnam2 = 'whistler_dispersion_estimates_w_wlh-vs-kc_wpe_both-signs'
;-------------------------------------------
pstr = {xtitle:xttl,ytitle:yttl,nodata:1,ystyle:1,xstyle:1}
xo   = REFORM(xda0)
yo   = REFORM(yda0)
test = outer_perimeter_chull(xo,yo,CHULL=chull0,OUTERPTS=outpts0)
HELP, chull0, outpts0

xo   = REFORM(xda2)
yo   = REFORM(yda2)
test = outer_perimeter_chull(xo,yo,CHULL=chull2,OUTERPTS=outpts2)


WSET,0
!P.MULTI = 0
  PLOT,xda0,yda0,_EXTRA=pstr,XLOG=1,YLOG=1,XRANGE=[0.01,3.50],YRANGE=[1e-4,15.0]
    OPLOT,xda0,yda0,PSYM=4,COLOR= 50
    PLOTS,[outpts0[*,0],outpts0[0,0]],[outpts0[*,1],outpts0[0,1]],LINESTYLE=3,COLOR=150
    OPLOT,xda2,yda2,PSYM=4,COLOR=250
    PLOTS,[outpts2[*,0],outpts2[0,0]],[outpts2[*,1],outpts2[0,1]],LINESTYLE=3,COLOR=200







TRIANGULATE, xda0, yda0, triangles, hull,TOLERANCE=1d-8*MAX([xda0,yda0],/NAN)
PRINT,';',hull
; => For tolerance = 1d-8*MAX([xda0,yda0],/NAN)
;         268         277         291         271         223         315          72          46          45          47          40          38          37         338         327         403         405
; => For tolerance = 1d-14*MAX([xda0,yda0],/NAN)
;         268         277         291         271         223          37         338         327         403         405

wi,1
plot,[xda0[hull],xda0[hull[0]]],[yda0[hull],yda0[hull[0]]],psym=2,/xlog,/ylog
  oplot,[xda0[hull],xda0[hull[0]]],[yda0[hull],yda0[hull[0]]],linestyle=2,color=150
  oplot,[xda0[hull[0]],xda0[hull[0]]],[yda0[hull[0]],yda0[hull[0]]],psym=2,color=250
  oplot,[xda0[hull[1]],xda0[hull[0]]],[yda0[hull[1]],yda0[hull[0]]],psym=2,color=200
  oplot,[xda0[hull[2]],xda0[hull[0]]],[yda0[hull[2]],yda0[hull[0]]],psym=2,color=150
  oplot,[xda0[hull[3]],xda0[hull[0]]],[yda0[hull[3]],yda0[hull[0]]],psym=2,color=100

  oplot,[xda0[hull[4]]],[yda0[hull[4]]],psym=2,color= 50


WSET,0
!P.MULTI = [0,1,2]
  PLOT,xda0,yda0,_EXTRA=pstr,XLOG=0,YLOG=0,XRANGE=[0.,0.5],YRANGE=[0.,5.]
    OPLOT,xda0,yda0,PSYM=4,COLOR=250
    PLOTS, [xda0[hull],xda0[hull[0]]], [yda0[hull],yda0[hull[0]]], Color=150
  PLOT,xda0,yda0,_EXTRA=pstr,XLOG=1,YLOG=1,XRANGE=[0.01,3.50],YRANGE=[1e-4,15.0]
    OPLOT,xda0,yda0,PSYM=4,COLOR=250
    PLOTS, [xda0[hull],xda0[hull[0]]], [yda0[hull],yda0[hull[0]]], Color=150

WSET,0
!P.MULTI = 0
  PLOT,xda0,yda0,_EXTRA=pstr,XLOG=1,YLOG=1,XRANGE=[0.01,3.50],YRANGE=[1e-4,15.0]
    OPLOT,xda0,yda0,PSYM=4,COLOR= 50

nn     = N_ELEMENTS(xda0)
len    = LONG(1d0*nn/(16d0))
off    = LONG(1d0*len[0]/2d0)
PRINT,';',len,off
;          26          13
test   = data_envelope_find(xda0,yda0,LENGTH=len[0],OFFSET=off[0])


xo        = REFORM(xda0)
yo        = REFORM(yda0)
sp        = SORT(xo)
xo        = xo[sp]
yo        = yo[sp]
avgx      = MEAN(xo,/NAN)
avgy      = MEAN(yo,/NAN)
diffx     = (xo - avgx[0])
diffy     = (yo - avgy[0])
rad       = SQRT(diffx^2 + diffy^2)
TRIANGULATE, xo, yo, triangles, hull,TOLERANCE=1d-8*MAX([xo, yo],/NAN)



test   = outer_perimeter_chull(xo,yo,CHULL=chull,OUTERPTS=outerpts)












;-----------------------------------------------------------------------------------------
; => Get data points for fit lines
;-----------------------------------------------------------------------------------------
f        = !VALUES.F_NAN
d        = !VALUES.D_NAN
c        = 2.99792458d8      ; -Speed of light in vacuum (m/s)
kB       = 1.380658d-23      ; -Boltzmann Constant (J/K)
epo      = 8.854187817d-12   ; -Permittivity of free space (F/m)
muo      = 4d0*!DPI*1d-7     ; -Permeability of free space (N/A^2 or H/m)
me       = 9.1093897d-31     ; -Electron mass (kg)
mp       = 1.6726231d-27     ; -Proton mass (kg)
qq       = 1.60217733d-19    ; => Fundamental charge (C)
;-------------------------------------------
xran  = [0.01,3.50]
yran  = [1e-4,15.0]
xttl  = 'kc/'+'!7x!3'+'!Dpe!N (unitless)'
yttl  = '!7x!3'+'!Drest!N'+'/!7x!3'+'!Dlh!N (unitless)'
; => Minus Sign
xda0  = kcwpelfm
xda2  = kcwpehfm
yda0  = frest_lfkm/wlh
yda2  = frest_hfkm/wlh
; => Plus Sign
xda1  = kcwpelfp
xda3  = kcwpehfp
yda1  = frest_lfkp/wlh
yda3  = frest_hfkp/wlh
verty = [1d0,1d0]*wcross[0]
vertx = xran
vertl = '!7x!3'+'!Dx!N'+'/!7x!3'+'!Dlh!N'
horix = [1d0,1d0]*1d0/SQRT(mp/me)
horiy = yran
horil = '(m!De!N/M!Di!N)!U1/2!N'
xposi = 0.5
yposi = [1d0,1d-1,1d-2,1d-3]
xx    = DINDGEN(500)*xran[1]/499L
yy    = -0.0983403d0 + 2.68113d0*xx + 30.3499d0*xx^2
fnam0 = 'whistler_dispersion_estimates_w_wlh-vs-kc_wpe_minus-sign'
fnam1 = 'whistler_dispersion_estimates_w_wlh-vs-kc_wpe_pluss-sign'
fnam2 = 'whistler_dispersion_estimates_w_wlh-vs-kc_wpe_both-signs'
;-------------------------------------------


pstr = {xrange:xran,yrange:yran,xtitle:xttl,ytitle:yttl,nodata:1,ylog:1,$
        xlog:1,ystyle:1,xstyle:1,xticklen:1.,yticklen:1.}
WSET,0
  PLOT,xda0,yda0,_EXTRA=pstr
    OPLOT,xda0,yda0,PSYM=4,COLOR=250
    OPLOT,xda2,yda2,PSYM=4,COLOR= 50


good = WHERE(xda0 GT 0.02d0 AND yda0 GT 0.01d0,gd,COMPLEMENT=bad,NCOMPLEMENT=bd)
IF (bd GT 0) THEN xda0[bad] = d
IF (bd GT 0) THEN yda0[bad] = d

good = WHERE(xda0 LT 0.05d0 OR yda0 GT 0.1d0,gd,COMPLEMENT=bad,NCOMPLEMENT=bd)
IF (bd GT 0) THEN xda0[bad] = d
IF (bd GT 0) THEN yda0[bad] = d

good = WHERE(xda0 LT 0.03d0 OR yda0 GT 0.02d0,gd,COMPLEMENT=bad,NCOMPLEMENT=bd)
IF (bd GT 0) THEN xda0[bad] = d
IF (bd GT 0) THEN yda0[bad] = d

good = WHERE(xda2 LT 0.15d0 OR yda2 GT 1.0d0,gd,COMPLEMENT=bad,NCOMPLEMENT=bd)
IF (bd GT 0) THEN xda2[bad] = d
IF (bd GT 0) THEN yda2[bad] = d

good = WHERE(xda2 LT 0.2d0 OR yda2 GT 2.0d0,gd,COMPLEMENT=bad,NCOMPLEMENT=bd)
IF (bd GT 0) THEN xda2[bad] = d
IF (bd GT 0) THEN yda2[bad] = d

WSET,0
  PLOT,xda0,yda0,_EXTRA=pstr
    OPLOT,xda0,yda0,PSYM=4,COLOR=250
    OPLOT,xda2,yda2,PSYM=4,COLOR= 50
;-----------------------------------------------------------------------------------------
;-----------------------------------------------------------------------------------------
nstdevs = 2
xo    = REFORM([xda0,xda2])
yo    = REFORM([yda0,yda2])
smear = smear_data_plot(xo,yo,NS=2L,/CIRCLE,/OPLT)
x1    = REFORM(smear[*,*,0])
y1    = REFORM(smear[*,*,1])
sz    = SIZE(x1,/DIMENSIONS)
dimn  = sz[0]*sz[1]
x1    = REFORM(x1,dimn)
y1    = REFORM(y1,dimn)
; => Return data to DATA coordinates
xydat = CONVERT_COORD(x1,y1,/DEVICE,/TO_DATA)
x1    = REFORM(xydat[0,*])
y1    = REFORM(xydat[1,*])
sp    = SORT(x1)
x1    = x1[sp]
y1    = y1[sp]
; => check to see if data is still in the right order...
;    OPLOT,x1,y1,PSYM=3,COLOR=250
; it's okay

nn     = N_ELEMENTS(x1)
len    = LONG(1d0*nn/(128d0))
off    = LONG(1d0*len[0]/2d0)
PRINT,';',len,off
;         323         161
tol    = 15d-2
partd  = partition_data(x1,len[0],off[0],YY=y1)
partx  = REFORM(partd[*,*,0])
party  = REFORM(partd[*,*,1])
sz     = SIZE(partx,/DIMENSIONS)
dxbin  = sz[0]     ; => width in # elements of X-Axis bins
nxbin  = sz[1]     ; => # of X-Axis bins
PRINT,';',dxbin,nxbin
;         323         254
; => Find ranges of data
stdevy = REPLICATE(d,nxbin)       ; => Standard Deviation of Y-data in X[j]-bin
avgyy  = REPLICATE(d,nxbin)       ; => Average value  of Y-data in X[j]-bin
avgxx  = REPLICATE(d,nxbin)       ; => Average value  of X-data in X[j]-bin

FOR j=0L, nxbin - 1L DO BEGIN                                        $
  tstdy     = STDDEV(party[*,j],/NAN,/DOUBLE)                      & $
  tolyu     = MAX(party[*,j],/NAN) - (tol[0]*nstdevs[0]*tstdy[0])  & $
  tolyd     = MIN(party[*,j],/NAN) + (tol[0]*nstdevs[0]*tstdy[0])  & $
  test      = (party[*,j] GE tolyu) OR (party[*,j] LE tolyd)       & $
  bad       = WHERE(test,bd,COMPLEMENT=good,NCOMPLEMENT=gd)        & $
  IF (gd GT 0) THEN avgyy[j]  = MEAN(party[good,j],/NAN,/DOUBLE)   & $
  IF (gd GT 0) THEN avgxx[j]  = MEAN(partx[good,j],/NAN,/DOUBLE)   & $
  IF (gd GT 0) THEN stdevy[j] = STDDEV(party[good,j],/NAN,/DOUBLE)


lows_y  = avgyy - nstdevs[0]*stdevy
high_y  = avgyy + nstdevs[0]*stdevy
bad     = WHERE(lows_y LE 0d0,bd)
IF (bd GT 0) THEN lows_y[bad] = d
bad     = WHERE(high_y LE 0d0,bd)
IF (bd GT 0) THEN high_y[bad] = d

; => Power of 2 below nxbin
pwr2    = 2d0
tt      = 1
WHILE (tt) DO BEGIN                  $
  tt    = (pwr2 LT nxbin*1d0/2d0)  & $
  IF (tt) THEN pwr2 *= 2d0*tt

nkeep   = LONG(pwr2/10d0)
PRINT,';',pwr2,nkeep
;       128.00000          12
; => Smooth partitioned results
smlowsy = fourier_filter(lows_y,nkeep,/PAD)
smhighy = fourier_filter(high_y,nkeep,/PAD)
bad     = WHERE(smlowsy LE 0d0,bd)
IF (bd GT 0) THEN smlowsy[bad] = d
bad     = WHERE(smhighy LE 0d0,bd)
IF (bd GT 0) THEN smhighy[bad] = d


WSET,0
  PLOT,xda0,yda0,_EXTRA=pstr
    OPLOT,xda0,yda0,PSYM=3,COLOR=250
    OPLOT,xda2,yda2,PSYM=3,COLOR= 50
smear = smear_data_plot(xo,yo,NS=2L,/CIRCLE,/OPLT)
; => Plot unsmoothed lower/upper bounds
    OPLOT,avgxx,lows_y,LINESTYLE=3,COLOR=250
    OPLOT,avgxx,high_y,LINESTYLE=3,COLOR= 50


WSET,0
  PLOT,xda0,yda0,_EXTRA=pstr
    OPLOT,xda0,yda0,PSYM=3,COLOR=250
    OPLOT,xda2,yda2,PSYM=3,COLOR= 50
smear = smear_data_plot(xo,yo,NS=2L,/CIRCLE,/OPLT)
; => Plot smoothed lower/upper bounds
    OPLOT,avgxx,smlowsy,LINESTYLE=1,COLOR=250
    OPLOT,avgxx,smhighy,LINESTYLE=1,COLOR= 50



xdat = [xda0,xda2]
ydat = [yda0,yda2]
sp   = SORT(xdat)
xdat = xdat[sp]
ydat = ydat[sp]
bad  = WHERE(FINITE(xdat) EQ 0 OR xdat LE 0d0,bd,COMPLEMENT=good,NCOMPLEMENT=gd)
IF (gd GT 0) THEN xdat = xdat[good]
bad  = WHERE(FINITE(ydat) EQ 0 OR ydat LE 0d0,bd,COMPLEMENT=good,NCOMPLEMENT=gd)
IF (gd GT 0) THEN ydat = ydat[good]
HELP, xdat, ydat
; => interpolate fit line to data
nx    = N_ELEMENTS(xdat)
nline = interp(yy,xx,xdat,/NO_EXTRAP)
bad   = WHERE(FINITE(nline) EQ 0 OR nline LE 0d0,bd,COMPLEMENT=good,NCOMPLEMENT=gd)
IF (bd GT 0) THEN nline[bad] = d

;    OPLOT,xx,yy,LINESTYLE=3,COLOR=150
    OPLOT,xdat,nline,LINESTYLE=3,COLOR=150

goodr = WHERE(xdat GT 0.04d0 AND nline GT 0.1d0,gdr,COMPLEMENT=badr,NCOMPLEMENT=bdr)
PRINT,";", gdr
;         435
ratio = ydat/nline
PRINT,";", MIN(ratio[goodr],/NAN), MAX(ratio[goodr],/NAN), MEAN(ratio[goodr],/NAN), STDDEV(ratio[goodr],/NAN)
;      0.17763979       1.0266905      0.91624984      0.12529341

top   = MEAN(ratio[goodr],/NAN) + 2d0*STDDEV(ratio[goodr],/NAN)
bad   = WHERE(ratio[goodr] GT top[0],bd,COMPLEMENT=good,NCOMPLEMENT=gd)
PRINT,";", bd, gd, nx
;           0         435         549

bottom = MEAN(ratio[goodr],/NAN) - 2d0*STDDEV(ratio[goodr],/NAN)
bad    = WHERE(ratio[goodr] LT bottom[0],bd,COMPLEMENT=good,NCOMPLEMENT=gd)
PRINT,";", bd, gd, nx
;          20         415         549
IF (bd GT 0) THEN ratio[goodr[bad]] = d
PRINT,";", MIN(ratio[goodr],/NAN), MAX(ratio[goodr],/NAN), MEAN(ratio[goodr],/NAN), STDDEV(ratio[goodr],/NAN)
;      0.66612442       1.0266905      0.93755825     0.074162873

good   = WHERE(FINITE(ratio),gd,COMPLEMENT=bad,NCOMPLEMENT=bd)
PRINT,";", bd, gd, nx
;          50         499         549

IF (bd GT 0) THEN xdat[bad] = d
IF (bd GT 0) THEN ydat[bad] = d
;-----------------------------------------------------------------------------------------
;-----------------------------------------------------------------------------------------


WSET,0
  PLOT,xdat,ydat,_EXTRA=pstr
    OPLOT,xdat,ydat,PSYM=4,COLOR=250
    OPLOT,xda0,yda0,PSYM=3,COLOR=150
    OPLOT,xda2,yda2,PSYM=3,COLOR= 50


;-----------------------------------------------------------------------------------------
; => print out for mathematica
;-----------------------------------------------------------------------------------------
good   = WHERE(FINITE(xdat) AND FINITE(ydat),gd,COMPLEMENT=bad,NCOMPLEMENT=bd)
PRINT,";", bd, gd, nx
;          50         499         549
gxdat = xdat[good]
gydat = ydat[good]

prefx = 'data = {{'
midss = '},{'
ff    = '(f10.3)'
; => turn data into strings
gxstr = STRTRIM(STRING(FORMAT=ff,gxdat),2L)
gystr = STRTRIM(STRING(FORMAT=ff,gydat),2L)

temp0 = prefx[0]
FOR j=0L, 10L DO BEGIN                               $
  temp0 = temp0[0]+gxstr[j]+','+gystr[j]+midss[0]

temp0 = '{'
FOR j=11L, 21L DO BEGIN                               $
  temp0 = temp0[0]+gxstr[j]+','+gystr[j]+midss[0]

temp0 = '{'
FOR j=22L, gd - 1L DO BEGIN                               $
  temp0 = temp0[0]+gxstr[j]+','+gystr[j]+midss[0]


PRINT,temp0

data = {{0.028,0.030},{0.030,0.037},{0.031,0.041},{0.033,0.044},{0.035,0.053},{0.036,0.055},{0.038,0.061},{0.039,0.064},{0.040,0.068},{0.041,0.070},{0.042,0.075},{0.043,0.079},{0.044,0.081},{0.045,0.086},{0.048,0.096},{0.050,0.103},{0.051,0.107},{0.053,0.110},{0.054,0.123},{0.054,0.105},{0.055,0.119},{0.059,0.146},{0.062,0.154},{0.065,0.178},{0.070,0.204},{0.072,0.216},{0.074,0.230},{0.077,0.238},{0.079,0.251},{0.081,0.265},{0.082,0.283},{0.083,0.291},{0.084,0.295},{0.087,0.316},{0.089,0.324},{0.090,0.339},{0.092,0.357},{0.098,0.407},{0.102,0.414},{0.103,0.415},{0.104,0.451},{0.108,0.486},{0.112,0.494},{0.115,0.548},{0.116,0.570},{0.118,0.583},{0.120,0.594},{0.123,0.634},{0.126,0.649},{0.131,0.698},{0.137,0.763},{0.142,0.816},{0.144,0.839},{0.148,0.874},{0.149,0.933},{0.157,1.027},{0.162,1.077},{0.164,1.014},{0.165,1.125},{0.166,1.137},{0.167,1.152},{0.168,1.162},{0.169,1.179},{0.170,1.198},{0.171,1.202},{0.172,1.218},{0.173,1.238},{0.174,1.258},{0.175,1.270},{0.176,1.286},{0.177,1.299},{0.179,1.331},{0.180,1.344},{0.181,1.346},{0.182,1.356},{0.183,1.377},{0.184,1.399},{0.185,1.404},{0.186,1.426},{0.187,1.450},{0.189,1.465},{0.190,1.495},{0.191,1.504},{0.192,1.518},{0.195,1.563},{0.196,1.574},{0.211,1.815},{0.212,1.824},{0.213,1.854},{0.214,1.880},{0.216,1.905},{0.217,1.919},{0.219,1.966},{0.221,1.995},{0.227,2.075},{0.229,2.116},{0.229,2.131},{0.233,2.206},{0.234,2.225},{0.235,2.236},{0.237,2.274},{0.239,2.288},{0.240,2.331},{0.242,2.335},{0.243,2.387},{0.244,2.393},{0.245,2.422},{0.249,2.437},{0.250,2.459},{0.253,2.553},{0.255,2.620},{0.256,2.636},{0.257,2.649},{0.258,2.672},{0.262,2.744},{0.263,2.745},{0.264,2.766},{0.265,2.806},{0.268,2.858},{0.271,2.881},{0.272,2.927},{0.275,2.962},{0.276,2.979},{0.282,3.082},{0.286,3.157},{0.296,3.326},{0.306,3.557},{0.307,3.575},{0.312,3.718},{0.313,3.765},{0.314,3.767},{0.317,3.856},{0.321,3.970},{0.325,4.084},{0.333,4.260},{0.338,4.360},{0.407,5.963},{0.410,6.126},{0.411,6.173},{0.413,6.235},{0.416,6.299},{0.417,6.326},{0.419,6.347},{0.430,6.616},{0.431,6.634},{0.432,6.735},{0.433,6.746},{0.434,6.775},{0.436,6.834},{0.438,6.885},{0.439,6.925},{0.441,6.932},{0.442,6.966},{0.444,7.043},{0.445,7.059},{0.446,7.091},{0.449,7.156},{0.450,7.210},{0.451,7.239},{0.454,7.317},{0.458,7.400},{0.461,7.495},{0.463,7.540},{0.467,7.612},{0.483,7.903},{0.493,8.110},{0.508,8.510},{0.509,8.536},{0.513,8.809},{0.517,8.927},{0.521,9.081},{0.525,9.228},{0.528,9.255},{0.528,9.323},{0.529,9.372},{0.531,9.419},{0.532,9.447},{0.535,9.526},{0.538,9.574},{0.553,9.818},{0.562,10.203},{0.567,10.329},{0.569,10.357},{0.589,10.786},{0.600,11.267}}
data = {{0.028,0.020},{0.028,0.028},{0.028,0.030},{0.028,0.026},{0.028,0.021},$
        {0.028,0.018},{0.028,0.027},{0.029,0.024},{0.029,0.028},{0.029,0.028},$
        {0.030,0.022},{0.030,0.017},{0.030,0.019},{0.030,0.037},{0.031,0.024},$
        {0.031,0.035},{0.031,0.026},{0.031,0.040},{0.031,0.041},{0.032,0.035},$
        {0.032,0.036},{0.033,0.043},{0.033,0.044},{0.034,0.021},{0.034,0.042},$
        {0.034,0.029},{0.035,0.025},{0.035,0.052},{0.035,0.049},{0.035,0.053},$
        {0.036,0.044},{0.036,0.055},{0.036,0.055},{0.037,0.052},{0.037,0.055},$
        {0.037,0.054},{0.038,0.061},{0.038,0.057},{0.038,0.060},{0.038,0.051},$
        {0.038,0.054},{0.039,0.064},{0.039,0.049},{0.039,0.061},{0.039,0.057},$
        {0.040,0.060},{0.040,0.054},{0.040,0.068},{0.040,0.049},{0.040,0.068},$
        {0.041,0.023},{0.041,0.062},{0.041,0.070},{0.042,0.068},{0.042,0.075},$
        {0.042,0.021},{0.043,0.053},{0.043,0.075},{0.043,0.036},{0.043,0.078},$
        {0.043,0.076},{0.043,0.035},{0.043,0.066},{0.043,0.066},{0.043,0.038},$
        {0.043,0.079},{0.043,0.079},{0.043,0.030},{0.044,0.063},{0.044,0.076},$
        {0.044,0.061},{0.044,0.081},{0.044,0.047},{0.044,0.081},{0.045,0.080},$
        {0.045,0.048},{0.045,0.075},{0.045,0.086},{0.046,0.054},{0.046,0.079},$
        {0.046,0.048},{0.047,0.061},{0.047,0.081},{0.048,0.078},{0.048,0.096},$
        {0.050,0.099},{0.050,0.103},{0.051,0.107},{0.053,0.110},{0.054,0.123},$
        {0.054,0.105},{0.055,0.119},{0.059,0.146},{0.062,0.129},{0.062,0.154},$
        {0.062,0.136},{0.063,0.128},{0.064,0.134},{0.065,0.167},{0.065,0.172},$
        {0.065,0.178},{0.067,0.164},{0.068,0.161},{0.069,0.174},{0.070,0.197},$
        {0.070,0.204},{0.070,0.188},{0.072,0.213},{0.072,0.215},{0.072,0.216},$
        {0.072,0.216},{0.073,0.212},{0.074,0.214},{0.074,0.219},{0.074,0.230},$
        {0.074,0.218},{0.075,0.229},{0.076,0.229},{0.077,0.238},{0.077,0.232},$
        {0.078,0.238},{0.079,0.251},{0.081,0.265},{0.081,0.228},{0.082,0.283},$
        {0.082,0.282},{0.082,0.265},{0.083,0.283},{0.083,0.291},{0.084,0.295},$
        {0.084,0.293},{0.087,0.316},{0.089,0.324},{0.090,0.339},{0.092,0.357},$
        {0.097,0.344},{0.098,0.407},{0.098,0.401},{0.101,0.372},{0.102,0.414},$
        {0.102,0.391},{0.103,0.392},{0.103,0.415},{0.104,0.451},{0.104,0.415},$
        {0.108,0.486},{0.111,0.453},{0.112,0.494},{0.114,0.494},{0.115,0.548},$
        {0.116,0.570},{0.118,0.583},{0.120,0.594},{0.123,0.555},{0.123,0.634},$
        {0.124,0.527},{0.126,0.649},{0.126,0.633},{0.127,0.541},{0.128,0.552},$
        {0.130,0.587},{0.130,0.628},{0.131,0.698},{0.131,0.560},{0.131,0.583},$
        {0.137,0.763},{0.137,0.773},{0.140,0.716},{0.142,0.816},{0.144,0.839},$
        {0.147,0.733},{0.148,0.874},{0.149,0.933},{0.150,0.920},{0.150,0.926},$
        {0.157,1.027},{0.160,1.005},{0.160,1.017},{0.162,1.051},{0.162,1.077},$
        {0.163,1.071},{0.164,1.106},{0.164,1.014},{0.165,1.115},{0.165,1.049},$
        {0.165,1.125},{0.166,1.121},{0.166,1.137},{0.167,1.143},{0.167,1.145},$
        {0.167,1.152},{0.168,1.126},{0.168,1.162},{0.169,1.171},{0.169,1.174},$
        {0.169,1.179},{0.169,1.040},{0.170,1.192},{0.170,1.178},{0.170,1.198},$
        {0.170,1.157},{0.171,1.202},{0.171,1.138},{0.172,1.218},{0.173,1.230},$
        {0.173,1.156},{0.173,1.231},{0.173,1.236},{0.173,1.238},{0.173,1.236},$
        {0.173,1.062},{0.174,1.220},{0.174,1.250},{0.174,1.234},{0.174,1.253},$
        {0.174,1.249},{0.174,1.258},{0.174,1.250},{0.175,1.247},{0.175,1.219},$
        {0.175,1.270},{0.176,1.275},{0.176,1.267},{0.176,1.278},{0.176,1.272},$
        {0.176,1.270},{0.176,1.281},{0.176,1.201},{0.176,1.286},{0.177,1.295},$
        {0.177,1.299},{0.177,1.298},{0.178,1.296},{0.179,1.312},{0.179,1.330},$
        {0.179,1.331},{0.179,1.331},{0.179,1.330},{0.180,1.318},{0.180,1.344},$
        {0.180,1.314},{0.181,1.346},{0.181,1.343},{0.181,1.162},{0.182,1.296},$
        {0.182,1.356},{0.182,1.339},{0.182,1.346},{0.183,1.348},{0.183,1.348},$
        {0.183,1.377},{0.183,1.373},{0.183,1.365},{0.184,1.389},{0.184,1.399},$
        {0.185,1.385},{0.185,1.404},{0.185,1.397},{0.186,1.422},{0.186,1.242},$
        {0.186,1.426},{0.187,1.450},{0.189,1.388},{0.189,1.465},{0.190,1.495},$
        {0.191,1.487},{0.191,1.504},{0.192,1.518},{0.195,1.523},{0.195,1.541},$
        {0.195,1.563},{0.196,1.574},{0.196,1.546},{0.197,1.520},{0.197,1.500},$
        {0.198,1.104},{0.211,1.815},{0.212,1.824},{0.213,1.850},{0.213,1.854},$
        {0.214,1.880},{0.216,1.905},{0.217,1.919},{0.219,1.966},{0.221,1.995},$
        {0.222,1.989},{0.227,2.075},{0.229,2.116},{0.229,2.131},{0.230,2.032},$
        {0.231,2.013},{0.231,2.057},{0.233,2.105},{0.233,2.198},{0.233,2.161},$
        {0.233,2.206},{0.234,2.222},{0.234,2.225},{0.234,1.535},{0.235,2.218},$
        {0.235,2.232},{0.235,2.234},{0.235,2.236},{0.235,2.236},{0.237,2.260},$
        {0.237,2.274},{0.239,2.288},{0.240,2.306},{0.240,2.331},{0.242,2.335},$
        {0.243,2.387},{0.243,2.357},{0.243,2.360},{0.244,2.393},{0.245,2.422},$
        {0.245,2.422},{0.247,2.418},{0.248,2.367},{0.249,2.437},{0.250,2.459},$
        {0.251,2.434},{0.253,2.553},{0.255,2.585},{0.255,2.620},{0.256,2.608},$
        {0.256,2.636},{0.257,2.649},{0.257,2.639},{0.258,2.672},{0.259,2.668},$
        {0.260,2.686},{0.262,2.744},{0.263,2.745},{0.264,2.766},{0.265,2.806},$
        {0.267,2.800},{0.268,2.858},{0.268,2.849},{0.271,2.881},{0.272,2.927},$
        {0.275,2.962},{0.276,2.979},{0.282,3.082},{0.282,3.058},{0.284,2.967},$
        {0.286,3.157},{0.289,2.965},{0.296,3.326},{0.306,3.557},{0.307,3.575},$
        {0.312,3.718},{0.313,3.752},{0.313,3.765},{0.314,3.767},{0.317,3.856},$
        {0.321,3.970},{0.325,4.084},{0.327,4.028},{0.327,3.955},{0.333,4.260},$
        {0.338,4.360},{0.341,4.329},{0.407,5.963},{0.410,6.126},{0.411,6.173},$
        {0.413,6.235},{0.416,6.299},{0.416,6.201},{0.416,6.218},{0.417,6.326},$
        {0.417,6.260},{0.418,6.262},{0.419,6.316},{0.419,6.347},{0.420,6.342},$
        {0.430,6.616},{0.431,6.634},{0.432,6.664},{0.432,6.735},{0.433,6.702},$
        {0.433,6.729},{0.433,6.695},{0.433,6.746},{0.433,6.736},{0.434,6.703},$
        {0.434,6.680},{0.434,6.709},{0.434,6.775},{0.436,6.834},{0.436,6.830},$
        {0.437,6.815},{0.437,6.830},{0.438,6.859},{0.438,6.885},{0.439,6.904},$
        {0.439,6.891},{0.439,6.925},{0.440,6.810},{0.441,6.924},{0.441,6.932},$
        {0.442,6.890},{0.442,6.966},{0.442,6.907},{0.444,6.985},{0.444,7.043},$
        {0.445,7.059},{0.445,6.987},{0.445,6.899},{0.446,7.067},{0.446,7.019},$
        {0.446,7.049},{0.446,7.087},{0.446,7.091},{0.446,7.056},{0.446,7.072},$
        {0.446,7.087},{0.449,7.156},{0.449,7.149},{0.450,7.210},{0.451,7.239},$
        {0.451,7.235},{0.451,7.153},{0.452,6.923},{0.454,7.317},{0.458,7.400},$
        {0.461,7.487},{0.461,7.495},{0.463,7.540},{0.463,7.540},{0.467,7.612},$
        {0.483,7.903},{0.493,8.110},{0.508,8.510},{0.509,8.536},{0.513,8.740},$
        {0.513,8.790},{0.513,8.809},{0.515,8.804},{0.517,8.927},{0.521,9.081},$
        {0.525,9.228},{0.528,9.255},{0.528,9.232},{0.528,9.323},{0.528,9.312},$
        {0.529,9.124},{0.529,9.372},{0.531,9.006},{0.531,9.419},{0.532,9.444},$
        {0.532,9.447},{0.535,9.526},{0.538,9.574},{0.538,9.559},{0.540,9.542},$
        {0.544,9.482},{0.553,9.818},{0.555,9.645},{0.558,9.759},{0.562,10.203},$
        {0.567,10.329},{0.569,10.357},{0.589,10.786},{0.600,11.267},{0.602,11.383},$
        {0.603,11.409},{0.603,11.347},{0.604,11.426},{0.604,11.298},{0.604,11.397},$
        {0.605,11.399},{0.605,11.465},{0.608,11.543},{0.608,11.462},{0.609,11.571},$
        {0.610,11.592},{0.610,11.597},{0.611,11.594},{0.611,11.558},{0.611,11.591},$
        {0.612,11.634},{0.613,11.651},{0.615,11.667},{0.616,11.612},{0.616,11.721},$
        {0.616,11.692},{0.617,11.700},{0.619,11.730},{0.621,11.722},{0.621,11.756},$
        {0.621,11.761},{0.626,11.826},{0.626,11.828},{0.627,11.851},{0.629,11.846},$
        {0.630,11.870},{0.635,11.916},{0.644,11.668},{0.654,11.565}}




; => Fit lines from Mathematica

; => Parabola
xx     = DINDGEN(500)*0.7d0/499L
f_para = -0.30289400d0 + 5.120500d0*xx + 24.77080d0*xx^2
; => Cubic Eq.
f_cube =  0.03816180d0 - 1.205200d0*xx + 52.23770d0*xx^2 - 32.00250d0*xx^3
; => Quadratic Eq.
f_quad =  0.00564244d0 - 0.340469d0*xx + 46.17760d0*xx^2 - 16.72570d0*xx^3 - 12.59510d0*xx^4


xran  = [0.01,3.50]
yran  = [1e-4,15.0]
xttl  = 'kc/'+'!7x!3'+'!Dpe!N (unitless)'
yttl  = '!7x!3'+'!Drest!N'+'/!7x!3'+'!Dlh!N (unitless)'
; => Minus Sign
xda0  = kcwpelfm
xda2  = kcwpehfm
yda0  = frest_lfkm/wlh
yda2  = frest_hfkm/wlh
; => Plus Sign
xda1  = kcwpelfp
xda3  = kcwpehfp
yda1  = frest_lfkp/wlh
yda3  = frest_hfkp/wlh
;vertx = xran
;verty = [1d0,1d0]*wcross[0]
verty = [1d0,1d0]*1d0/SQRT(mp/me)
vertx = xran
vertl = '!7X!3'+'!Dcp!N'+'/!7x!3'+'!Dlh!N'
;vertl = '!7x!3'+'!Dx!N'+'/!7x!3'+'!Dlh!N'
horix = [1d0,1d0]*1d0/SQRT(mp/me)
horiy = yran
horil = '(m!De!N/M!Di!N)!U1/2!N'
xposi = 0.5
yposi = [1d0,1d-1,1d-2,1d-3]
paral = 'f(x) = a + b x + c x!U2!N'
cubel = 'f(x) = a + b x + c x!U2!N + d x!U3!N'
quadl = 'f(x) = a + b x + c x!U2!N + d x!U3!N + e x!U4!N'
aposi = [0.55,0.43]
fposi = [0.15,0.93]
alab  = 'a = { -0.30289400, +0.03816180, +0.00564244}'
blab  = 'b = { +5.12050000, -1.20520000, -0.34046900}'
clab  = 'c = {+24.77080000,+52.23770000,+46.17760000}'
dlab  = 'd = {  0.00000000,-32.00250000,-16.72570000}'
elab  = 'e = {  0.00000000,  0.00000000,-12.59510000}'
fnam0 = 'whistler_dispersion_estimates_w_wlh-vs-kc_wpe_minus-sign_para-cube-quad-fit-lines'
fnam1 = 'whistler_dispersion_estimates_w_wlh-vs-kc_wpe_pluss-sign_para-cube-quad-fit-lines'
fnam2 = 'whistler_dispersion_estimates_w_wlh-vs-kc_wpe_both-signs_para-cube-quad-fit-lines'

pstr = {xrange:xran,yrange:yran,xtitle:xttl,ytitle:yttl,nodata:1,ylog:1,$
        xlog:1,ystyle:1,xstyle:1}

WSET,0
WSHOW,0
  PLOT,xda0,yda0,_EXTRA=pstr
    OPLOT,xda0,yda0,PSYM=4,COLOR=250
    OPLOT,xda2,yda2,PSYM=4,COLOR= 50
    OPLOT,vertx,verty,LINESTYLE=2
    OPLOT,horix,horiy,LINESTYLE=2
    OPLOT,xx,f_para,LINESTYLE=2,COLOR= 30
    OPLOT,xx,f_cube,LINESTYLE=3,COLOR=150
    OPLOT,xx,f_quad,LINESTYLE=4,COLOR=200
    XYOUTS,xposi[0],yposi[0],'!9V!3 = Low  Freq. - Sign',/DATA,COLOR=250
    XYOUTS,xposi[0],yposi[1],'!9V!3 = High Freq. - Sign',/DATA,COLOR= 50
    XYOUTS,vertx[0]*1.1,verty[0]*1.2,vertl,/DATA
    XYOUTS,horix[0]*1.1,horiy[0]*1.2,horil,/DATA
    XYOUTS,fposi[0],fposi[1]-0.00,paral,/NORMAL,COLOR= 30
    XYOUTS,fposi[0],fposi[1]-0.03,cubel,/NORMAL,COLOR=150
    XYOUTS,fposi[0],fposi[1]-0.06,quadl,/NORMAL,COLOR=200
    XYOUTS,aposi[0],aposi[1]-0.00,alab,/NORMAL
    XYOUTS,aposi[0],aposi[1]-0.03,blab,/NORMAL
    XYOUTS,aposi[0],aposi[1]-0.06,clab,/NORMAL
    XYOUTS,aposi[0],aposi[1]-0.09,dlab,/NORMAL
    XYOUTS,aposi[0],aposi[1]-0.12,elab,/NORMAL

WSET,1
WSHOW,1
  PLOT,xda1,yda1,_EXTRA=pstr
    OPLOT,xda1,yda1,PSYM=1,COLOR=250
    OPLOT,xda3,yda3,PSYM=1,COLOR= 50
    OPLOT,vertx,verty,LINESTYLE=2
    OPLOT,horix,horiy,LINESTYLE=2
    OPLOT,xx,f_para,LINESTYLE=2,COLOR= 30
    OPLOT,xx,f_cube,LINESTYLE=3,COLOR=150
    OPLOT,xx,f_quad,LINESTYLE=4,COLOR=200
    XYOUTS,xposi[0],yposi[0],'+ = Low  Freq. + Sign',/DATA,COLOR=250
    XYOUTS,xposi[0],yposi[1],'+ = High Freq. + Sign',/DATA,COLOR= 50
    XYOUTS,vertx[0]*1.1,verty[0]*1.2,vertl,/DATA
    XYOUTS,horix[0]*1.1,horiy[0]*1.2,horil,/DATA
    XYOUTS,fposi[0],fposi[1]-0.00,paral,/NORMAL,COLOR= 30
    XYOUTS,fposi[0],fposi[1]-0.03,cubel,/NORMAL,COLOR=150
    XYOUTS,fposi[0],fposi[1]-0.06,quadl,/NORMAL,COLOR=200
    XYOUTS,aposi[0],aposi[1]-0.00,alab,/NORMAL
    XYOUTS,aposi[0],aposi[1]-0.03,blab,/NORMAL
    XYOUTS,aposi[0],aposi[1]-0.06,clab,/NORMAL
    XYOUTS,aposi[0],aposi[1]-0.09,dlab,/NORMAL
    XYOUTS,aposi[0],aposi[1]-0.12,elab,/NORMAL

WSET,2
WSHOW,2
  PLOT,xda0,yda0,_EXTRA=pstr
    OPLOT,xda0,yda0,PSYM=4,COLOR=250
    OPLOT,xda1,yda1,PSYM=1,COLOR=200
    OPLOT,xda2,yda2,PSYM=4,COLOR=150
    OPLOT,xda3,yda3,PSYM=1,COLOR= 50
    OPLOT,vertx,verty,LINESTYLE=2
    OPLOT,horix,horiy,LINESTYLE=2
    OPLOT,xx,f_para,LINESTYLE=2,COLOR= 30
    OPLOT,xx,f_cube,LINESTYLE=3,COLOR= 80
    OPLOT,xx,f_quad,LINESTYLE=4,COLOR=120
    XYOUTS,xposi[0],yposi[0],'!9V!3 = Low  Freq. - Sign',/DATA,COLOR=250
    XYOUTS,xposi[0],yposi[1],'+ = Low  Freq. + Sign',/DATA,COLOR=200
    XYOUTS,xposi[0],yposi[2],'!9V!3 = High Freq. - Sign',/DATA,COLOR=150
    XYOUTS,xposi[0],yposi[3],'+ = High Freq. + Sign',/DATA,COLOR= 50
    XYOUTS,vertx[0]*1.1,verty[0]*1.2,vertl,/DATA
    XYOUTS,horix[0]*1.1,horiy[0]*1.2,horil,/DATA
    XYOUTS,fposi[0],fposi[1]-0.00,paral,/NORMAL,COLOR= 30
    XYOUTS,fposi[0],fposi[1]-0.03,cubel,/NORMAL,COLOR=150
    XYOUTS,fposi[0],fposi[1]-0.06,quadl,/NORMAL,COLOR=200
    XYOUTS,aposi[0],aposi[1]-0.00,alab,/NORMAL
    XYOUTS,aposi[0],aposi[1]-0.03,blab,/NORMAL
    XYOUTS,aposi[0],aposi[1]-0.06,clab,/NORMAL
    XYOUTS,aposi[0],aposi[1]-0.09,dlab,/NORMAL
    XYOUTS,aposi[0],aposi[1]-0.12,elab,/NORMAL

popen,fnam0[0],/LAND
  PLOT,xda0,yda0,_EXTRA=pstr
    OPLOT,xda0,yda0,PSYM=4,COLOR=250
    OPLOT,xda2,yda2,PSYM=4,COLOR= 50
    OPLOT,vertx,verty,LINESTYLE=2
    OPLOT,horix,horiy,LINESTYLE=2
    OPLOT,xx,f_para,LINESTYLE=2,COLOR= 30
    OPLOT,xx,f_cube,LINESTYLE=3,COLOR=150
    OPLOT,xx,f_quad,LINESTYLE=4,COLOR=200
    XYOUTS,xposi[0],yposi[0],'!9V!3 = Low  Freq. - Sign',/DATA,COLOR=250
    XYOUTS,xposi[0],yposi[1],'!9V!3 = High Freq. - Sign',/DATA,COLOR= 50
    XYOUTS,vertx[0]*1.1,verty[0]*1.2,vertl,/DATA
    XYOUTS,horix[0]*1.1,horiy[0]*1.2,horil,/DATA
    XYOUTS,fposi[0],fposi[1]-0.00,paral,/NORMAL,COLOR= 30
    XYOUTS,fposi[0],fposi[1]-0.03,cubel,/NORMAL,COLOR=150
    XYOUTS,fposi[0],fposi[1]-0.06,quadl,/NORMAL,COLOR=200
    XYOUTS,aposi[0],aposi[1]-0.00,alab,/NORMAL
    XYOUTS,aposi[0],aposi[1]-0.03,blab,/NORMAL
    XYOUTS,aposi[0],aposi[1]-0.06,clab,/NORMAL
    XYOUTS,aposi[0],aposi[1]-0.09,dlab,/NORMAL
    XYOUTS,aposi[0],aposi[1]-0.12,elab,/NORMAL
pclose

popen,fnam1[0],/LAND
  PLOT,xda1,yda1,_EXTRA=pstr
    OPLOT,xda1,yda1,PSYM=1,COLOR=250
    OPLOT,xda3,yda3,PSYM=1,COLOR= 50
    OPLOT,vertx,verty,LINESTYLE=2
    OPLOT,horix,horiy,LINESTYLE=2
    OPLOT,xx,f_para,LINESTYLE=2,COLOR= 30
    OPLOT,xx,f_cube,LINESTYLE=3,COLOR=150
    OPLOT,xx,f_quad,LINESTYLE=4,COLOR=200
    XYOUTS,xposi[0],yposi[0],'+ = Low  Freq. + Sign',/DATA,COLOR=250
    XYOUTS,xposi[0],yposi[1],'+ = High Freq. + Sign',/DATA,COLOR= 50
    XYOUTS,vertx[0]*1.1,verty[0]*1.2,vertl,/DATA
    XYOUTS,horix[0]*1.1,horiy[0]*1.2,horil,/DATA
    XYOUTS,fposi[0],fposi[1]-0.00,paral,/NORMAL,COLOR= 30
    XYOUTS,fposi[0],fposi[1]-0.03,cubel,/NORMAL,COLOR=150
    XYOUTS,fposi[0],fposi[1]-0.06,quadl,/NORMAL,COLOR=200
    XYOUTS,aposi[0],aposi[1]-0.00,alab,/NORMAL
    XYOUTS,aposi[0],aposi[1]-0.03,blab,/NORMAL
    XYOUTS,aposi[0],aposi[1]-0.06,clab,/NORMAL
    XYOUTS,aposi[0],aposi[1]-0.09,dlab,/NORMAL
    XYOUTS,aposi[0],aposi[1]-0.12,elab,/NORMAL
pclose

popen,fnam2[0],/LAND
  PLOT,xda0,yda0,_EXTRA=pstr
    OPLOT,xda0,yda0,PSYM=4,COLOR=250
    OPLOT,xda1,yda1,PSYM=1,COLOR=200
    OPLOT,xda2,yda2,PSYM=4,COLOR=150
    OPLOT,xda3,yda3,PSYM=1,COLOR= 50
    OPLOT,vertx,verty,LINESTYLE=2
    OPLOT,horix,horiy,LINESTYLE=2
    OPLOT,xx,f_para,LINESTYLE=2,COLOR= 30
    OPLOT,xx,f_cube,LINESTYLE=3,COLOR= 80
    OPLOT,xx,f_quad,LINESTYLE=4,COLOR=120
    XYOUTS,xposi[0],yposi[0],'!9V!3 = Low  Freq. - Sign',/DATA,COLOR=250
    XYOUTS,xposi[0],yposi[1],'+ = Low  Freq. + Sign',/DATA,COLOR=200
    XYOUTS,xposi[0],yposi[2],'!9V!3 = High Freq. - Sign',/DATA,COLOR=150
    XYOUTS,xposi[0],yposi[3],'+ = High Freq. + Sign',/DATA,COLOR= 50
    XYOUTS,vertx[0]*1.1,verty[0]*1.2,vertl,/DATA
    XYOUTS,horix[0]*1.1,horiy[0]*1.2,horil,/DATA
    XYOUTS,fposi[0],fposi[1]-0.00,paral,/NORMAL,COLOR= 30
    XYOUTS,fposi[0],fposi[1]-0.03,cubel,/NORMAL,COLOR=150
    XYOUTS,fposi[0],fposi[1]-0.06,quadl,/NORMAL,COLOR=200
    XYOUTS,aposi[0],aposi[1]-0.00,alab,/NORMAL
    XYOUTS,aposi[0],aposi[1]-0.03,blab,/NORMAL
    XYOUTS,aposi[0],aposi[1]-0.06,clab,/NORMAL
    XYOUTS,aposi[0],aposi[1]-0.09,dlab,/NORMAL
    XYOUTS,aposi[0],aposi[1]-0.12,elab,/NORMAL
pclose















