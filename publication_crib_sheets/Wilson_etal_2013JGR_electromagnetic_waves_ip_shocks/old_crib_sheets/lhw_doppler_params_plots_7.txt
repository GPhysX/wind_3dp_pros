;-----------------------------------------------------------------------------------------
; => Constants
;-----------------------------------------------------------------------------------------
f        = !VALUES.F_NAN
d        = !VALUES.D_NAN
c        = 2.99792458d8      ; -Speed of light in vacuum (m/s)
kB       = 1.380658d-23      ; -Boltzmann Constant (J/K)
K_eV     = 1.160474d4        ; -Conversion = degree Kelvin/eV
epo      = 8.854187817d-12   ; -Permittivity of free space (F/m)
muo      = 4d0*!DPI*1d-7     ; -Permeability of free space (N/A^2 or H/m)
me       = 9.1093897d-31     ; -Electron mass (kg)
mp       = 1.6726231d-27     ; -Proton mass (kg)
qq       = 1.60217733d-19    ; => Fundamental charge (C)

date     = '121097'
tramp    = '1997-12-10/04:33:14.664'
vshn     = 391.2                   ; => Up/Downstream normal flow speed [SC frame] RHO8
test0    = tdss_lhw_stats_read(DATE=date)
evn0     = test0.EVENT_N
scet0    = test0.SCET_SE[*,0]
; => Calc. dist. from ramp
del_t0   = time_double(scet0) - time_double(tramp)
dist_0   = del_t0*vshn[0]
avg_lfk0 = (test0.K_ST_LOWF_MP + test0.K_EN_LOWF_MP)/2d0      ; => [Avg. |k| from low  freq. end of bandpass]
avg_hfk0 = (test0.K_ST_highF_MP + test0.K_EN_highF_MP)/2d0    ; => [Avg. |k| from high freq. end of bandpass]
freql0   = test0.FREQ_LOW_HIGH[*,0]
freqh0   = test0.FREQ_LOW_HIGH[*,1]
pkamp0   = test0.PEAK_AMP            ; => [Unfiltered] Peak-to-Peak wave amplitude (nT) from TDSS
ftpkamp0 = test0.PEAK_AMP_FILT       ; => [Filtered]   Peak wave amplitude (nT) from TDSS
thkbl0   = test0.THETA_KB[*,0]       ; => (k . B)[at start of TDSS sample, degrees]
thkbh0   = test0.THETA_KB[*,1]       ; => (k . B)[at end   of TDSS sample, degrees]
thkvl0   = test0.THETA_KV[*,0]       ; => (k . Vsw)[at start of TDSS sample, degrees]
thkvh0   = test0.THETA_KV[*,1]       ; => (k . Vsw)[at end   of TDSS sample, degrees]
wce0     = (test0.WCE_SE[*,0] + test0.WCE_SE[*,1])/2d0
wpe0     = (test0.WPE_SE[*,0] + test0.WPE_SE[*,1])/2d0
wlh0     = (test0.WLH_SE[*,0] + test0.WLH_SE[*,1])/2d0
vte0     = (test0.VTE_SE[*,0] + test0.VTE_SE[*,1])/2d0
rhoe0    = (test0.RHO_VTCE_SE[*,0] + test0.RHO_VTCE_SE[*,1])/2d0
vsw0     = (test0.VSW_ST + test0.VSW_EN)/2d0
vdr0     = (test0.VDRIFT_ST + test0.VDRIFT_EN)/2d0   ; => (Vsw - Ve) (km/s) [SC-Frame]
magf0    = (test0.MAGF_ST + test0.MAGF_EN)/2d0
dens0    = (test0.NE_SE[*,0] + test0.NE_SE[*,1])/2d0
bmag0    = SQRT(TOTAL(magf0^2,2L,/NAN))
betapa0  = (test0.BETA_PARCE_SE[*,0] + test0.BETA_PARCE_SE[*,1])/2d0
teavg0   = (test0.TE_AVG_SE[*,0] + test0.TE_AVG_SE[*,1])/2d0
tiavg0   = (test0.TI_AVG_SE[*,0] + test0.TI_AVG_SE[*,1])/2d0
vti0     = SQRT(2d0*tiavg0*K_eV*kB/mp)
tecavg0  = (test0.TEC_SE[*,0] + test0.TEC_SE[*,1])/2d0
tehavg0  = (test0.TEH_SE[*,0] + test0.TEH_SE[*,1])/2d0
tparc0   = (test0.TPAR_EC_SE[*,0] + test0.TPAR_EC_SE[*,1])/2d0
tperc0   = (test0.TPER_EC_SE[*,0] + test0.TPER_EC_SE[*,1])/2d0
tparh0   = (test0.TPAR_EH_SE[*,0] + test0.TPAR_EH_SE[*,1])/2d0
tperh0   = (test0.TPER_EH_SE[*,0] + test0.TPER_EH_SE[*,1])/2d0
qmag0    = (test0.QMAG_SE[*,0] + test0.QMAG_SE[*,1])/2d0
kvec0    = test0.KVEC
gnorm80  = [-0.903, 0.168,-0.397]   ; => Using RH08 from JCK's site
gnorm90  = [-0.971, 0.094,-0.218]   ; => Using RH08 from JCK's site
thkn80   = ACOS(my_dot_prod(kvec0,gnorm80,/NOM))*18d1/!DPI
thkn90   = ACOS(my_dot_prod(kvec0,gnorm90,/NOM))*18d1/!DPI
thbn80   = REPLICATE(70.9,N_ELEMENTS(evn0))
thbn90   = REPLICATE(71.9,N_ELEMENTS(evn0))

date     = '082698'
tramp    = '1998-08-26/06:40:24.972'
vshn     = 687.4                   ; => Up/Downstream normal flow speed [SC frame] RHO8
test1    = tdss_lhw_stats_read(DATE=date)
evn1     = test1.EVENT_N
scet1    = test1.SCET_SE[*,0]
; => Calc. dist. from ramp
del_t1   = time_double(scet1) - time_double(tramp)
dist_1   = del_t1*vshn[0]
avg_lfk1 = (test1.K_ST_LOWF_MP + test1.K_EN_LOWF_MP)/2d0      ; => [Avg. |k| from low  freq. end of bandpass]
avg_hfk1 = (test1.K_ST_highF_MP + test1.K_EN_highF_MP)/2d0    ; => [Avg. |k| from high freq. end of bandpass]
freql1   = test1.FREQ_LOW_HIGH[*,0]
freqh1   = test1.FREQ_LOW_HIGH[*,1]
thkbl1   = test1.THETA_KB[*,0]
thkbh1   = test1.THETA_KB[*,1]
thkvl1   = test1.THETA_KV[*,0]
thkvh1   = test1.THETA_KV[*,1]
pkamp1   = test1.PEAK_AMP            ; => [Unfiltered] Peak-to-Peak wave amplitude (nT) from TDSS
ftpkamp1 = test1.PEAK_AMP_FILT       ; => [Filtered]   Peak wave amplitude (nT) from TDSS
wce1     = (test1.WCE_SE[*,0] + test1.WCE_SE[*,1])/2d0
wpe1     = (test1.WPE_SE[*,0] + test1.WPE_SE[*,1])/2d0
wlh1     = (test1.WLH_SE[*,0] + test1.WLH_SE[*,1])/2d0
vte1     = (test1.VTE_SE[*,0] + test1.VTE_SE[*,1])/2d0
rhoe1    = (test1.RHO_VTCE_SE[*,0] + test1.RHO_VTCE_SE[*,1])/2d0
vsw1     = (test1.VSW_ST + test1.VSW_EN)/2d0
vdr1     = (test1.VDRIFT_ST + test1.VDRIFT_EN)/2d0   ; => (Vsw - Ve) (km/s) [SC-Frame]
magf1    = (test1.MAGF_ST + test1.MAGF_EN)/2d0
dens1    = (test1.NE_SE[*,0] + test1.NE_SE[*,1])/2d0
bmag1    = SQRT(TOTAL(magf1^2,2L,/NAN))
betapa1  = (test1.BETA_PARCE_SE[*,0] + test1.BETA_PARCE_SE[*,1])/2d0
teavg1   = (test1.TE_AVG_SE[*,0] + test1.TE_AVG_SE[*,1])/2d0
tiavg1   = (test1.TI_AVG_SE[*,0] + test1.TI_AVG_SE[*,1])/2d0
vti1     = SQRT(2d0*tiavg1*K_eV*kB/mp)
tecavg1  = (test1.TEC_SE[*,0] + test1.TEC_SE[*,1])/2d0
tehavg1  = (test1.TEH_SE[*,0] + test1.TEH_SE[*,1])/2d0
tparc1   = (test1.TPAR_EC_SE[*,0] + test1.TPAR_EC_SE[*,1])/2d0
tperc1   = (test1.TPER_EC_SE[*,0] + test1.TPER_EC_SE[*,1])/2d0
tparh1   = (test1.TPAR_EH_SE[*,0] + test1.TPAR_EH_SE[*,1])/2d0
tperh1   = (test1.TPER_EH_SE[*,0] + test1.TPER_EH_SE[*,1])/2d0
qmag1    = (test1.QMAG_SE[*,0] + test1.QMAG_SE[*,1])/2d0
kvec1    = test1.KVEC
gnorm81  = [-0.655,0.040,-0.754]   ; => Using RH08 from JCK's site
gnorm91  = [-0.822,0.138,-0.553]   ; => Using RH09 from JCK's site
thkn81   = ACOS(my_dot_prod(kvec1,gnorm81,/NOM))*18d1/!DPI
thkn91   = ACOS(my_dot_prod(kvec1,gnorm91,/NOM))*18d1/!DPI
thbn81   = REPLICATE(82.2,N_ELEMENTS(evn1))
thbn91   = REPLICATE(78.7,N_ELEMENTS(evn1))

date     = '092498'
tramp    = '1998-09-24/23:20:37.374'
vshn     = 772.4                   ; => Up/Downstream normal flow speed [SC frame] RHO8
test2    = tdss_lhw_stats_read(DATE=date)
evn2     = test2.EVENT_N
scet2    = test2.SCET_SE[*,0]
; => Calc. dist. from ramp
del_t2   = time_double(scet2) - time_double(tramp)
dist_2   = del_t2*vshn[0]
avg_lfk2 = (test2.K_ST_LOWF_MP + test2.K_EN_LOWF_MP)/2d0      ; => [Avg. |k| from low  freq. end of bandpass]
avg_hfk2 = (test2.K_ST_highF_MP + test2.K_EN_highF_MP)/2d0    ; => [Avg. |k| from high freq. end of bandpass]
freql2   = test2.FREQ_LOW_HIGH[*,0]
freqh2   = test2.FREQ_LOW_HIGH[*,1]
thkbl2   = test2.THETA_KB[*,0]
thkbh2   = test2.THETA_KB[*,1]
thkvl2   = test2.THETA_KV[*,0]
thkvh2   = test2.THETA_KV[*,1]
pkamp2   = test2.PEAK_AMP            ; => [Unfiltered] Peak-to-Peak wave amplitude (nT) from TDSS
ftpkamp2 = test2.PEAK_AMP_FILT       ; => [Filtered]   Peak wave amplitude (nT) from TDSS
wce2     = (test2.WCE_SE[*,0] + test2.WCE_SE[*,1])/2d0
wpe2     = (test2.WPE_SE[*,0] + test2.WPE_SE[*,1])/2d0
wlh2     = (test2.WLH_SE[*,0] + test2.WLH_SE[*,1])/2d0
vte2     = (test2.VTE_SE[*,0] + test2.VTE_SE[*,1])/2d0
rhoe2    = (test2.RHO_VTCE_SE[*,0] + test2.RHO_VTCE_SE[*,1])/2d0
vsw2     = (test2.VSW_ST + test2.VSW_EN)/2d0
vdr2     = (test2.VDRIFT_ST + test2.VDRIFT_EN)/2d0   ; => (Vsw - Ve) (km/s) [SC-Frame]
magf2    = (test2.MAGF_ST + test2.MAGF_EN)/2d0
dens2    = (test2.NE_SE[*,0] + test2.NE_SE[*,1])/2d0
bmag2    = SQRT(TOTAL(magf2^2,2L,/NAN))
betapa2  = (test2.BETA_PARCE_SE[*,0] + test2.BETA_PARCE_SE[*,1])/2d0
teavg2   = (test2.TE_AVG_SE[*,0] + test2.TE_AVG_SE[*,1])/2d0
tiavg2   = (test2.TI_AVG_SE[*,0] + test2.TI_AVG_SE[*,1])/2d0
vti2     = SQRT(2d0*tiavg2*K_eV*kB/mp)
tecavg2  = (test2.TEC_SE[*,0] + test2.TEC_SE[*,1])/2d0
tehavg2  = (test2.TEH_SE[*,0] + test2.TEH_SE[*,1])/2d0
tparc2   = (test2.TPAR_EC_SE[*,0] + test2.TPAR_EC_SE[*,1])/2d0
tperc2   = (test2.TPER_EC_SE[*,0] + test2.TPER_EC_SE[*,1])/2d0
tparh2   = (test2.TPAR_EH_SE[*,0] + test2.TPAR_EH_SE[*,1])/2d0
tperh2   = (test2.TPER_EH_SE[*,0] + test2.TPER_EH_SE[*,1])/2d0
qmag2    = (test2.QMAG_SE[*,0] + test2.QMAG_SE[*,1])/2d0
kvec2    = test2.KVEC
gnorm82  = [-0.914,-0.220,-0.341]   ; => Using RH08 from JCK's site
gnorm92  = [-0.939,-0.175,-0.296]   ; => Using RH09 from JCK's site
thkn82   = ACOS(my_dot_prod(kvec2,gnorm82,/NOM))*18d1/!DPI
thkn92   = ACOS(my_dot_prod(kvec2,gnorm92,/NOM))*18d1/!DPI
thbn82   = REPLICATE(82.1,N_ELEMENTS(evn2))
thbn92   = REPLICATE(78.6,N_ELEMENTS(evn2))

date     = '021100'
tramp    = '2000-02-11/23:33:55.319'
vshn     = 641.4                   ; => Up/Downstream normal flow speed [SC frame] RHO8
test3    = tdss_lhw_stats_read(DATE=date)
evn3     = test3.EVENT_N
scet3    = test3.SCET_SE[*,0]
; => Calc. dist. from ramp
del_t3   = time_double(scet3) - time_double(tramp)
dist_3   = del_t3*vshn[0]
avg_lfk3 = (test3.K_ST_LOWF_MP + test3.K_EN_LOWF_MP)/2d0      ; => [Avg. |k| from low  freq. end of bandpass]
avg_hfk3 = (test3.K_ST_highF_MP + test3.K_EN_highF_MP)/2d0    ; => [Avg. |k| from high freq. end of bandpass]
freql3   = test3.FREQ_LOW_HIGH[*,0]
freqh3   = test3.FREQ_LOW_HIGH[*,1]
thkbl3   = test3.THETA_KB[*,0]
thkbh3   = test3.THETA_KB[*,1]
thkvl3   = test3.THETA_KV[*,0]
thkvh3   = test3.THETA_KV[*,1]
pkamp3   = test3.PEAK_AMP            ; => [Unfiltered] Peak-to-Peak wave amplitude (nT) from TDSS
ftpkamp3 = test3.PEAK_AMP_FILT       ; => [Filtered]   Peak wave amplitude (nT) from TDSS
wce3     = (test3.WCE_SE[*,0] + test3.WCE_SE[*,1])/2d0
wpe3     = (test3.WPE_SE[*,0] + test3.WPE_SE[*,1])/2d0
wlh3     = (test3.WLH_SE[*,0] + test3.WLH_SE[*,1])/2d0
vte3     = (test3.VTE_SE[*,0] + test3.VTE_SE[*,1])/2d0
rhoe3    = (test3.RHO_VTCE_SE[*,0] + test3.RHO_VTCE_SE[*,1])/2d0
vsw3     = (test3.VSW_ST + test3.VSW_EN)/2d0
vdr3     = (test3.VDRIFT_ST + test3.VDRIFT_EN)/2d0   ; => (Vsw - Ve) (km/s) [SC-Frame]
magf3    = (test3.MAGF_ST + test3.MAGF_EN)/2d0
dens3    = (test3.NE_SE[*,0] + test3.NE_SE[*,1])/2d0
bmag3    = SQRT(TOTAL(magf3^2,2L,/NAN))
betapa3  = (test3.BETA_PARCE_SE[*,0] + test3.BETA_PARCE_SE[*,1])/3d0
teavg3   = (test3.TE_AVG_SE[*,0] + test3.TE_AVG_SE[*,1])/3d0
tiavg3   = (test3.TI_AVG_SE[*,0] + test3.TI_AVG_SE[*,1])/3d0
vti3     = SQRT(2d0*tiavg3*K_eV*kB/mp)
tecavg3  = (test3.TEC_SE[*,0] + test3.TEC_SE[*,1])/3d0
tehavg3  = (test3.TEH_SE[*,0] + test3.TEH_SE[*,1])/3d0
tparc3   = (test3.TPAR_EC_SE[*,0] + test3.TPAR_EC_SE[*,1])/3d0
tperc3   = (test3.TPER_EC_SE[*,0] + test3.TPER_EC_SE[*,1])/3d0
tparh3   = (test3.TPAR_EH_SE[*,0] + test3.TPAR_EH_SE[*,1])/3d0
tperh3   = (test3.TPER_EH_SE[*,0] + test3.TPER_EH_SE[*,1])/3d0
qmag3    = (test3.QMAG_SE[*,0] + test3.QMAG_SE[*,1])/3d0
kvec3    = test3.KVEC
gnorm83  = [-0.865,-0.452,0.218]   ; => Using RH08 from JCK's site
gnorm93  = [-0.930,-0.367,-0.028]   ; => Using RH09 from JCK's site
thkn83   = ACOS(my_dot_prod(kvec3,gnorm83,/NOM))*18d1/!DPI
thkn93   = ACOS(my_dot_prod(kvec3,gnorm93,/NOM))*18d1/!DPI
thbn83   = REPLICATE(86.5,N_ELEMENTS(evn3))
thbn93   = REPLICATE(89.9,N_ELEMENTS(evn3))



cbn080   = COS(thbn80*!DPI/18d1)
cbn081   = COS(thbn81*!DPI/18d1)
cbn082   = COS(thbn82*!DPI/18d1)
cbn083   = COS(thbn83*!DPI/18d1)

valf0    = (bmag0*1d-9)/SQRT(mp*muo*1d6*dens0)
valf1    = (bmag1*1d-9)/SQRT(mp*muo*1d6*dens1)
valf2    = (bmag2*1d-9)/SQRT(mp*muo*1d6*dens2)
valf3    = (bmag3*1d-9)/SQRT(mp*muo*1d6*dens3)

cs_ia0   = SQRT((teavg0 + 3d0*tiavg0)*K_eV*kB/mp)
cs_ia1   = SQRT((teavg1 + 3d0*tiavg1)*K_eV*kB/mp)
cs_ia2   = SQRT((teavg2 + 3d0*tiavg2)*K_eV*kB/mp)
cs_ia3   = SQRT((teavg3 + 3d0*tiavg3)*K_eV*kB/mp)

v2_vac0  = valf0^2 + cs_ia0^2
v2_vac1  = valf1^2 + cs_ia1^2
v2_vac2  = valf2^2 + cs_ia2^2
v2_vac3  = valf3^2 + cs_ia3^2
vf_080   = SQRT((v2_vac0 + SQRT(v2_vac0^2 - 4d0*valf0^2*cs_ia0^2*cbn080^2))/2d0)
vf_081   = SQRT((v2_vac1 + SQRT(v2_vac1^2 - 4d0*valf1^2*cs_ia1^2*cbn081^2))/2d0)
vf_082   = SQRT((v2_vac2 + SQRT(v2_vac2^2 - 4d0*valf2^2*cs_ia2^2*cbn082^2))/2d0)
vf_083   = SQRT((v2_vac3 + SQRT(v2_vac3^2 - 4d0*valf3^2*cs_ia3^2*cbn083^2))/2d0)

vdrmg0   = SQRT(TOTAL(vdr0^2,2L,/NAN))            ; => |(Vsw - Ve)| (km/s) [SC-Frame]
vdrmg1   = SQRT(TOTAL(vdr1^2,2L,/NAN))            ; => |(Vsw - Ve)| (km/s) [SC-Frame]
vdrmg2   = SQRT(TOTAL(vdr2^2,2L,/NAN))            ; => |(Vsw - Ve)| (km/s) [SC-Frame]
vdrmg3   = SQRT(TOTAL(vdr3^2,2L,/NAN))            ; => |(Vsw - Ve)| (km/s) [SC-Frame]

; => Assume 95% of electron dist. density is core
densc0   = 95d-2*dens0
densc1   = 95d-2*dens1
densc2   = 95d-2*dens2
densc3   = 95d-2*dens3
densh0   = 5d-2*dens0
densh1   = 5d-2*dens1
densh2   = 5d-2*dens2
densh3   = 5d-2*dens3
teff_av0 = dens0*tecavg0*tehavg0/(densh0*tecavg0 + densc0*tehavg0)
teff_av1 = dens1*tecavg1*tehavg1/(densh1*tecavg1 + densc1*tehavg1)
teff_av2 = dens2*tecavg2*tehavg2/(densh2*tecavg2 + densc2*tehavg2)
teff_av3 = dens3*tecavg3*tehavg3/(densh3*tecavg3 + densc3*tehavg3)
;-----------------------------------------------------------------------------------------
; => Combine terms
;-----------------------------------------------------------------------------------------
evns     = [evn0,evn1,evn2,evn3]
scets    = [scet0,scet1,scet2,scet3]
scete    = [test0.SCET_SE[*,1],test1.SCET_SE[*,1],test2.SCET_SE[*,1],test3.SCET_SE[*,1]]
kvecs    = [kvec0,kvec1,kvec2,kvec3]
kvecx    = [test0.KVEC[*,0],test1.KVEC[*,0],test2.KVEC[*,0],test3.KVEC[*,0]]
kvecy    = [test0.KVEC[*,1],test1.KVEC[*,1],test2.KVEC[*,1],test3.KVEC[*,1]]
kvecz    = [test0.KVEC[*,2],test1.KVEC[*,2],test2.KVEC[*,2],test3.KVEC[*,2]]
pkamps   = [pkamp0,pkamp1,pkamp2,pkamp3]/2d0      ; => change from Peak-to-Peak to Peak
filtamp  = [ftpkamp0,ftpkamp1,ftpkamp2,ftpkamp3]  ; => Filtered amplitudes
dist_r   = [dist_0,dist_1,dist_2,dist_3]          ; => normal distance from shock ramp (km)

thbn8    = [thbn80,thbn81,thbn82,thbn83]          ; => Theta_Bn (deg) [RH08 JCK's]
thbn9    = [thbn90,thbn91,thbn92,thbn93]          ; => Theta_Bn (deg) [RH08 JCK's]
thkbl    = [thkbl0,thkbl1,thkbl2,thkbl3]          ; => Theta_kB (deg) [low  freq. end of bandpass]
thkvl    = [thkvl0,thkvl1,thkvl2,thkvl3]          ; => Theta_kV (deg) [low  freq. end of bandpass]
thkbh    = [thkbh0,thkbh1,thkbh2,thkbh3]          ; => Theta_kB (deg) [high freq. end of bandpass]
thkvh    = [thkvh0,thkvh1,thkvh2,thkvh3]          ; => Theta_kV (deg) [high freq. end of bandpass]
vsw      = [vsw0,vsw1,vsw2,vsw3]                  ; => PL solar wind velocity (km/s) [GSE]
vmag     = SQRT(TOTAL(vsw^2,2L,/NAN))
vdrft    = [vdr0,vdr1,vdr2,vdr3]                  ; => (Vsw - Ve) (km/s) [SC-Frame]
vdrmg    = SQRT(TOTAL(vdrft^2,2L,/NAN))
freql    = [freql0,freql1,freql2,freql3]          ; => (Hz) low  freq. end of bandpass
freqh    = [freqh0,freqh1,freqh2,freqh3]          ; => (Hz) high freq. end of bandpass
wce      = [wce0,wce1,wce2,wce3]                  ; => Electron cyclotron frequency (rad/s)
wcp      = wce*me/mp                              ; => Proton   cyclotron frequency (rad/s)
wpe      = [wpe0,wpe1,wpe2,wpe3]                  ; => Electron plasma    frequency (rad/s)
wlh      = [wlh0,wlh1,wlh2,wlh3]                  ; => ES lower hybrid resonance frequency (rad/s)
vte      = [vte0,vte1,vte2,vte3]                  ; => Electron thermal speed (km/s)
vti      = [vti0,vti1,vti2,vti3]                  ; => Electron thermal speed (km/s)
rhoe     = [rhoe0,rhoe1,rhoe2,rhoe3]              ; => Electron thermal gyroradius (km)
rhop     = rhoe*SQRT(mp/me)                       ; => Proton thermal gyroradius (km)
avg_lfk  = [avg_lfk0,avg_lfk1,avg_lfk2,avg_lfk3]  ; => [Avg. |k| from low  freq. end of bandpass]
avg_hfk  = [avg_hfk0,avg_hfk1,avg_hfk2,avg_hfk3]  ; => [Avg. |k| from high freq. end of bandpass]
dens     = [dens0,dens1,dens2,dens3]              ; => Electron density [cm^(-3)] from TNR
magf     = [magf0,magf1,magf2,magf3]
bmag     = [bmag0,bmag1,bmag2,bmag3]              ; => Magnitude of the B-field (nT)

beta_pac = [betapa0,betapa1,betapa2,betapa3]      ; => core para. electron beta
teavg    = [teavg0,teavg1,teavg2,teavg3]          ; => EL electron avg. temp (eV)
tiavg    = [tiavg0,tiavg1,tiavg2,tiavg3]          ; => PL ion avg. temp (eV)
tecavg   = [tecavg0,tecavg1,tecavg2,tecavg3]      ; => core avg.  temp (eV)
tehavg   = [tehavg0,tehavg1,tehavg2,tehavg3]      ; => halo avg.  temp (eV)
tparc    = [tparc0,tparc1,tparc2,tparc3]          ; => core para. temp (eV)
tperc    = [tperc0,tperc1,tperc2,tperc3]          ; => core perp. temp (eV)
tparh    = [tparh0,tparh1,tparh2,tparh3]          ; => halo para. temp (eV)
tperh    = [tperh0,tperh1,tperh2,tperh3]          ; => halo perp. temp (eV)
qmag     = [qmag0,qmag1,qmag2,qmag3]              ; => heat flux magnitude [eV km/s cm^(-3)]

; => Calc. Alfven, IA, and magnetosonic speeds
valf     = (bmag*1d-9)/SQRT(mp*muo*1d6*dens)
cs_ia    = SQRT((teavg + 3d0*tiavg)*K_eV*kB/mp)
v2_vacs  = valf^2 + cs_ia^2
cbn08    = COS(thbn8*!DPI/18d1)
cbn09    = COS(thbn9*!DPI/18d1)
vf_08    = SQRT((v2_vacs + SQRT(v2_vacs^2 - 4d0*valf^2*cs_ia^2*cbn08^2))/2d0)
vf_09    = SQRT((v2_vacs + SQRT(v2_vacs^2 - 4d0*valf^2*cs_ia^2*cbn09^2))/2d0)

; => Calc. temperature ratios
te_tiav  = teavg/tiavg
tanis_c  = tperc/tparc
tanis_h  = tperh/tparh
thc_par  = tparh/tparc
thc_per  = tperh/tperc
tehc_avg = tehavg/tecavg

;densc    = 9d-1*dens
;densh    = 1d-1*dens
teff_avg = [teff_av0,teff_av1,teff_av2,teff_av3]
cs_iaeff = SQRT((teff_avg + 3d0*tiavg)*K_eV*kB/mp)
; => Estimate current density [nA m^(-2)]
;     1d3 => converts speed to   [m/s]
;     1d6 => converts density to [m^(-3)]
;     1d9 => converts units to [nA m^(-2)] from [A m^(-2)]
jdrft    = qq*(vdrmg*1d3)*(dens*1d6)*1d9

; => Normalize the drift speed by the ion thermal speed
vdrvti   = vdrmg/vti

; => Normalize the wave number by the electron inertial length
kcwpelfm = avg_lfk[*,0]*c*1d-3/wpe
kcwpelfp = avg_lfk[*,1]*c*1d-3/wpe
kcwpehfm = avg_hfk[*,0]*c*1d-3/wpe
kcwpehfp = avg_hfk[*,1]*c*1d-3/wpe

; => Normalize the wave number by the electron thermal gyroradius
krhoelfm = avg_lfk[*,0]*rhoe
krhoelfp = avg_lfk[*,1]*rhoe
krhoehfm = avg_hfk[*,0]*rhoe
krhoehfp = avg_hfk[*,1]*rhoe
;---------------------------------------------------------------------
; => Wave number estimates from:
;
; => Calculations of Eq. 4 from Coroniti et al., [1982]
;  Coroniti, F. V., C. F. Kennel, F. L. Scarf, and E. J. Smith (1982),
;    Whistler mode turbulence in the disturbed solar wind, J. Geophys.
;    Res., 87, 6029–6044, doi:10.1029/JA087iA08p06029.
;---------------------------------------------------------------------
; => Separate by plus and minus sign
avg_lfkm = avg_lfk[*,0]  ; => [Avg. |k| (- sign) from low  freq. end of bandpass]
avg_lfkp = avg_lfk[*,1]  ; => [Avg. |k| (+ sign) from low  freq. end of bandpass]
avg_hfkm = avg_hfk[*,0]  ; => [Avg. |k| (- sign) from high freq. end of bandpass]
avg_hfkp = avg_hfk[*,1]  ; => [Avg. |k| (+ sign) from high freq. end of bandpass]
; => Calculate rest frame frequencies from wave number estimates
ckm        = (c*1d-3)
fac0l      = wce*ABS(COS(thkbl*!DPI/18d1))
fac0h      = wce*ABS(COS(thkbh*!DPI/18d1))
fac1lm     = (wpe/(ckm*avg_lfkm))^2
fac1lp     = (wpe/(ckm*avg_lfkp))^2
fac1hm     = (wpe/(ckm*avg_hfkm))^2
fac1hp     = (wpe/(ckm*avg_hfkp))^2
frest_lfkm = fac0l/(1d0 + fac1lm)  ; => Rest frame freq. (rad/s) [|k| (- sign) from low  freq. end of bandpass]
frest_lfkp = fac0l/(1d0 + fac1lp)  ; => Rest frame freq. (rad/s) [|k| (+ sign) from low  freq. end of bandpass]
frest_hfkm = fac0h/(1d0 + fac1hm)  ; => Rest frame freq. (rad/s) [|k| (- sign) from high freq. end of bandpass]
frest_hfkp = fac0h/(1d0 + fac1hp)  ; => Rest frame freq. (rad/s) [|k| (+ sign) from high freq. end of bandpass]

; => Calculate index of refraction
testlm   = cold_plasma_params_2d(bmag,dens,FREQF=frest_lfkm/(2d0*!DPI),ANGLE=thkb,/ONED)
testlp   = cold_plasma_params_2d(bmag,dens,FREQF=frest_lfkp/(2d0*!DPI),ANGLE=thkb,/ONED)
testhm   = cold_plasma_params_2d(bmag,dens,FREQF=frest_hfkm/(2d0*!DPI),ANGLE=thkb,/ONED)
testhp   = cold_plasma_params_2d(bmag,dens,FREQF=frest_hfkp/(2d0*!DPI),ANGLE=thkb,/ONED)
indexlm  = testlm.INDEX_REF_1
alfvinlm = testlm.INDEX_ALFVEN
bad      = WHERE(indexlm LT 0.,bd)
IF (bd GT 0) THEN indexlm[bad] = d
indexlp  = testlp.INDEX_REF_1
alfvinlp = testlp.INDEX_ALFVEN
bad      = WHERE(indexlp LT 0.,bd)
IF (bd GT 0) THEN indexlp[bad] = d
indexhm  = testhm.INDEX_REF_1
alfvinhm = testhm.INDEX_ALFVEN
bad      = WHERE(indexhm LT 0.,bd)
IF (bd GT 0) THEN indexhm[bad] = d
indexhp  = testhp.INDEX_REF_1
alfvinhp = testhp.INDEX_ALFVEN
bad      = WHERE(indexhp LT 0.,bd)
IF (bd GT 0) THEN indexhp[bad] = d
;-----------------------------------------------------------------------------------------
; => Plot histograms [by spacecraft frame frequencies]
;-----------------------------------------------------------------------------------------
flh       = wlh/(2d0*!DPI)
delflow   = (freql - flh) LE 0
delfhigh  = (freqh - flh)
; => Define "Low"  as (freql LE flh) AND (freqh LE 40.)
; => Define "High" as (freql GT flh) AND (freqh GT 40.) AND (delfhigh GT 0.)
test_low  = delflow        AND (freqh LE 40.)
test_high = (freql GT flh) AND (freqh GT 40.) AND (delfhigh GT 0.)
good_low  = WHERE(test_low ,gdlw)
good_high = WHERE(test_high,gdhh)
PRINT,';   ',gdlw,gdhh
;            115         307

thkb_ttl  = '!7h!3'+'!DkB!N'
thkv_ttl  = '!7h!3'+'!DkV!N'
ttlekb    = 'Angle between k-vector and B-field, '+thkb_ttl[0]
ttlekv    = 'Angle between k-vector and Vsw, '+thkv_ttl[0]
dra       = [0d0,18d1]
nb        = 10L
suffx0    = ['  [start, ','  [end  , ']
suffx1    = ['f!Dsc,low!N','f!Dsc,high!N']+']'
fsuff1    = ['fsc-Low','fsc-High']
fkbkvstr  = ['kB','kV']
fprefb    = 'ALL_shocks_theta_'+fkbkvstr[0]+'_'
fprefv    = 'ALL_shocks_theta_'+fkbkvstr[1]+'_'
fsuff0b   = ['k-dot-B-start_','k-dot-B-end_']
fsuff0v   = ['k-dot-Vsw-start_','k-dot-Vsw-end_']

;-----------------------------------------------------
; => 0 - 180 degrees
;-----------------------------------------------------
; => Theta_kB
ttle      = ttlekb[0]
WSET,0
xdat      = thkbl[good_low]
fname     = fprefb[0]+fsuff0b[0]+fsuff1[0]+'_0-180_histogram'
xttl      = thkb_ttl[0]+suffx0[0]+suffx1[0]     ; => fsc,low  and (k . B[start])
  my_histogram_plot,xdat,NBINS=nb,XTTL=xttl[0],TTLE=ttle[0],DRANGE=dra
popen,fname[0],/LAND
  my_histogram_plot,xdat,NBINS=nb,XTTL=xttl[0],TTLE=ttle[0],DRANGE=dra
pclose

WSET,1
xdat      = thkbh[good_low]
fname     = fprefb[0]+fsuff0b[1]+fsuff1[0]+'_0-180_histogram'
xttl      = thkb_ttl[0]+suffx0[1]+suffx1[0]     ; => fsc,low  and (k . B[end  ])
  my_histogram_plot,xdat,NBINS=nb,XTTL=xttl[0],TTLE=ttle[0],DRANGE=dra
popen,fname[0],/LAND
  my_histogram_plot,xdat,NBINS=nb,XTTL=xttl[0],TTLE=ttle[0],DRANGE=dra
pclose

WSET,2
xdat      = thkbl[good_high]
fname     = fprefb[0]+fsuff0b[0]+fsuff1[1]+'_0-180_histogram'
xttl      = thkb_ttl[0]+suffx0[0]+suffx1[1]     ; => fsc,high and (k . B[start])
  my_histogram_plot,xdat,NBINS=nb,XTTL=xttl[0],TTLE=ttle[0],DRANGE=dra
popen,fname[0],/LAND
  my_histogram_plot,xdat,NBINS=nb,XTTL=xttl[0],TTLE=ttle[0],DRANGE=dra
pclose

WSET,3
xdat      = thkbh[good_high]
fname     = fprefb[0]+fsuff0b[1]+fsuff1[1]+'_0-180_histogram'
xttl      = thkb_ttl[0]+suffx0[1]+suffx1[1]     ; => fsc,high and (k . B[end  ])
  my_histogram_plot,xdat,NBINS=nb,XTTL=xttl[0],TTLE=ttle[0],DRANGE=dra
popen,fname[0],/LAND
  my_histogram_plot,xdat,NBINS=nb,XTTL=xttl[0],TTLE=ttle[0],DRANGE=dra
pclose


; => Theta_kV
ttle      = ttlekv[0]
WSET,0
xdat      = thkvl[good_low]
fname     = fprefv[0]+fsuff0v[0]+fsuff1[0]+'_0-180_histogram'
xttl      = thkv_ttl[0]+suffx0[0]+suffx1[0]     ; => fsc,low  and (k . Vsw[start])
  my_histogram_plot,xdat,NBINS=nb,XTTL=xttl[0],TTLE=ttle[0],DRANGE=dra
popen,fname[0],/LAND
  my_histogram_plot,xdat,NBINS=nb,XTTL=xttl[0],TTLE=ttle[0],DRANGE=dra
pclose

WSET,1
xdat      = thkvh[good_low]
fname     = fprefv[0]+fsuff0v[1]+fsuff1[0]+'_0-180_histogram'
xttl      = thkv_ttl[0]+suffx0[1]+suffx1[0]     ; => fsc,low  and (k . Vsw[end  ])
  my_histogram_plot,xdat,NBINS=nb,XTTL=xttl[0],TTLE=ttle[0],DRANGE=dra
popen,fname[0],/LAND
  my_histogram_plot,xdat,NBINS=nb,XTTL=xttl[0],TTLE=ttle[0],DRANGE=dra
pclose

WSET,2
xdat      = thkvl[good_high]
fname     = fprefv[0]+fsuff0v[0]+fsuff1[1]+'_0-180_histogram'
xttl      = thkv_ttl[0]+suffx0[0]+suffx1[1]     ; => fsc,high and (k . Vsw[start])
  my_histogram_plot,xdat,NBINS=nb,XTTL=xttl[0],TTLE=ttle[0],DRANGE=dra
popen,fname[0],/LAND
  my_histogram_plot,xdat,NBINS=nb,XTTL=xttl[0],TTLE=ttle[0],DRANGE=dra
pclose

WSET,3
xdat      = thkvh[good_high]
fname     = fprefv[0]+fsuff0v[1]+fsuff1[1]+'_0-180_histogram'
xttl      = thkv_ttl[0]+suffx0[1]+suffx1[1]     ; => fsc,high and (k . Vsw[end  ])
  my_histogram_plot,xdat,NBINS=nb,XTTL=xttl[0],TTLE=ttle[0],DRANGE=dra
popen,fname[0],/LAND
  my_histogram_plot,xdat,NBINS=nb,XTTL=xttl[0],TTLE=ttle[0],DRANGE=dra
pclose

;-----------------------------------------------------
; => 0 - 90 degrees
;-----------------------------------------------------
dra     = [0d0,9d1]
nb      = 7L
thkb_ls = thkbl[good_low] < (18d1 - thkbl[good_low])
thkb_le = thkbh[good_low] < (18d1 - thkbh[good_low])
thkb_hs = thkbl[good_high] < (18d1 - thkbl[good_high])
thkb_he = thkbh[good_high] < (18d1 - thkbh[good_high])

thkv_ls = thkvl[good_low] < (18d1 - thkvl[good_low])
thkv_le = thkvh[good_low] < (18d1 - thkvh[good_low])
thkv_hs = thkvl[good_high] < (18d1 - thkvl[good_high])
thkv_he = thkvh[good_high] < (18d1 - thkvh[good_high])

; => Theta_kB
ttle      = ttlekb[0]
WSET,0
xdat      = thkb_ls
fname     = fprefb[0]+fsuff0b[0]+fsuff1[0]+'_0-90_histogram'
xttl      = thkb_ttl[0]+suffx0[0]+suffx1[0]     ; => fsc,low  and (k . B[start])
  my_histogram_plot,xdat,NBINS=nb,XTTL=xttl[0],TTLE=ttle[0],DRANGE=dra
popen,fname[0],/LAND
  my_histogram_plot,xdat,NBINS=nb,XTTL=xttl[0],TTLE=ttle[0],DRANGE=dra
pclose

WSET,1
xdat      = thkb_le
fname     = fprefb[0]+fsuff0b[1]+fsuff1[0]+'_0-90_histogram'
xttl      = thkb_ttl[0]+suffx0[1]+suffx1[0]     ; => fsc,low  and (k . B[end  ])
  my_histogram_plot,xdat,NBINS=nb,XTTL=xttl[0],TTLE=ttle[0],DRANGE=dra
popen,fname[0],/LAND
  my_histogram_plot,xdat,NBINS=nb,XTTL=xttl[0],TTLE=ttle[0],DRANGE=dra
pclose

WSET,2
xdat      = thkb_hs
fname     = fprefb[0]+fsuff0b[0]+fsuff1[1]+'_0-90_histogram'
xttl      = thkb_ttl[0]+suffx0[0]+suffx1[1]     ; => fsc,high and (k . B[start])
  my_histogram_plot,xdat,NBINS=nb,XTTL=xttl[0],TTLE=ttle[0],DRANGE=dra
popen,fname[0],/LAND
  my_histogram_plot,xdat,NBINS=nb,XTTL=xttl[0],TTLE=ttle[0],DRANGE=dra
pclose

WSET,3
xdat      = thkb_he
fname     = fprefb[0]+fsuff0b[1]+fsuff1[1]+'_0-90_histogram'
xttl      = thkb_ttl[0]+suffx0[1]+suffx1[1]     ; => fsc,high and (k . B[end  ])
  my_histogram_plot,xdat,NBINS=nb,XTTL=xttl[0],TTLE=ttle[0],DRANGE=dra
popen,fname[0],/LAND
  my_histogram_plot,xdat,NBINS=nb,XTTL=xttl[0],TTLE=ttle[0],DRANGE=dra
pclose


; => Theta_kV
ttle      = ttlekv[0]
WSET,0
xdat      = thkv_ls
fname     = fprefv[0]+fsuff0v[0]+fsuff1[0]+'_0-90_histogram'
xttl      = thkv_ttl[0]+suffx0[0]+suffx1[0]     ; => fsc,low  and (k . Vsw[start])
  my_histogram_plot,xdat,NBINS=nb,XTTL=xttl[0],TTLE=ttle[0],DRANGE=dra
popen,fname[0],/LAND
  my_histogram_plot,xdat,NBINS=nb,XTTL=xttl[0],TTLE=ttle[0],DRANGE=dra
pclose

WSET,1
xdat      = thkv_le
fname     = fprefv[0]+fsuff0v[1]+fsuff1[0]+'_0-90_histogram'
xttl      = thkv_ttl[0]+suffx0[1]+suffx1[0]     ; => fsc,low  and (k . Vsw[end  ])
  my_histogram_plot,xdat,NBINS=nb,XTTL=xttl[0],TTLE=ttle[0],DRANGE=dra
popen,fname[0],/LAND
  my_histogram_plot,xdat,NBINS=nb,XTTL=xttl[0],TTLE=ttle[0],DRANGE=dra
pclose

WSET,2
xdat      = thkv_hs
fname     = fprefv[0]+fsuff0v[0]+fsuff1[1]+'_0-90_histogram'
xttl      = thkv_ttl[0]+suffx0[0]+suffx1[1]     ; => fsc,high and (k . Vsw[start])
  my_histogram_plot,xdat,NBINS=nb,XTTL=xttl[0],TTLE=ttle[0],DRANGE=dra
popen,fname[0],/LAND
  my_histogram_plot,xdat,NBINS=nb,XTTL=xttl[0],TTLE=ttle[0],DRANGE=dra
pclose

WSET,3
xdat      = thkv_he
fname     = fprefv[0]+fsuff0v[1]+fsuff1[1]+'_0-90_histogram'
xttl      = thkv_ttl[0]+suffx0[1]+suffx1[1]     ; => fsc,high and (k . Vsw[end  ])
  my_histogram_plot,xdat,NBINS=nb,XTTL=xttl[0],TTLE=ttle[0],DRANGE=dra
popen,fname[0],/LAND
  my_histogram_plot,xdat,NBINS=nb,XTTL=xttl[0],TTLE=ttle[0],DRANGE=dra
pclose

;-----------------------------------------------------
; => Filtered amplitudes
;-----------------------------------------------------
delb_ttl  = '!7d!3'+'B'
ttledb    = 'Filtered Wave Amplitudes, '+delb_ttl[0]
suffx1    = ' [nT, '+['f!Dsc,low!N','f!Dsc,high!N']+']'
fsuff1    = ['fsc-Low','fsc-High']
fprefdb   = 'ALL_shocks_Wave-Amp_'+fsuff1+'_1-Range_histogram'
dra       = [0d0,1d1]
nb        = 11L

; => 1st data range
ttle      = ttledb[0]
WSET,0
xdat      = filtamp[good_low]
fname     = fprefdb[0]
xttl      = delb_ttl[0]+suffx1[0]     ; => fsc,low  for delta-B (nT)
  my_histogram_plot,xdat,NBINS=nb,XTTL=xttl[0],TTLE=ttle[0],DRANGE=dra
popen,fname[0],/LAND
  my_histogram_plot,xdat,NBINS=nb,XTTL=xttl[0],TTLE=ttle[0],DRANGE=dra
pclose

WSET,1
xdat      = filtamp[good_high]
fname     = fprefdb[1]
xttl      = delb_ttl[0]+suffx1[1]     ; => fsc,high for delta-B (nT)
  my_histogram_plot,xdat,NBINS=nb,XTTL=xttl[0],TTLE=ttle[0],DRANGE=dra
popen,fname[0],/LAND
  my_histogram_plot,xdat,NBINS=nb,XTTL=xttl[0],TTLE=ttle[0],DRANGE=dra
pclose

; => 2nd data range
fprefdb   = 'ALL_shocks_Wave-Amp_'+fsuff1+'_2-Range_histogram'
dra       = [0d0,5d0]

ttle      = ttledb[0]
WSET,0
xdat      = filtamp[good_low]
fname     = fprefdb[0]
xttl      = delb_ttl[0]+suffx1[0]     ; => fsc,low  for delta-B (nT)
  my_histogram_plot,xdat,NBINS=nb,XTTL=xttl[0],TTLE=ttle[0],DRANGE=dra
popen,fname[0],/LAND
  my_histogram_plot,xdat,NBINS=nb,XTTL=xttl[0],TTLE=ttle[0],DRANGE=dra
pclose

WSET,1
xdat      = filtamp[good_high]
fname     = fprefdb[1]
xttl      = delb_ttl[0]+suffx1[1]     ; => fsc,high for delta-B (nT)
  my_histogram_plot,xdat,NBINS=nb,XTTL=xttl[0],TTLE=ttle[0],DRANGE=dra
popen,fname[0],/LAND
  my_histogram_plot,xdat,NBINS=nb,XTTL=xttl[0],TTLE=ttle[0],DRANGE=dra
pclose

; => 3rd data range
fprefdb   = 'ALL_shocks_Wave-Amp_'+fsuff1+'_3-Range_histogram'
dra       = [0d0,2.5d0]
nb        = 8L

ttle      = ttledb[0]
WSET,0
xdat      = filtamp[good_low]
fname     = fprefdb[0]
xttl      = delb_ttl[0]+suffx1[0]     ; => fsc,low  for delta-B (nT)
  my_histogram_plot,xdat,NBINS=nb,XTTL=xttl[0],TTLE=ttle[0],DRANGE=dra
popen,fname[0],/LAND
  my_histogram_plot,xdat,NBINS=nb,XTTL=xttl[0],TTLE=ttle[0],DRANGE=dra
pclose

WSET,1
xdat      = filtamp[good_high]
fname     = fprefdb[1]
xttl      = delb_ttl[0]+suffx1[1]     ; => fsc,high for delta-B (nT)
  my_histogram_plot,xdat,NBINS=nb,XTTL=xttl[0],TTLE=ttle[0],DRANGE=dra
popen,fname[0],/LAND
  my_histogram_plot,xdat,NBINS=nb,XTTL=xttl[0],TTLE=ttle[0],DRANGE=dra
pclose

; => 4th data range
fprefdb   = 'ALL_shocks_Wave-Amp_'+fsuff1+'_4-Range_histogram'
dra       = [0d0,1.5d0]
nb        = 8L

ttle      = ttledb[0]
WSET,0
xdat      = filtamp[good_low]
fname     = fprefdb[0]
xttl      = delb_ttl[0]+suffx1[0]     ; => fsc,low  for delta-B (nT)
  my_histogram_plot,xdat,NBINS=nb,XTTL=xttl[0],TTLE=ttle[0],DRANGE=dra
popen,fname[0],/LAND
  my_histogram_plot,xdat,NBINS=nb,XTTL=xttl[0],TTLE=ttle[0],DRANGE=dra
pclose

WSET,1
xdat      = filtamp[good_high]
fname     = fprefdb[1]
xttl      = delb_ttl[0]+suffx1[1]     ; => fsc,high for delta-B (nT)
  my_histogram_plot,xdat,NBINS=nb,XTTL=xttl[0],TTLE=ttle[0],DRANGE=dra
popen,fname[0],/LAND
  my_histogram_plot,xdat,NBINS=nb,XTTL=xttl[0],TTLE=ttle[0],DRANGE=dra
pclose

;-----------------------------------------------------
; => Stats
;-----------------------------------------------------
flh       = wlh/(2d0*!DPI)
delflow   = (freql - flh) LE 0
delfhigh  = (freqh - flh)
; => Define "Low"  as (freql LE flh) AND (freqh LE 40.)
; => Define "High" as (freql GT flh) AND (freqh GT 40.) AND (delfhigh GT 0.)
test_low  = delflow        AND (freqh LE 40.)
test_high = (freql GT flh) AND (freqh GT 40.) AND (delfhigh GT 0.)
good_low  = WHERE(test_low ,gdlw)
good_high = WHERE(test_high,gdhh)
PRINT,';   ',gdlw,gdhh
;            115         307


temp_00 = WHERE(filtamp[good_low] LE 5.00,g00)
temp_01 = WHERE(filtamp[good_low] LE 2.50,g01)
temp_02 = WHERE(filtamp[good_low] LE 1.50,g02)
temp_03 = WHERE(filtamp[good_low] LE 0.50,g03)
temp_04 = WHERE(filtamp[good_low] LE 0.25,g04)
PRINT,';   ', g00, g01, g02, g03, g04
;            105          90          80          39           9
PRINT,'; ', [g00, g01, g02, g03, g04]*1d0/(gdlw*1d0)
;       0.91304348      0.78260870      0.69565217      0.33913043     0.078260870

temp_00 = WHERE(filtamp[good_high] LE 5.00,g00)
temp_01 = WHERE(filtamp[good_high] LE 2.50,g01)
temp_02 = WHERE(filtamp[good_high] LE 1.50,g02)
temp_03 = WHERE(filtamp[good_high] LE 0.50,g03)
temp_04 = WHERE(filtamp[good_high] LE 0.25,g04)
PRINT,';   ', g00, g01, g02, g03, g04
;            307         307         306         245         152
PRINT,'; ', [g00, g01, g02, g03, g04]*1d0/(gdhh*1d0)
;        1.0000000       1.0000000      0.99674267      0.79804560      0.49511401


PRINT,'; ', MIN(filtamp[good_low],/NAN), MAX(filtamp[good_low],/NAN), $
            MEAN(filtamp[good_low],/NAN), STDDEV(filtamp[good_low],/NAN)
;      0.115000      14.6000      1.77684      2.49823

PRINT,'; ', MIN(filtamp[good_high],/NAN), MAX(filtamp[good_high],/NAN), $
            MEAN(filtamp[good_high],/NAN), STDDEV(filtamp[good_high],/NAN)
;     0.0130000      1.87200     0.314218     0.254216

;------------------------
; => Look at angle stats
;------------------------
thkbl90   = thkbl < (18d1 - thkbl)
thkbh90   = thkbh < (18d1 - thkbh)
thkvl90   = thkvl < (18d1 - thkvl)
thkvh90   = thkvh < (18d1 - thkvh)
thkb_av   = (thkbl90 + thkbh90)/2d0
thkv_av   = (thkvl90 + thkvh90)/2d0

thkb_ll   = thkbl90[good_low]
thkb_lh   = thkbh90[good_low]
thkb_la   = thkb_av[good_low]
thkb_hl   = thkbl90[good_high]
thkb_hh   = thkbh90[good_high]
thkb_ha   = thkb_av[good_high]

thkv_ll   = thkvl90[good_low]
thkv_lh   = thkvh90[good_low]
thkv_la   = thkv_av[good_low]
thkv_hl   = thkvl90[good_high]
thkv_hh   = thkvh90[good_high]
thkv_ha   = thkv_av[good_high]

temp_00 = WHERE(thkb_ll GE 45.,g00,NCOMPLEMENT=b00)
temp_01 = WHERE(thkb_lh GE 45.,g01,NCOMPLEMENT=b01)
temp_0a = WHERE(thkb_la GE 45.,g0a,NCOMPLEMENT=b0a)
temp_02 = WHERE(thkb_ll GE 30.,g02,NCOMPLEMENT=b02)
temp_03 = WHERE(thkb_lh GE 30.,g03,NCOMPLEMENT=b03)
temp_1a = WHERE(thkb_la GE 30.,g1a,NCOMPLEMENT=b1a)
PRINT,';   ', g00, g01, g0a, g02, g03, g1a
PRINT,'; ', [g00, g01, g0a, g02, g03, g1a]*1d0/(gdlw*1d0)
PRINT,'; ', [b00, b01, b0a, b02, b03, b1a]*1d0/(gdlw*1d0)
PRINT,'; ', [g0a, g1a]*1d0/(gdlw*1d0)
;             86          86          86         102         100         100
;       0.74782609      0.74782609      0.74782609      0.88695652      0.86956522      0.86956522
;       0.25217391      0.25217391      0.25217391      0.11304348      0.13043478      0.13043478
;       0.74782609      0.86956522

temp_00 = WHERE(thkv_ll GE 45.,g00,NCOMPLEMENT=b00)
temp_01 = WHERE(thkv_lh GE 45.,g01,NCOMPLEMENT=b01)
temp_0a = WHERE(thkv_la GE 45.,g0a,NCOMPLEMENT=b0a)
temp_02 = WHERE(thkv_ll GE 30.,g02,NCOMPLEMENT=b02)
temp_03 = WHERE(thkv_lh GE 30.,g03,NCOMPLEMENT=b03)
temp_1a = WHERE(thkv_la GE 30.,g1a,NCOMPLEMENT=b1a)
PRINT,';   ', g00, g01, g0a, g02, g03, g1a
PRINT,'; ', [g00, g01, g0a, g02, g03, g1a]*1d0/(gdlw*1d0)
PRINT,'; ', [b00, b01, b0a, b02, b03, b1a]*1d0/(gdlw*1d0)
PRINT,'; ', [g0a, g1a]*1d0/(gdlw*1d0)
;             52          52          52          75          74          75
;       0.45217391      0.45217391      0.45217391      0.65217391      0.64347826      0.65217391
;       0.54782609      0.54782609      0.54782609      0.34782609      0.35652174      0.34782609
;       0.45217391      0.65217391

temp_00 = WHERE(thkb_hl LE 45.,g00,NCOMPLEMENT=b00)
temp_01 = WHERE(thkb_hh LE 45.,g01,NCOMPLEMENT=b01)
temp_0a = WHERE(thkb_ha LE 45.,g0a,NCOMPLEMENT=b0a)
temp_02 = WHERE(thkb_hl LE 30.,g02,NCOMPLEMENT=b02)
temp_03 = WHERE(thkb_hh LE 30.,g03,NCOMPLEMENT=b03)
temp_1a = WHERE(thkb_ha LE 30.,g1a,NCOMPLEMENT=b1a)
PRINT,';   ', g00, g01, g0a, g02, g03, g1a
PRINT,'; ', [g00, g01, g0a, g02, g03, g1a]*1d0/(gdhh*1d0)
PRINT,'; ', [b00, b01, b0a, b02, b03, b1a]*1d0/(gdhh*1d0)
PRINT,'; ', [g0a, g1a]*1d0/(gdhh*1d0)
;            247         251         251         214         221         216
;       0.80456026      0.81758958      0.81758958      0.69706840      0.71986971      0.70358306
;       0.19543974      0.18241042      0.18241042      0.30293160      0.28013029      0.29641694
;       0.81758958      0.70358306

temp_00 = WHERE(thkv_hl GE 45.,g00,NCOMPLEMENT=b00)
temp_01 = WHERE(thkv_hh GE 45.,g01,NCOMPLEMENT=b01)
temp_0a = WHERE(thkv_ha GE 45.,g0a,NCOMPLEMENT=b0a)
temp_02 = WHERE(thkv_hl GE 30.,g02,NCOMPLEMENT=b02)
temp_03 = WHERE(thkv_hh GE 30.,g03,NCOMPLEMENT=b03)
temp_1a = WHERE(thkv_ha GE 30.,g1a,NCOMPLEMENT=b1a)
PRINT,';   ', g00, g01, g0a, g02, g03, g1a
PRINT,'; ', [g00, g01, g0a, g02, g03, g1a]*1d0/(gdhh*1d0)
PRINT,'; ', [b00, b01, b0a, b02, b03, b1a]*1d0/(gdhh*1d0)
PRINT,'; ', [g0a, g1a]*1d0/(gdhh*1d0)
;            262         262         262         285         285         285
;       0.85342020      0.85342020      0.85342020      0.92833876      0.92833876      0.92833876
;       0.14657980      0.14657980      0.14657980     0.071661238     0.071661238     0.071661238
;       0.85342020      0.92833876

temp_00 = WHERE(thkb_ll LE 45.,g00)
temp_01 = WHERE(thkb_lh LE 45.,g01)
temp_0a = WHERE(thkb_la LE 45.,g0a)
temp_02 = WHERE(thkb_ll LE 30.,g02)
temp_03 = WHERE(thkb_lh LE 30.,g03)
temp_1a = WHERE(thkb_la LE 30.,g1a)
PRINT,';   ', g00, g01, g0a, g02, g03, g1a
PRINT,'; ', [g00, g01, g0a, g02, g03, g1a]*1d0/(gdlw*1d0)
PRINT,'; ', [g0a, g1a]*1d0/(gdlw*1d0)
;             29          29          29          13          15          15
;       0.25217391      0.25217391      0.25217391      0.11304348      0.13043478      0.13043478
;       0.25217391      0.13043478

temp_00 = WHERE(thkb_hl LE 45.,g00)
temp_01 = WHERE(thkb_hh LE 45.,g01)
temp_0a = WHERE(thkb_ha LE 45.,g0a)
temp_02 = WHERE(thkb_hl LE 30.,g02)
temp_03 = WHERE(thkb_hh LE 30.,g03)
temp_1a = WHERE(thkb_ha LE 30.,g1a)
PRINT,';   ', g00, g01, g0a, g02, g03, g1a
PRINT,'; ', [g00, g01, g0a, g02, g03, g1a]*1d0/(gdhh*1d0)
PRINT,'; ', [g0a, g1a]*1d0/(gdhh*1d0)
;            247         251         251         214         221         216
;       0.80456026      0.81758958      0.81758958      0.69706840      0.71986971      0.70358306
;       0.81758958      0.70358306

;-----------------------------------------------------------------------------------------
; => Plot relationships [by wave type]
;-----------------------------------------------------------------------------------------
evns_lhw = [00010618L,00010684L,02013066L,02014864L,02015635L,02015691L,$
            02017428L,02018091L]
evns_whi = [00010807L,00010832L,00010868L,00010881L,00010888L,00010895L,$
            00010923L,00010937L,23145603L,23145610L,23153276L,23154909L,$
            23155087L]
evns_mix = [03408599L,00010488L,02011249L,02011723L,02011820L,02013165L,$
            02015299L,02015304L,02015650L,02017555L,23145465L,23145474L,$
            23145484L]
good_lhw = array_where(evns,evns_lhw,/N_UNIQ)
good_whi = array_where(evns,evns_whi,/N_UNIQ)
good_mix = array_where(evns,evns_mix,/N_UNIQ)
HELP, good_lhw, good_whi, good_mix
;  GOOD_LHW        LONG      = Array[54, 2]
;  GOOD_WHI        LONG      = Array[138, 2]
;  GOOD_MIX        LONG      = Array[239, 2]

good_lhw = REFORM(good_lhw[*,0])
good_whi = REFORM(good_whi[*,0])
good_mix = REFORM(good_mix[*,0])
;gel_str  = CREATE_STRUCT()

; => Determine dates
tdates   = STRMID(STRTRIM(scets,2L),0L,10L)
tdatesu  = STRMID(tdates[UNIQ(tdates,SORT(tdates))],0L,10L)
good_0   = WHERE(tdates EQ tdatesu[0],gd_0)
good_1   = WHERE(tdates EQ tdatesu[1],gd_1)
good_2   = WHERE(tdates EQ tdatesu[2] OR tdates EQ tdatesu[3],gd_2)
good_3   = WHERE(tdates EQ tdatesu[4] OR tdates EQ tdatesu[5],gd_3)
PRINT,';   ',gd_0,gd_1,gd_2,gd_3
;             32         119         172         108

good0lhw = array_where(good_0,good_lhw,/N_UNIQ)
good0whi = array_where(good_0,good_whi,/N_UNIQ)
good0mix = array_where(good_0,good_mix,/N_UNIQ)
IF (good0lhw[0] GE 0) THEN good0lhw = good0lhw[*,0]
IF (good0whi[0] GE 0) THEN good0whi = good0whi[*,0]
IF (good0mix[0] GE 0) THEN good0mix = good0mix[*,0]
good1lhw = array_where(good_1,good_lhw,/N_UNIQ)
good1whi = array_where(good_1,good_whi,/N_UNIQ)
good1mix = array_where(good_1,good_mix,/N_UNIQ)
IF (good1lhw[0] GE 0) THEN good1lhw = good1lhw[*,0]
IF (good1whi[0] GE 0) THEN good1whi = good1whi[*,0]
IF (good1mix[0] GE 0) THEN good1mix = good1mix[*,0]
good2lhw = array_where(good_2,good_lhw,/N_UNIQ)
good2whi = array_where(good_2,good_whi,/N_UNIQ)
good2mix = array_where(good_2,good_mix,/N_UNIQ)
IF (good2lhw[0] GE 0) THEN good2lhw = good2lhw[*,0]
IF (good2whi[0] GE 0) THEN good2whi = good2whi[*,0]
IF (good2mix[0] GE 0) THEN good2mix = good2mix[*,0]
good3lhw = array_where(good_3,good_lhw,/N_UNIQ)
good3whi = array_where(good_3,good_whi,/N_UNIQ)
good3mix = array_where(good_3,good_mix,/N_UNIQ)
IF (good3lhw[0] GE 0) THEN good3lhw = good3lhw[*,0]
IF (good3whi[0] GE 0) THEN good3whi = good3whi[*,0]
IF (good3mix[0] GE 0) THEN good3mix = good3mix[*,0]


yra      = [0.01,15.0]
wtypes   = ['LHWs','WWs','MIXED']
yttl     = wtypes+' Wave Amplitudes'+'!C'+'[Filtered Peak, nT]'
yposi    = [8.,5.,2.,1.]
fpref    = wtypes+'-Wave-Amp_vs_'
fsufx    = '_Avg-per-unique-Xvalue_plusminus-STDDEV'
; => Define Filtered amplitudes (nT) [LHWs]
IF (good0lhw[0] GE 0) THEN ydat0lhw = ftpkamp0[good0lhw] ELSE ydat0lhw = [d]
IF (good1lhw[0] GE 0) THEN ydat1lhw = ftpkamp1[good1lhw] ELSE ydat1lhw = [d]
IF (good2lhw[0] GE 0) THEN ydat2lhw = ftpkamp2[good2lhw] ELSE ydat2lhw = [d]
IF (good3lhw[0] GE 0) THEN ydat3lhw = ftpkamp3[good3lhw] ELSE ydat3lhw = [d]
; => Define Filtered amplitudes (nT) [WWs]
IF (good0whi[0] GE 0) THEN ydat0whi = ftpkamp0[good0whi] ELSE ydat0whi = [d]
IF (good1whi[0] GE 0) THEN ydat1whi = ftpkamp1[good1whi] ELSE ydat1whi = [d]
IF (good2whi[0] GE 0) THEN ydat2whi = ftpkamp2[good2whi] ELSE ydat2whi = [d]
IF (good3whi[0] GE 0) THEN ydat3whi = ftpkamp3[good3whi] ELSE ydat3whi = [d]
; => Define Filtered amplitudes (nT) [MIXED]
IF (good0mix[0] GE 0) THEN ydat0mix = ftpkamp0[good0mix] ELSE ydat0mix = [d]
IF (good1mix[0] GE 0) THEN ydat1mix = ftpkamp1[good1mix] ELSE ydat1mix = [d]
IF (good2mix[0] GE 0) THEN ydat2mix = ftpkamp2[good2mix] ELSE ydat2mix = [d]
IF (good3mix[0] GE 0) THEN ydat3mix = ftpkamp3[good3mix] ELSE ydat3mix = [d]
;------------------------------------------------
; => Vd/C_f Plots
;------------------------------------------------
xra      = [1d-1,1d1]
xttl     = 'V!Ddei!N'+'/C!Df!N [unitless]'
xposi    = 0.3
xlog     = 1
; => Define |(Vsw - Ve)|/C_f [LHWs]
fnamelhw = fpref[0]+'V_drift-C_f'+fsufx[0]
IF (good0lhw[0] GE 0) THEN xdat0lhw = vdrmg0[good0lhw]/(vf_080[good0lhw]*1d-3) ELSE xdat0lhw = [d]
IF (good1lhw[0] GE 0) THEN xdat1lhw = vdrmg1[good1lhw]/(vf_081[good1lhw]*1d-3) ELSE xdat1lhw = [d]
IF (good2lhw[0] GE 0) THEN xdat2lhw = vdrmg2[good2lhw]/(vf_082[good2lhw]*1d-3) ELSE xdat2lhw = [d]
IF (good3lhw[0] GE 0) THEN xdat3lhw = vdrmg3[good3lhw]/(vf_083[good3lhw]*1d-3) ELSE xdat3lhw = [d]
; => Define |(Vsw - Ve)|/C_f [WWs]
fnamewhi = fpref[1]+'V_drift-C_f'+fsufx[0]
IF (good0whi[0] GE 0) THEN xdat0whi = vdrmg0[good0whi]/(vf_080[good0whi]*1d-3) ELSE xdat0whi = [d]
IF (good1whi[0] GE 0) THEN xdat1whi = vdrmg1[good1whi]/(vf_081[good1whi]*1d-3) ELSE xdat1whi = [d]
IF (good2whi[0] GE 0) THEN xdat2whi = vdrmg2[good2whi]/(vf_082[good2whi]*1d-3) ELSE xdat2whi = [d]
IF (good3whi[0] GE 0) THEN xdat3whi = vdrmg3[good3whi]/(vf_083[good3whi]*1d-3) ELSE xdat3whi = [d]
; => Define |(Vsw - Ve)|/C_f [MIXED]
fnamemix = fpref[2]+'V_drift-C_f'+fsufx[0]
IF (good0mix[0] GE 0) THEN xdat0mix = vdrmg0[good0mix]/(vf_080[good0mix]*1d-3) ELSE xdat0mix = [d]
IF (good1mix[0] GE 0) THEN xdat1mix = vdrmg1[good1mix]/(vf_081[good1mix]*1d-3) ELSE xdat1mix = [d]
IF (good2mix[0] GE 0) THEN xdat2mix = vdrmg2[good2mix]/(vf_082[good2mix]*1d-3) ELSE xdat2mix = [d]
IF (good3mix[0] GE 0) THEN xdat3mix = vdrmg3[good3mix]/(vf_083[good3mix]*1d-3) ELSE xdat3mix = [d]
;------------------------------------------------
; => Vd/V_A Plots
;------------------------------------------------
xra      = [1d-1,1d1]
xttl     = 'V!Ddei!N'+'/V!DA!N [unitless]'
xposi    = 0.3
xlog     = 1
; => Define |(Vsw - Ve)|/V_A [LHWs]
fnamelhw = fpref[0]+'V_drift-V_A'+fsufx[0]
IF (good0lhw[0] GE 0) THEN xdat0lhw = vdrmg0[good0lhw]/(valf0[good0lhw]*1d-3) ELSE xdat0lhw = [d]
IF (good1lhw[0] GE 0) THEN xdat1lhw = vdrmg1[good1lhw]/(valf1[good1lhw]*1d-3) ELSE xdat1lhw = [d]
IF (good2lhw[0] GE 0) THEN xdat2lhw = vdrmg2[good2lhw]/(valf2[good2lhw]*1d-3) ELSE xdat2lhw = [d]
IF (good3lhw[0] GE 0) THEN xdat3lhw = vdrmg3[good3lhw]/(valf3[good3lhw]*1d-3) ELSE xdat3lhw = [d]
; => Define |(Vsw - Ve)|/V_A [WWs]
fnamewhi = fpref[1]+'V_drift-V_A'+fsufx[0]
IF (good0whi[0] GE 0) THEN xdat0whi = vdrmg0[good0whi]/(valf0[good0whi]*1d-3) ELSE xdat0whi = [d]
IF (good1whi[0] GE 0) THEN xdat1whi = vdrmg1[good1whi]/(valf1[good1whi]*1d-3) ELSE xdat1whi = [d]
IF (good2whi[0] GE 0) THEN xdat2whi = vdrmg2[good2whi]/(valf2[good2whi]*1d-3) ELSE xdat2whi = [d]
IF (good3whi[0] GE 0) THEN xdat3whi = vdrmg3[good3whi]/(valf3[good3whi]*1d-3) ELSE xdat3whi = [d]
; => Define |(Vsw - Ve)|/V_A [MIXED]
fnamemix = fpref[2]+'V_drift-V_A'+fsufx[0]
IF (good0mix[0] GE 0) THEN xdat0mix = vdrmg0[good0mix]/(valf0[good0mix]*1d-3) ELSE xdat0mix = [d]
IF (good1mix[0] GE 0) THEN xdat1mix = vdrmg1[good1mix]/(valf1[good1mix]*1d-3) ELSE xdat1mix = [d]
IF (good2mix[0] GE 0) THEN xdat2mix = vdrmg2[good2mix]/(valf2[good2mix]*1d-3) ELSE xdat2mix = [d]
IF (good3mix[0] GE 0) THEN xdat3mix = vdrmg3[good3mix]/(valf3[good3mix]*1d-3) ELSE xdat3mix = [d]
;------------------------------------------------
; => Vd/VTi Plots
;------------------------------------------------
xra      = [1d-1,1d1]
xttl     = 'V!Ddei!N'+'/V!DTi!N [unitless]'
xposi    = 0.3
xlog     = 1
; => Define |(Vsw - Ve)|/V_Ti [LHWs]
fnamelhw = fpref[0]+'V_drift-V_Ti'+fsufx[0]
IF (good0lhw[0] GE 0) THEN xdat0lhw = vdrmg0[good0lhw]/(vti0[good0lhw]*1d-3) ELSE xdat0lhw = [d]
IF (good1lhw[0] GE 0) THEN xdat1lhw = vdrmg1[good1lhw]/(vti1[good1lhw]*1d-3) ELSE xdat1lhw = [d]
IF (good2lhw[0] GE 0) THEN xdat2lhw = vdrmg2[good2lhw]/(vti2[good2lhw]*1d-3) ELSE xdat2lhw = [d]
IF (good3lhw[0] GE 0) THEN xdat3lhw = vdrmg3[good3lhw]/(vti3[good3lhw]*1d-3) ELSE xdat3lhw = [d]
; => Define |(Vsw - Ve)|/V_Ti [WWs]
fnamewhi = fpref[1]+'V_drift-V_Ti'+fsufx[0]
IF (good0whi[0] GE 0) THEN xdat0whi = vdrmg0[good0whi]/(vti0[good0whi]*1d-3) ELSE xdat0whi = [d]
IF (good1whi[0] GE 0) THEN xdat1whi = vdrmg1[good1whi]/(vti1[good1whi]*1d-3) ELSE xdat1whi = [d]
IF (good2whi[0] GE 0) THEN xdat2whi = vdrmg2[good2whi]/(vti2[good2whi]*1d-3) ELSE xdat2whi = [d]
IF (good3whi[0] GE 0) THEN xdat3whi = vdrmg3[good3whi]/(vti3[good3whi]*1d-3) ELSE xdat3whi = [d]
; => Define |(Vsw - Ve)|/V_Ti [MIXED]
fnamemix = fpref[2]+'V_drift-V_Ti'+fsufx[0]
IF (good0mix[0] GE 0) THEN xdat0mix = vdrmg0[good0mix]/(vti0[good0mix]*1d-3) ELSE xdat0mix = [d]
IF (good1mix[0] GE 0) THEN xdat1mix = vdrmg1[good1mix]/(vti1[good1mix]*1d-3) ELSE xdat1mix = [d]
IF (good2mix[0] GE 0) THEN xdat2mix = vdrmg2[good2mix]/(vti2[good2mix]*1d-3) ELSE xdat2mix = [d]
IF (good3mix[0] GE 0) THEN xdat3mix = vdrmg3[good3mix]/(vti3[good3mix]*1d-3) ELSE xdat3mix = [d]
;------------------------------------------------
; => Vd/Cs Plots
;------------------------------------------------
xra      = [1d-1,1d1]
xttl     = 'V!Ddei!N'+'/C!Ds!N [unitless]'
xposi    = 0.3
xlog     = 1
; => Define |(Vsw - Ve)|/C_s [LHWs]
fnamelhw = fpref[0]+'V_drift-C_s'+fsufx[0]
IF (good0lhw[0] GE 0) THEN xdat0lhw = vdrmg0[good0lhw]/(cs_ia0[good0lhw]*1d-3) ELSE xdat0lhw = [d]
IF (good1lhw[0] GE 0) THEN xdat1lhw = vdrmg1[good1lhw]/(cs_ia1[good1lhw]*1d-3) ELSE xdat1lhw = [d]
IF (good2lhw[0] GE 0) THEN xdat2lhw = vdrmg2[good2lhw]/(cs_ia2[good2lhw]*1d-3) ELSE xdat2lhw = [d]
IF (good3lhw[0] GE 0) THEN xdat3lhw = vdrmg3[good3lhw]/(cs_ia3[good3lhw]*1d-3) ELSE xdat3lhw = [d]
; => Define |(Vsw - Ve)|/C_s [WWs]
fnamewhi = fpref[1]+'V_drift-C_s'+fsufx[0]
IF (good0whi[0] GE 0) THEN xdat0whi = vdrmg0[good0whi]/(cs_ia0[good0whi]*1d-3) ELSE xdat0whi = [d]
IF (good1whi[0] GE 0) THEN xdat1whi = vdrmg1[good1whi]/(cs_ia1[good1whi]*1d-3) ELSE xdat1whi = [d]
IF (good2whi[0] GE 0) THEN xdat2whi = vdrmg2[good2whi]/(cs_ia2[good2whi]*1d-3) ELSE xdat2whi = [d]
IF (good3whi[0] GE 0) THEN xdat3whi = vdrmg3[good3whi]/(cs_ia3[good3whi]*1d-3) ELSE xdat3whi = [d]
; => Define |(Vsw - Ve)|/C_s [MIXED]
fnamemix = fpref[2]+'V_drift-C_s'+fsufx[0]
IF (good0mix[0] GE 0) THEN xdat0mix = vdrmg0[good0mix]/(cs_ia0[good0mix]*1d-3) ELSE xdat0mix = [d]
IF (good1mix[0] GE 0) THEN xdat1mix = vdrmg1[good1mix]/(cs_ia1[good1mix]*1d-3) ELSE xdat1mix = [d]
IF (good2mix[0] GE 0) THEN xdat2mix = vdrmg2[good2mix]/(cs_ia2[good2mix]*1d-3) ELSE xdat2mix = [d]
IF (good3mix[0] GE 0) THEN xdat3mix = vdrmg3[good3mix]/(cs_ia3[good3mix]*1d-3) ELSE xdat3mix = [d]
;------------------------------------------------
; => j_de Plots
;------------------------------------------------
xra      = [1d2,2.5d3]
xttl     = 'j!Dde!N [nA m!U-2!N'+']'
xposi    = 200.
xlog     = 1
fac0     = qq*1d3*1d6*1d9

; => Define current density [nA m^(-2)] [LHWs]
fnamelhw = fpref[0]+'jdrift'+fsufx[0]
IF (good0lhw[0] GE 0) THEN xdat0lhw = fac0[0]*vdrmg0[good0lhw]*dens0[good0lhw] ELSE xdat0lhw = [d]
IF (good1lhw[0] GE 0) THEN xdat1lhw = fac0[0]*vdrmg1[good1lhw]*dens1[good1lhw] ELSE xdat1lhw = [d]
IF (good2lhw[0] GE 0) THEN xdat2lhw = fac0[0]*vdrmg2[good2lhw]*dens2[good2lhw] ELSE xdat2lhw = [d]
IF (good3lhw[0] GE 0) THEN xdat3lhw = fac0[0]*vdrmg3[good3lhw]*dens3[good3lhw] ELSE xdat3lhw = [d]
; => Define current density [nA m^(-2)] [WWs]
fnamewhi = fpref[1]+'jdrift'+fsufx[0]
IF (good0whi[0] GE 0) THEN xdat0whi = fac0[0]*vdrmg0[good0whi]*dens0[good0whi] ELSE xdat0whi = [d]
IF (good1whi[0] GE 0) THEN xdat1whi = fac0[0]*vdrmg1[good1whi]*dens1[good1whi] ELSE xdat1whi = [d]
IF (good2whi[0] GE 0) THEN xdat2whi = fac0[0]*vdrmg2[good2whi]*dens2[good2whi] ELSE xdat2whi = [d]
IF (good3whi[0] GE 0) THEN xdat3whi = fac0[0]*vdrmg3[good3whi]*dens3[good3whi] ELSE xdat3whi = [d]
; => Define current density [nA m^(-2)] [MIXED]
fnamemix = fpref[2]+'jdrift'+fsufx[0]
IF (good0mix[0] GE 0) THEN xdat0mix = fac0[0]*vdrmg0[good0mix]*dens0[good0mix] ELSE xdat0mix = [d]
IF (good1mix[0] GE 0) THEN xdat1mix = fac0[0]*vdrmg1[good1mix]*dens1[good1mix] ELSE xdat1mix = [d]
IF (good2mix[0] GE 0) THEN xdat2mix = fac0[0]*vdrmg2[good2mix]*dens2[good2mix] ELSE xdat2mix = [d]
IF (good3mix[0] GE 0) THEN xdat3mix = fac0[0]*vdrmg3[good3mix]*dens3[good3mix] ELSE xdat3mix = [d]
;------------------------------------------------
; => Qe Plots
;------------------------------------------------
xra      = [1d1,1d3]
xttl     = 'Q!De!N [keV km s!U-1!N cm!U-3!N'+']'
xposi    = 20.
xlog     = 1
; => Define heat flux magnitude [keV km/s cm^(-3)] [LHWs]
fnamelhw = fpref[0]+'Qe'+fsufx[0]
IF (good0lhw[0] GE 0) THEN xdat0lhw = 1d-3*qmag0[good0lhw] ELSE xdat0lhw = [d]
IF (good1lhw[0] GE 0) THEN xdat1lhw = 1d-3*qmag1[good1lhw] ELSE xdat1lhw = [d]
IF (good2lhw[0] GE 0) THEN xdat2lhw = 1d-3*qmag2[good2lhw] ELSE xdat2lhw = [d]
IF (good3lhw[0] GE 0) THEN xdat3lhw = 1d-3*qmag3[good3lhw] ELSE xdat3lhw = [d]
; => Define heat flux magnitude [keV km/s cm^(-3)] [WWs]
fnamewhi = fpref[1]+'Qe'+fsufx[0]
IF (good0whi[0] GE 0) THEN xdat0whi = 1d-3*qmag0[good0whi] ELSE xdat0whi = [d]
IF (good1whi[0] GE 0) THEN xdat1whi = 1d-3*qmag1[good1whi] ELSE xdat1whi = [d]
IF (good2whi[0] GE 0) THEN xdat2whi = 1d-3*qmag2[good2whi] ELSE xdat2whi = [d]
IF (good3whi[0] GE 0) THEN xdat3whi = 1d-3*qmag3[good3whi] ELSE xdat3whi = [d]
; => Define heat flux magnitude [keV km/s cm^(-3)] [MIXED]
fnamemix = fpref[2]+'Qe'+fsufx[0]
IF (good0mix[0] GE 0) THEN xdat0mix = 1d-3*qmag0[good0mix] ELSE xdat0mix = [d]
IF (good1mix[0] GE 0) THEN xdat1mix = 1d-3*qmag1[good1mix] ELSE xdat1mix = [d]
IF (good2mix[0] GE 0) THEN xdat2mix = 1d-3*qmag2[good2mix] ELSE xdat2mix = [d]
IF (good3mix[0] GE 0) THEN xdat3mix = 1d-3*qmag3[good3mix] ELSE xdat3mix = [d]
;------------------------------------------------
; => betaec_par Plots
;------------------------------------------------
xra      = [1d-1,1.2d0]
xttl     = '!7b!3'+'!Dce,par!N [unitless]'
xposi    = 0.3
xlog     = 1
; => Define core para. electron beta [LHWs]
fnamelhw = fpref[0]+'Beta-ce-para'+fsufx[0]
IF (good0lhw[0] GE 0) THEN xdat0lhw = betapa0[good0lhw] ELSE xdat0lhw = [d]
IF (good1lhw[0] GE 0) THEN xdat1lhw = betapa1[good1lhw] ELSE xdat1lhw = [d]
IF (good2lhw[0] GE 0) THEN xdat2lhw = betapa2[good2lhw] ELSE xdat2lhw = [d]
IF (good3lhw[0] GE 0) THEN xdat3lhw = betapa3[good3lhw] ELSE xdat3lhw = [d]
; => Define core para. electron beta [WWs]
fnamewhi = fpref[1]+'Beta-ce-para'+fsufx[0]
IF (good0whi[0] GE 0) THEN xdat0whi = betapa0[good0whi] ELSE xdat0whi = [d]
IF (good1whi[0] GE 0) THEN xdat1whi = betapa1[good1whi] ELSE xdat1whi = [d]
IF (good2whi[0] GE 0) THEN xdat2whi = betapa2[good2whi] ELSE xdat2whi = [d]
IF (good3whi[0] GE 0) THEN xdat3whi = betapa3[good3whi] ELSE xdat3whi = [d]
; => Define core para. electron beta [MIXED]
fnamemix = fpref[2]+'Beta-ce-para'+fsufx[0]
IF (good0mix[0] GE 0) THEN xdat0mix = betapa0[good0mix] ELSE xdat0mix = [d]
IF (good1mix[0] GE 0) THEN xdat1mix = betapa1[good1mix] ELSE xdat1mix = [d]
IF (good2mix[0] GE 0) THEN xdat2mix = betapa2[good2mix] ELSE xdat2mix = [d]
IF (good3mix[0] GE 0) THEN xdat3mix = betapa3[good3mix] ELSE xdat3mix = [d]
;------------------------------------------------
; => w_pe/w_ce Plots
;------------------------------------------------
xra      = [2d1,1d2]
xttl     = '!7x!3'+'!Dpe!N'+'/!7X!3'+'!Dce!N [unitless]'
xposi    = 30.0
xlog     = 0
; => Define wpe/wce [LHWs]
fnamelhw = fpref[0]+'wpe_wce'+fsufx[0]
IF (good0lhw[0] GE 0) THEN xdat0lhw = wpe0[good0lhw]/wce0[good0lhw] ELSE xdat0lhw = [d]
IF (good1lhw[0] GE 0) THEN xdat1lhw = wpe1[good1lhw]/wce1[good1lhw] ELSE xdat1lhw = [d]
IF (good2lhw[0] GE 0) THEN xdat2lhw = wpe2[good2lhw]/wce2[good2lhw] ELSE xdat2lhw = [d]
IF (good3lhw[0] GE 0) THEN xdat3lhw = wpe3[good3lhw]/wce3[good3lhw] ELSE xdat3lhw = [d]
; => Define wpe/wce [WWs]
fnamewhi = fpref[1]+'wpe_wce'+fsufx[0]
IF (good0whi[0] GE 0) THEN xdat0whi = wpe0[good0whi]/wce0[good0whi] ELSE xdat0whi = [d]
IF (good1whi[0] GE 0) THEN xdat1whi = wpe1[good1whi]/wce1[good1whi] ELSE xdat1whi = [d]
IF (good2whi[0] GE 0) THEN xdat2whi = wpe2[good2whi]/wce2[good2whi] ELSE xdat2whi = [d]
IF (good3whi[0] GE 0) THEN xdat3whi = wpe3[good3whi]/wce3[good3whi] ELSE xdat3whi = [d]
; => Define wpe/wce [MIXED]
fnamemix = fpref[2]+'wpe_wce'+fsufx[0]
IF (good0mix[0] GE 0) THEN xdat0mix = wpe0[good0mix]/wce0[good0mix] ELSE xdat0mix = [d]
IF (good1mix[0] GE 0) THEN xdat1mix = wpe1[good1mix]/wce1[good1mix] ELSE xdat1mix = [d]
IF (good2mix[0] GE 0) THEN xdat2mix = wpe2[good2mix]/wce2[good2mix] ELSE xdat2mix = [d]
IF (good3mix[0] GE 0) THEN xdat3mix = wpe3[good3mix]/wce3[good3mix] ELSE xdat3mix = [d]
;------------------------------------------------
; => Te/Ti Plots
;------------------------------------------------
xra      = [0d0,2.5]
xttl     = 'T!De!N'+'/T!Di!N [unitless]'
xposi    = 0.3
xlog     = 0
; => Define Te/Ti [LHWs]
fnamelhw = fpref[0]+'Te_Ti'+fsufx[0]
IF (good0lhw[0] GE 0) THEN xdat0lhw = teavg0[good0lhw]/tiavg0[good0lhw] ELSE xdat0lhw = [d]
IF (good1lhw[0] GE 0) THEN xdat1lhw = teavg1[good1lhw]/tiavg1[good1lhw] ELSE xdat1lhw = [d]
IF (good2lhw[0] GE 0) THEN xdat2lhw = teavg2[good2lhw]/tiavg2[good2lhw] ELSE xdat2lhw = [d]
IF (good3lhw[0] GE 0) THEN xdat3lhw = teavg3[good3lhw]/tiavg3[good3lhw] ELSE xdat3lhw = [d]
; => Define Te/Ti [WWs]
fnamewhi = fpref[1]+'Te_Ti'+fsufx[0]
IF (good0whi[0] GE 0) THEN xdat0whi = teavg0[good0whi]/tiavg0[good0whi] ELSE xdat0whi = [d]
IF (good1whi[0] GE 0) THEN xdat1whi = teavg1[good1whi]/tiavg1[good1whi] ELSE xdat1whi = [d]
IF (good2whi[0] GE 0) THEN xdat2whi = teavg2[good2whi]/tiavg2[good2whi] ELSE xdat2whi = [d]
IF (good3whi[0] GE 0) THEN xdat3whi = teavg3[good3whi]/tiavg3[good3whi] ELSE xdat3whi = [d]
; => Define Te/Ti [MIXED]
fnamemix = fpref[2]+'Te_Ti'+fsufx[0]
IF (good0mix[0] GE 0) THEN xdat0mix = teavg0[good0mix]/tiavg0[good0mix] ELSE xdat0mix = [d]
IF (good1mix[0] GE 0) THEN xdat1mix = teavg1[good1mix]/tiavg1[good1mix] ELSE xdat1mix = [d]
IF (good2mix[0] GE 0) THEN xdat2mix = teavg2[good2mix]/tiavg2[good2mix] ELSE xdat2mix = [d]
IF (good3mix[0] GE 0) THEN xdat3mix = teavg3[good3mix]/tiavg3[good3mix] ELSE xdat3mix = [d]
;------------------------------------------------
; => T_ec,perp/T_ec,para Plots
;------------------------------------------------
xra      = [5d-1,2.0]
xttl     = 'T!Dec,perp!N'+'/T!Dec,para!N [unitless]'
xposi    = 1.5
xlog     = 0
; => Define T_ec,perp/T_ec,para [LHWs]
fnamelhw = fpref[0]+'Tanis_ec'+fsufx[0]
IF (good0lhw[0] GE 0) THEN xdat0lhw = tperc0[good0lhw]/tparc0[good0lhw] ELSE xdat0lhw = [d]
IF (good1lhw[0] GE 0) THEN xdat1lhw = tperc1[good1lhw]/tparc1[good1lhw] ELSE xdat1lhw = [d]
IF (good2lhw[0] GE 0) THEN xdat2lhw = tperc2[good2lhw]/tparc2[good2lhw] ELSE xdat2lhw = [d]
IF (good3lhw[0] GE 0) THEN xdat3lhw = tperc3[good3lhw]/tparc3[good3lhw] ELSE xdat3lhw = [d]
; => Define T_ec,perp/T_ec,para [WWs]
fnamewhi = fpref[1]+'Tanis_ec'+fsufx[0]
IF (good0whi[0] GE 0) THEN xdat0whi = tperc0[good0whi]/tparc0[good0whi] ELSE xdat0whi = [d]
IF (good1whi[0] GE 0) THEN xdat1whi = tperc1[good1whi]/tparc1[good1whi] ELSE xdat1whi = [d]
IF (good2whi[0] GE 0) THEN xdat2whi = tperc2[good2whi]/tparc2[good2whi] ELSE xdat2whi = [d]
IF (good3whi[0] GE 0) THEN xdat3whi = tperc3[good3whi]/tparc3[good3whi] ELSE xdat3whi = [d]
; => Define T_ec,perp/T_ec,para [MIXED]
fnamemix = fpref[2]+'Tanis_ec'+fsufx[0]
IF (good0mix[0] GE 0) THEN xdat0mix = tperc0[good0mix]/tparc0[good0mix] ELSE xdat0mix = [d]
IF (good1mix[0] GE 0) THEN xdat1mix = tperc1[good1mix]/tparc1[good1mix] ELSE xdat1mix = [d]
IF (good2mix[0] GE 0) THEN xdat2mix = tperc2[good2mix]/tparc2[good2mix] ELSE xdat2mix = [d]
IF (good3mix[0] GE 0) THEN xdat3mix = tperc3[good3mix]/tparc3[good3mix] ELSE xdat3mix = [d]
;------------------------------------------------
; => T_eh,perp/T_eh,para Plots
;------------------------------------------------
xra      = [5d-1,2.0]
xttl     = 'T!Deh,perp!N'+'/T!Deh,para!N [unitless]'
xposi    = 1.5
xlog     = 0
; => Define T_eh,perp/T_eh,para [LHWs]
fnamelhw = fpref[0]+'Tanis_eh'+fsufx[0]
IF (good0lhw[0] GE 0) THEN xdat0lhw = tperh0[good0lhw]/tparh0[good0lhw] ELSE xdat0lhw = [d]
IF (good1lhw[0] GE 0) THEN xdat1lhw = tperh1[good1lhw]/tparh1[good1lhw] ELSE xdat1lhw = [d]
IF (good2lhw[0] GE 0) THEN xdat2lhw = tperh2[good2lhw]/tparh2[good2lhw] ELSE xdat2lhw = [d]
IF (good3lhw[0] GE 0) THEN xdat3lhw = tperh3[good3lhw]/tparh3[good3lhw] ELSE xdat3lhw = [d]
; => Define T_eh,perp/T_eh,para [WWs]
fnamewhi = fpref[1]+'Tanis_eh'+fsufx[0]
IF (good0whi[0] GE 0) THEN xdat0whi = tperh0[good0whi]/tparh0[good0whi] ELSE xdat0whi = [d]
IF (good1whi[0] GE 0) THEN xdat1whi = tperh1[good1whi]/tparh1[good1whi] ELSE xdat1whi = [d]
IF (good2whi[0] GE 0) THEN xdat2whi = tperh2[good2whi]/tparh2[good2whi] ELSE xdat2whi = [d]
IF (good3whi[0] GE 0) THEN xdat3whi = tperh3[good3whi]/tparh3[good3whi] ELSE xdat3whi = [d]
; => Define T_eh,perp/T_eh,para [MIXED]
fnamemix = fpref[2]+'Tanis_eh'+fsufx[0]
IF (good0mix[0] GE 0) THEN xdat0mix = tperh0[good0mix]/tparh0[good0mix] ELSE xdat0mix = [d]
IF (good1mix[0] GE 0) THEN xdat1mix = tperh1[good1mix]/tparh1[good1mix] ELSE xdat1mix = [d]
IF (good2mix[0] GE 0) THEN xdat2mix = tperh2[good2mix]/tparh2[good2mix] ELSE xdat2mix = [d]
IF (good3mix[0] GE 0) THEN xdat3mix = tperh3[good3mix]/tparh3[good3mix] ELSE xdat3mix = [d]
;------------------------------------------------
; => Teh/Tec Plots
;------------------------------------------------
xra      = [2d0,1d1]
xttl     = 'T!Deh!N'+'/T!Dec!N [unitless]'
xposi    = 3.0
xlog     = 1
; => Define Teh/Tec [LHWs]
fnamelhw = fpref[0]+'Teh_Tec'+fsufx[0]
IF (good0lhw[0] GE 0) THEN xdat0lhw = tehavg0[good0lhw]/tecavg0[good0lhw] ELSE xdat0lhw = [d]
IF (good1lhw[0] GE 0) THEN xdat1lhw = tehavg1[good1lhw]/tecavg1[good1lhw] ELSE xdat1lhw = [d]
IF (good2lhw[0] GE 0) THEN xdat2lhw = tehavg2[good2lhw]/tecavg2[good2lhw] ELSE xdat2lhw = [d]
IF (good3lhw[0] GE 0) THEN xdat3lhw = tehavg3[good3lhw]/tecavg3[good3lhw] ELSE xdat3lhw = [d]
; => Define Teh/Tec [WWs]
fnamewhi = fpref[1]+'Teh_Tec'+fsufx[0]
IF (good0whi[0] GE 0) THEN xdat0whi = tehavg0[good0whi]/tecavg0[good0whi] ELSE xdat0whi = [d]
IF (good1whi[0] GE 0) THEN xdat1whi = tehavg1[good1whi]/tecavg1[good1whi] ELSE xdat1whi = [d]
IF (good2whi[0] GE 0) THEN xdat2whi = tehavg2[good2whi]/tecavg2[good2whi] ELSE xdat2whi = [d]
IF (good3whi[0] GE 0) THEN xdat3whi = tehavg3[good3whi]/tecavg3[good3whi] ELSE xdat3whi = [d]
; => Define Teh/Tec [MIXED]
fnamemix = fpref[2]+'Teh_Tec'+fsufx[0]
IF (good0mix[0] GE 0) THEN xdat0mix = tehavg0[good0mix]/tecavg0[good0mix] ELSE xdat0mix = [d]
IF (good1mix[0] GE 0) THEN xdat1mix = tehavg1[good1mix]/tecavg1[good1mix] ELSE xdat1mix = [d]
IF (good2mix[0] GE 0) THEN xdat2mix = tehavg2[good2mix]/tecavg2[good2mix] ELSE xdat2mix = [d]
IF (good3mix[0] GE 0) THEN xdat3mix = tehavg3[good3mix]/tecavg3[good3mix] ELSE xdat3mix = [d]
;------------------------------------------------
; => T_eh,par/T_ec,par Plots
;------------------------------------------------
xra      = [2d0,1d1]
xttl     = 'T!Deh,par!N'+'/T!Dec,par!N [unitless]'
xposi    = 3.0
xlog     = 1
; => Define T_eh,para/T_ec,para [LHWs]
fnamelhw = fpref[0]+'Teh-para_Tec-para'+fsufx[0]
IF (good0lhw[0] GE 0) THEN xdat0lhw = tparh0[good0lhw]/tparc0[good0lhw] ELSE xdat0lhw = [d]
IF (good1lhw[0] GE 0) THEN xdat1lhw = tparh1[good1lhw]/tparc1[good1lhw] ELSE xdat1lhw = [d]
IF (good2lhw[0] GE 0) THEN xdat2lhw = tparh2[good2lhw]/tparc2[good2lhw] ELSE xdat2lhw = [d]
IF (good3lhw[0] GE 0) THEN xdat3lhw = tparh3[good3lhw]/tparc3[good3lhw] ELSE xdat3lhw = [d]
; => Define T_eh,para/T_ec,para [WWs]
fnamewhi = fpref[1]+'Teh-para_Tec-para'+fsufx[0]
IF (good0whi[0] GE 0) THEN xdat0whi = tparh0[good0whi]/tparc0[good0whi] ELSE xdat0whi = [d]
IF (good1whi[0] GE 0) THEN xdat1whi = tparh1[good1whi]/tparc1[good1whi] ELSE xdat1whi = [d]
IF (good2whi[0] GE 0) THEN xdat2whi = tparh2[good2whi]/tparc2[good2whi] ELSE xdat2whi = [d]
IF (good3whi[0] GE 0) THEN xdat3whi = tparh3[good3whi]/tparc3[good3whi] ELSE xdat3whi = [d]
; => Define T_eh,para/T_ec,para [MIXED]
fnamemix = fpref[2]+'Teh-para_Tec-para'+fsufx[0]
IF (good0mix[0] GE 0) THEN xdat0mix = tparh0[good0mix]/tparc0[good0mix] ELSE xdat0mix = [d]
IF (good1mix[0] GE 0) THEN xdat1mix = tparh1[good1mix]/tparc1[good1mix] ELSE xdat1mix = [d]
IF (good2mix[0] GE 0) THEN xdat2mix = tparh2[good2mix]/tparc2[good2mix] ELSE xdat2mix = [d]
IF (good3mix[0] GE 0) THEN xdat3mix = tparh3[good3mix]/tparc3[good3mix] ELSE xdat3mix = [d]
;------------------------------------------------
; => T_eh/T_i Plots
;------------------------------------------------
xra      = [1d0,1.2d1]
xttl     = 'T!Deh!N'+'/T!Di!N [unitless]'
xposi    = 3.0
xlog     = 1
; => Define Teh/Ti [LHWs]
fnamelhw = fpref[0]+'Teh_Ti'+fsufx[0]
IF (good0lhw[0] GE 0) THEN xdat0lhw = tehavg0[good0lhw]/tiavg0[good0lhw] ELSE xdat0lhw = [d]
IF (good1lhw[0] GE 0) THEN xdat1lhw = tehavg1[good1lhw]/tiavg1[good1lhw] ELSE xdat1lhw = [d]
IF (good2lhw[0] GE 0) THEN xdat2lhw = tehavg2[good2lhw]/tiavg2[good2lhw] ELSE xdat2lhw = [d]
IF (good3lhw[0] GE 0) THEN xdat3lhw = tehavg3[good3lhw]/tiavg3[good3lhw] ELSE xdat3lhw = [d]
; => Define Teh/Ti [WWs]
fnamewhi = fpref[1]+'Teh_Ti'+fsufx[0]
IF (good0whi[0] GE 0) THEN xdat0whi = tehavg0[good0whi]/tiavg0[good0whi] ELSE xdat0whi = [d]
IF (good1whi[0] GE 0) THEN xdat1whi = tehavg1[good1whi]/tiavg1[good1whi] ELSE xdat1whi = [d]
IF (good2whi[0] GE 0) THEN xdat2whi = tehavg2[good2whi]/tiavg2[good2whi] ELSE xdat2whi = [d]
IF (good3whi[0] GE 0) THEN xdat3whi = tehavg3[good3whi]/tiavg3[good3whi] ELSE xdat3whi = [d]
; => Define Teh/Ti [MIXED]
fnamemix = fpref[2]+'Teh_Ti'+fsufx[0]
IF (good0mix[0] GE 0) THEN xdat0mix = tehavg0[good0mix]/tiavg0[good0mix] ELSE xdat0mix = [d]
IF (good1mix[0] GE 0) THEN xdat1mix = tehavg1[good1mix]/tiavg1[good1mix] ELSE xdat1mix = [d]
IF (good2mix[0] GE 0) THEN xdat2mix = tehavg2[good2mix]/tiavg2[good2mix] ELSE xdat2mix = [d]
IF (good3mix[0] GE 0) THEN xdat3mix = tehavg3[good3mix]/tiavg3[good3mix] ELSE xdat3mix = [d]
;------------------------------------------------
; => T_ec/T_i Plots
;------------------------------------------------
xra      = [1d-1,2d0]
xttl     = 'T!Dec!N'+'/T!Di!N [unitless]'
xposi    = 0.3
xlog     = 1
; => Define Tec/Ti [LHWs]
fnamelhw = fpref[0]+'Tec_Ti'+fsufx[0]
IF (good0lhw[0] GE 0) THEN xdat0lhw = tecavg0[good0lhw]/tiavg0[good0lhw] ELSE xdat0lhw = [d]
IF (good1lhw[0] GE 0) THEN xdat1lhw = tecavg1[good1lhw]/tiavg1[good1lhw] ELSE xdat1lhw = [d]
IF (good2lhw[0] GE 0) THEN xdat2lhw = tecavg2[good2lhw]/tiavg2[good2lhw] ELSE xdat2lhw = [d]
IF (good3lhw[0] GE 0) THEN xdat3lhw = tecavg3[good3lhw]/tiavg3[good3lhw] ELSE xdat3lhw = [d]
; => Define Tec/Ti [WWs]
fnamewhi = fpref[1]+'Tec_Ti'+fsufx[0]
IF (good0whi[0] GE 0) THEN xdat0whi = tecavg0[good0whi]/tiavg0[good0whi] ELSE xdat0whi = [d]
IF (good1whi[0] GE 0) THEN xdat1whi = tecavg1[good1whi]/tiavg1[good1whi] ELSE xdat1whi = [d]
IF (good2whi[0] GE 0) THEN xdat2whi = tecavg2[good2whi]/tiavg2[good2whi] ELSE xdat2whi = [d]
IF (good3whi[0] GE 0) THEN xdat3whi = tecavg3[good3whi]/tiavg3[good3whi] ELSE xdat3whi = [d]
; => Define Tec/Ti [MIXED]
fnamemix = fpref[2]+'Tec_Ti'+fsufx[0]
IF (good0mix[0] GE 0) THEN xdat0mix = tecavg0[good0mix]/tiavg0[good0mix] ELSE xdat0mix = [d]
IF (good1mix[0] GE 0) THEN xdat1mix = tecavg1[good1mix]/tiavg1[good1mix] ELSE xdat1mix = [d]
IF (good2mix[0] GE 0) THEN xdat2mix = tecavg2[good2mix]/tiavg2[good2mix] ELSE xdat2mix = [d]
IF (good3mix[0] GE 0) THEN xdat3mix = tecavg3[good3mix]/tiavg3[good3mix] ELSE xdat3mix = [d]
;------------------------------------------------
; => T_eff/T_i Plots
;------------------------------------------------
xra      = [1d-1,2d0]
xttl     = 'T!Deff!N'+'/T!Di!N [unitless]'
xposi    = 0.3
xlog     = 1
; => Define Teff/Ti [LHWs]
fnamelhw = fpref[0]+'Teff_Ti'+fsufx[0]
IF (good0lhw[0] GE 0) THEN xdat0lhw = teff_av0[good0lhw]/tiavg0[good0lhw] ELSE xdat0lhw = [d]
IF (good1lhw[0] GE 0) THEN xdat1lhw = teff_av1[good1lhw]/tiavg1[good1lhw] ELSE xdat1lhw = [d]
IF (good2lhw[0] GE 0) THEN xdat2lhw = teff_av2[good2lhw]/tiavg2[good2lhw] ELSE xdat2lhw = [d]
IF (good3lhw[0] GE 0) THEN xdat3lhw = teff_av3[good3lhw]/tiavg3[good3lhw] ELSE xdat3lhw = [d]
; => Define Teff/Ti [WWs]
fnamewhi = fpref[1]+'Teff_Ti'+fsufx[0]
IF (good0whi[0] GE 0) THEN xdat0whi = teff_av0[good0whi]/tiavg0[good0whi] ELSE xdat0whi = [d]
IF (good1whi[0] GE 0) THEN xdat1whi = teff_av1[good1whi]/tiavg1[good1whi] ELSE xdat1whi = [d]
IF (good2whi[0] GE 0) THEN xdat2whi = teff_av2[good2whi]/tiavg2[good2whi] ELSE xdat2whi = [d]
IF (good3whi[0] GE 0) THEN xdat3whi = teff_av3[good3whi]/tiavg3[good3whi] ELSE xdat3whi = [d]
; => Define Teff/Ti [MIXED]
fnamemix = fpref[2]+'Teff_Ti'+fsufx[0]
IF (good0mix[0] GE 0) THEN xdat0mix = teff_av0[good0mix]/tiavg0[good0mix] ELSE xdat0mix = [d]
IF (good1mix[0] GE 0) THEN xdat1mix = teff_av1[good1mix]/tiavg1[good1mix] ELSE xdat1mix = [d]
IF (good2mix[0] GE 0) THEN xdat2mix = teff_av2[good2mix]/tiavg2[good2mix] ELSE xdat2mix = [d]
IF (good3mix[0] GE 0) THEN xdat3mix = teff_av3[good3mix]/tiavg3[good3mix] ELSE xdat3mix = [d]


;-----------------------------------------------------------------------------------------
; => sort
;-----------------------------------------------------------------------------------------

; => Define x and y data [LHWs]
xdatalhw = [xdat0lhw,xdat1lhw,xdat2lhw,xdat3lhw]
ydatalhw = [ydat0lhw,ydat1lhw,ydat2lhw,ydat3lhw]
sp       = SORT(xdatalhw)
xdatalhw = xdatalhw[sp]
ydatalhw = ydatalhw[sp]
unq      = UNIQ(xdatalhw,SORT(xdatalhw))
xdatlhwu = xdatalhw[unq]
gdlhwu   = N_ELEMENTS(xdatlhwu)
avgy_lhw = REPLICATE(d,gdlhwu)       ; => Array of avg. Y-values for each X-value
stdy_lhw = REPLICATE(d,gdlhwu)       ; => Array of std. dev. of Y-values for each X-value
FOR j=0L, gdlhwu - 1L DO BEGIN                                     $
  good0      = WHERE(xdatalhw EQ xdatlhwu[j],gd0)                & $
  IF (gd0 GT 0) THEN avgy_lhw[j] = MEAN(ydatalhw[good0],/NAN)    & $
  IF (gd0 GT 0) THEN stdy_lhw[j] = STDDEV(ydatalhw[good0],/NAN)  & $
  IF (gd0 EQ 1) THEN stdy_lhw[j] = 1d-1*avgy_lhw[j]
; => Determine y-ranges by high and low values
ylow_lhw  = avgy_lhw - stdy_lhw
yhigh_lhw = avgy_lhw + stdy_lhw
bad    = WHERE(ylow_lhw LE 0d0,bd)
IF (bd GT 0) THEN ylow_lhw[bad] = 0.01

goodlhw0  = array_where(xdat0lhw,xdatlhwu,/N_UNIQ)
goodlhw1  = array_where(xdat1lhw,xdatlhwu,/N_UNIQ)
goodlhw2  = array_where(xdat2lhw,xdatlhwu,/N_UNIQ)
goodlhw3  = array_where(xdat3lhw,xdatlhwu,/N_UNIQ)
HELP, goodlhw0, goodlhw1, goodlhw2, goodlhw3
IF (goodlhw0[0] GE 0) THEN goodlhw0 = goodlhw0[UNIQ(REFORM(goodlhw0[*,1]),SORT(REFORM(goodlhw0[*,1]))),1]
IF (goodlhw1[0] GE 0) THEN goodlhw1 = goodlhw1[UNIQ(REFORM(goodlhw1[*,1]),SORT(REFORM(goodlhw1[*,1]))),1]
IF (goodlhw2[0] GE 0) THEN goodlhw2 = goodlhw2[UNIQ(REFORM(goodlhw2[*,1]),SORT(REFORM(goodlhw2[*,1]))),1]
IF (goodlhw3[0] GE 0) THEN goodlhw3 = goodlhw3[UNIQ(REFORM(goodlhw3[*,1]),SORT(REFORM(goodlhw3[*,1]))),1]
HELP, goodlhw0, goodlhw1, goodlhw2, goodlhw3


; => Define x and y data [WWs]
xdatawhi = [xdat0whi,xdat1whi,xdat2whi,xdat3whi]
ydatawhi = [ydat0whi,ydat1whi,ydat2whi,ydat3whi]
sp       = SORT(xdatawhi)
xdatawhi = xdatawhi[sp]
ydatawhi = ydatawhi[sp]
unq      = UNIQ(xdatawhi,SORT(xdatawhi))
xdatwhiu = xdatawhi[unq]
gdwhiu   = N_ELEMENTS(xdatwhiu)
avgy_whi = REPLICATE(d,gdwhiu)       ; => Array of avg. Y-values for each X-value
stdy_whi = REPLICATE(d,gdwhiu)       ; => Array of std. dev. of Y-values for each X-value
FOR j=0L, gdwhiu - 1L DO BEGIN                                     $
  good0      = WHERE(xdatawhi EQ xdatwhiu[j],gd0)                & $
  IF (gd0 GT 0) THEN avgy_whi[j] = MEAN(ydatawhi[good0],/NAN)    & $
  IF (gd0 GT 0) THEN stdy_whi[j] = STDDEV(ydatawhi[good0],/NAN)  & $
  IF (gd0 EQ 1) THEN stdy_whi[j] = 1d-1*avgy_whi[j]
; => Determine y-ranges by high and low values
ylow_whi  = avgy_whi - stdy_whi
yhigh_whi = avgy_whi + stdy_whi
bad    = WHERE(ylow_whi LE 0d0,bd)
IF (bd GT 0) THEN ylow_whi[bad] = 0.01

goodwhi0  = array_where(xdat0whi,xdatwhiu,/N_UNIQ)
goodwhi1  = array_where(xdat1whi,xdatwhiu,/N_UNIQ)
goodwhi2  = array_where(xdat2whi,xdatwhiu,/N_UNIQ)
goodwhi3  = array_where(xdat3whi,xdatwhiu,/N_UNIQ)
HELP, goodwhi0, goodwhi1, goodwhi2, goodwhi3
IF (goodwhi0[0] GE 0) THEN goodwhi0 = goodwhi0[UNIQ(REFORM(goodwhi0[*,1]),SORT(REFORM(goodwhi0[*,1]))),1]
IF (goodwhi1[0] GE 0) THEN goodwhi1 = goodwhi1[UNIQ(REFORM(goodwhi1[*,1]),SORT(REFORM(goodwhi1[*,1]))),1]
IF (goodwhi2[0] GE 0) THEN goodwhi2 = goodwhi2[UNIQ(REFORM(goodwhi2[*,1]),SORT(REFORM(goodwhi2[*,1]))),1]
IF (goodwhi3[0] GE 0) THEN goodwhi3 = goodwhi3[UNIQ(REFORM(goodwhi3[*,1]),SORT(REFORM(goodwhi3[*,1]))),1]
HELP, goodwhi0, goodwhi1, goodwhi2, goodwhi3

; => Define x and y data [MIXED]
xdatamix = [xdat0mix,xdat1mix,xdat2mix,xdat3mix]
ydatamix = [ydat0mix,ydat1mix,ydat2mix,ydat3mix]
sp       = SORT(xdatamix)
xdatamix = xdatamix[sp]
ydatamix = ydatamix[sp]
unq      = UNIQ(xdatamix,SORT(xdatamix))
xdatmixu = xdatamix[unq]
gdmixu   = N_ELEMENTS(xdatmixu)
avgy_mix = REPLICATE(d,gdmixu)       ; => Array of avg. Y-values for each X-value
stdy_mix = REPLICATE(d,gdmixu)       ; => Array of std. dev. of Y-values for each X-value
FOR j=0L, gdmixu - 1L DO BEGIN                                     $
  good0      = WHERE(xdatamix EQ xdatmixu[j],gd0)                & $
  IF (gd0 GT 0) THEN avgy_mix[j] = MEAN(ydatamix[good0],/NAN)    & $
  IF (gd0 GT 0) THEN stdy_mix[j] = STDDEV(ydatamix[good0],/NAN)  & $
  IF (gd0 EQ 1) THEN stdy_mix[j] = 1d-1*avgy_mix[j]
; => Determine y-ranges by high and low values
ylow_mix  = avgy_mix - stdy_mix
yhigh_mix = avgy_mix + stdy_mix
bad    = WHERE(ylow_mix LE 0d0,bd)
IF (bd GT 0) THEN ylow_mix[bad] = 0.01

goodmix0  = array_where(xdat0mix,xdatmixu,/N_UNIQ)
goodmix1  = array_where(xdat1mix,xdatmixu,/N_UNIQ)
goodmix2  = array_where(xdat2mix,xdatmixu,/N_UNIQ)
goodmix3  = array_where(xdat3mix,xdatmixu,/N_UNIQ)
HELP, goodmix0, goodmix1, goodmix2, goodmix3
IF (goodmix0[0] GE 0) THEN goodmix0 = goodmix0[UNIQ(REFORM(goodmix0[*,1]),SORT(REFORM(goodmix0[*,1]))),1]
IF (goodmix1[0] GE 0) THEN goodmix1 = goodmix1[UNIQ(REFORM(goodmix1[*,1]),SORT(REFORM(goodmix1[*,1]))),1]
IF (goodmix2[0] GE 0) THEN goodmix2 = goodmix2[UNIQ(REFORM(goodmix2[*,1]),SORT(REFORM(goodmix2[*,1]))),1]
IF (goodmix3[0] GE 0) THEN goodmix3 = goodmix3[UNIQ(REFORM(goodmix3[*,1]),SORT(REFORM(goodmix3[*,1]))),1]
HELP, goodmix0, goodmix1, goodmix2, goodmix3


;-----------------------------------------------------------------------------------------
; => define unique data elements
;-----------------------------------------------------------------------------------------

; => Define data for 1997-12-10
IF (goodlhw0[0] GE 0) THEN xdat0lhw  = [xdatlhwu[goodlhw0]]  ELSE xdat0lhw  = [d]
IF (goodlhw0[0] GE 0) THEN ydat0lhw  = [avgy_lhw[goodlhw0]]  ELSE ydat0lhw  = [d]
IF (goodlhw0[0] GE 0) THEN ylow0lhw  = [ylow_lhw[goodlhw0]]  ELSE ylow0lhw  = [d]
IF (goodlhw0[0] GE 0) THEN yhigh0lhw = [yhigh_lhw[goodlhw0]] ELSE yhigh0lhw = [d]

IF (goodwhi0[0] GE 0) THEN xdat0whi  = [xdatwhiu[goodwhi0]]  ELSE xdat0whi  = [d]
IF (goodwhi0[0] GE 0) THEN ydat0whi  = [avgy_whi[goodwhi0]]  ELSE ydat0whi  = [d]
IF (goodwhi0[0] GE 0) THEN ylow0whi  = [ylow_whi[goodwhi0]]  ELSE ylow0whi  = [d]
IF (goodwhi0[0] GE 0) THEN yhigh0whi = [yhigh_whi[goodwhi0]] ELSE yhigh0whi = [d]

IF (goodmix0[0] GE 0) THEN xdat0mix  = [xdatmixu[goodmix0]]  ELSE xdat0mix  = [d]
IF (goodmix0[0] GE 0) THEN ydat0mix  = [avgy_mix[goodmix0]]  ELSE ydat0mix  = [d]
IF (goodmix0[0] GE 0) THEN ylow0mix  = [ylow_mix[goodmix0]]  ELSE ylow0mix  = [d]
IF (goodmix0[0] GE 0) THEN yhigh0mix = [yhigh_mix[goodmix0]] ELSE yhigh0mix = [d]

; => Define data for 1998-08-26
IF (goodlhw1[0] GE 0) THEN xdat1lhw  = [xdatlhwu[goodlhw1]]  ELSE xdat1lhw  = [d]
IF (goodlhw1[0] GE 0) THEN ydat1lhw  = [avgy_lhw[goodlhw1]]  ELSE ydat1lhw  = [d]
IF (goodlhw1[0] GE 0) THEN ylow1lhw  = [ylow_lhw[goodlhw1]]  ELSE ylow1lhw  = [d]
IF (goodlhw1[0] GE 0) THEN yhigh1lhw = [yhigh_lhw[goodlhw1]] ELSE yhigh1lhw = [d]

IF (goodwhi1[0] GE 0) THEN xdat1whi  = [xdatwhiu[goodwhi1]]  ELSE xdat1whi  = [d]
IF (goodwhi1[0] GE 0) THEN ydat1whi  = [avgy_whi[goodwhi1]]  ELSE ydat1whi  = [d]
IF (goodwhi1[0] GE 0) THEN ylow1whi  = [ylow_whi[goodwhi1]]  ELSE ylow1whi  = [d]
IF (goodwhi1[0] GE 0) THEN yhigh1whi = [yhigh_whi[goodwhi1]] ELSE yhigh1whi = [d]

IF (goodmix1[0] GE 0) THEN xdat1mix  = [xdatmixu[goodmix1]]  ELSE xdat1mix  = [d]
IF (goodmix1[0] GE 0) THEN ydat1mix  = [avgy_mix[goodmix1]]  ELSE ydat1mix  = [d]
IF (goodmix1[0] GE 0) THEN ylow1mix  = [ylow_mix[goodmix1]]  ELSE ylow1mix  = [d]
IF (goodmix1[0] GE 0) THEN yhigh1mix = [yhigh_mix[goodmix1]] ELSE yhigh1mix = [d]

; => Define data for 1998-09-24
IF (goodlhw2[0] GE 0) THEN xdat2lhw  = [xdatlhwu[goodlhw2]]  ELSE xdat2lhw  = [d]
IF (goodlhw2[0] GE 0) THEN ydat2lhw  = [avgy_lhw[goodlhw2]]  ELSE ydat2lhw  = [d]
IF (goodlhw2[0] GE 0) THEN ylow2lhw  = [ylow_lhw[goodlhw2]]  ELSE ylow2lhw  = [d]
IF (goodlhw2[0] GE 0) THEN yhigh2lhw = [yhigh_lhw[goodlhw2]] ELSE yhigh2lhw = [d]

IF (goodwhi2[0] GE 0) THEN xdat2whi  = [xdatwhiu[goodwhi2]]  ELSE xdat2whi  = [d]
IF (goodwhi2[0] GE 0) THEN ydat2whi  = [avgy_whi[goodwhi2]]  ELSE ydat2whi  = [d]
IF (goodwhi2[0] GE 0) THEN ylow2whi  = [ylow_whi[goodwhi2]]  ELSE ylow2whi  = [d]
IF (goodwhi2[0] GE 0) THEN yhigh2whi = [yhigh_whi[goodwhi2]] ELSE yhigh2whi = [d]

IF (goodmix2[0] GE 0) THEN xdat2mix  = [xdatmixu[goodmix2]]  ELSE xdat2mix  = [d]
IF (goodmix2[0] GE 0) THEN ydat2mix  = [avgy_mix[goodmix2]]  ELSE ydat2mix  = [d]
IF (goodmix2[0] GE 0) THEN ylow2mix  = [ylow_mix[goodmix2]]  ELSE ylow2mix  = [d]
IF (goodmix2[0] GE 0) THEN yhigh2mix = [yhigh_mix[goodmix2]] ELSE yhigh2mix = [d]

; => Define data for 2000-02-11
IF (goodlhw3[0] GE 0) THEN xdat3lhw  = [xdatlhwu[goodlhw3]]  ELSE xdat3lhw  = [d]
IF (goodlhw3[0] GE 0) THEN ydat3lhw  = [avgy_lhw[goodlhw3]]  ELSE ydat3lhw  = [d]
IF (goodlhw3[0] GE 0) THEN ylow3lhw  = [ylow_lhw[goodlhw3]]  ELSE ylow3lhw  = [d]
IF (goodlhw3[0] GE 0) THEN yhigh3lhw = [yhigh_lhw[goodlhw3]] ELSE yhigh3lhw = [d]

IF (goodwhi3[0] GE 0) THEN xdat3whi  = [xdatwhiu[goodwhi3]]  ELSE xdat3whi  = [d]
IF (goodwhi3[0] GE 0) THEN ydat3whi  = [avgy_whi[goodwhi3]]  ELSE ydat3whi  = [d]
IF (goodwhi3[0] GE 0) THEN ylow3whi  = [ylow_whi[goodwhi3]]  ELSE ylow3whi  = [d]
IF (goodwhi3[0] GE 0) THEN yhigh3whi = [yhigh_whi[goodwhi3]] ELSE yhigh3whi = [d]

IF (goodmix3[0] GE 0) THEN xdat3mix  = [xdatmixu[goodmix3]]  ELSE xdat3mix  = [d]
IF (goodmix3[0] GE 0) THEN ydat3mix  = [avgy_mix[goodmix3]]  ELSE ydat3mix  = [d]
IF (goodmix3[0] GE 0) THEN ylow3mix  = [ylow_mix[goodmix3]]  ELSE ylow3mix  = [d]
IF (goodmix3[0] GE 0) THEN yhigh3mix = [yhigh_mix[goodmix3]] ELSE yhigh3mix = [d]


IF (xlog) THEN xminor = 9 ELSE xminor = 10
pstrlhw = {XRANGE:xra,YRANGE:yra,XTITLE:xttl,YTITLE:yttl[0],NODATA:1,YLOG:1,$
           XLOG:xlog,YSTYLE:1,XSTYLE:1,XMINOR:xminor}
pstrwhi = {XRANGE:xra,YRANGE:yra,XTITLE:xttl,YTITLE:yttl[1],NODATA:1,YLOG:1,$
           XLOG:xlog,YSTYLE:1,XSTYLE:1,XMINOR:xminor}
pstrmix = {XRANGE:xra,YRANGE:yra,XTITLE:xttl,YTITLE:yttl[2],NODATA:1,YLOG:1,$
           XLOG:xlog,YSTYLE:1,XSTYLE:1,XMINOR:xminor}

; => Plot x and y data [LHWs]
WSET,0
  PLOT,xdat1lhw,ydat1lhw,_EXTRA=pstrlhw
    ; => Plot data for 1997-12-10
    OPLOT,xdat0lhw,ydat0lhw,PSYM=6,COLOR=250
    ERRPLOT,xdat0lhw,ylow0lhw,yhigh0lhw,/DATA,COLOR=250
    ; => Plot data for 1998-08-26
    OPLOT,xdat1lhw,ydat1lhw,PSYM=6,COLOR=200
    ERRPLOT,xdat1lhw,ylow1lhw,yhigh1lhw,/DATA,COLOR=200
    ; => Plot data for 1998-09-24
    OPLOT,xdat2lhw,ydat2lhw,PSYM=6,COLOR=150
    ERRPLOT,xdat2lhw,ylow2lhw,yhigh2lhw,/DATA,COLOR=150
    ; => Plot data for 2000-02-11
    OPLOT,xdat3lhw,ydat3lhw,PSYM=6,COLOR= 50
    ERRPLOT,xdat3lhw,ylow3lhw,yhigh3lhw,/DATA,COLOR= 50
    XYOUTS,xposi[0],yposi[0],/DATA,'1997-12-10 [All]',COLOR=250
    XYOUTS,xposi[0],yposi[1],/DATA,'1998-08-26 [All]',COLOR=200
    XYOUTS,xposi[0],yposi[2],/DATA,'1998-09-24 [All]',COLOR=150
    XYOUTS,xposi[0],yposi[3],/DATA,'2000-02-11 [All]',COLOR= 50
popen,fnamelhw[0],/LAND
  PLOT,xdat0lhw,ydat0lhw,_EXTRA=pstrlhw
    ; => Plot data for 1997-12-10
    OPLOT,xdat0lhw,ydat0lhw,PSYM=6,COLOR=250
    ERRPLOT,xdat0lhw,ylow0lhw,yhigh0lhw,/DATA,COLOR=250
    ; => Plot data for 1998-08-26
    OPLOT,xdat1lhw,ydat1lhw,PSYM=6,COLOR=200
    ERRPLOT,xdat1lhw,ylow1lhw,yhigh1lhw,/DATA,COLOR=200
    ; => Plot data for 1998-09-24
    OPLOT,xdat2lhw,ydat2lhw,PSYM=6,COLOR=150
    ERRPLOT,xdat2lhw,ylow2lhw,yhigh2lhw,/DATA,COLOR=150
    ; => Plot data for 2000-02-11
    OPLOT,xdat3lhw,ydat3lhw,PSYM=6,COLOR= 50
    ERRPLOT,xdat3lhw,ylow3lhw,yhigh3lhw,/DATA,COLOR= 50
    XYOUTS,xposi[0],yposi[0],/DATA,'1997-12-10 [All]',COLOR=250
    XYOUTS,xposi[0],yposi[1],/DATA,'1998-08-26 [All]',COLOR=200
    XYOUTS,xposi[0],yposi[2],/DATA,'1998-09-24 [All]',COLOR=150
    XYOUTS,xposi[0],yposi[3],/DATA,'2000-02-11 [All]',COLOR= 50
pclose

; => Plot x and y data [WWs]
WSET,1
  PLOT,xdat0whi,ydat0whi,_EXTRA=pstrwhi
    ; => Plot data for 1997-12-10
    OPLOT,xdat0whi,ydat0whi,PSYM=6,COLOR=250
    ERRPLOT,xdat0whi,ylow0whi,yhigh0whi,/DATA,COLOR=250
    ; => Plot data for 1998-08-26
    OPLOT,xdat1whi,ydat1whi,PSYM=6,COLOR=200
    ERRPLOT,xdat1whi,ylow1whi,yhigh1whi,/DATA,COLOR=200
    ; => Plot data for 1998-09-24
    OPLOT,xdat2whi,ydat2whi,PSYM=6,COLOR=150
    ERRPLOT,xdat2whi,ylow2whi,yhigh2whi,/DATA,COLOR=150
    ; => Plot data for 2000-02-11
    OPLOT,xdat3whi,ydat3whi,PSYM=6,COLOR= 50
    ERRPLOT,xdat3whi,ylow3whi,yhigh3whi,/DATA,COLOR= 50
    XYOUTS,xposi[0],yposi[0],/DATA,'1997-12-10 [All]',COLOR=250
    XYOUTS,xposi[0],yposi[1],/DATA,'1998-08-26 [All]',COLOR=200
    XYOUTS,xposi[0],yposi[2],/DATA,'1998-09-24 [All]',COLOR=150
    XYOUTS,xposi[0],yposi[3],/DATA,'2000-02-11 [All]',COLOR= 50
popen,fnamewhi[0],/LAND
  PLOT,xdat0whi,ydat0whi,_EXTRA=pstrwhi
    ; => Plot data for 1997-12-10
    OPLOT,xdat0whi,ydat0whi,PSYM=6,COLOR=250
    ERRPLOT,xdat0whi,ylow0whi,yhigh0whi,/DATA,COLOR=250
    ; => Plot data for 1998-08-26
    OPLOT,xdat1whi,ydat1whi,PSYM=6,COLOR=200
    ERRPLOT,xdat1whi,ylow1whi,yhigh1whi,/DATA,COLOR=200
    ; => Plot data for 1998-09-24
    OPLOT,xdat2whi,ydat2whi,PSYM=6,COLOR=150
    ERRPLOT,xdat2whi,ylow2whi,yhigh2whi,/DATA,COLOR=150
    ; => Plot data for 2000-02-11
    OPLOT,xdat3whi,ydat3whi,PSYM=6,COLOR= 50
    ERRPLOT,xdat3whi,ylow3whi,yhigh3whi,/DATA,COLOR= 50
    XYOUTS,xposi[0],yposi[0],/DATA,'1997-12-10 [All]',COLOR=250
    XYOUTS,xposi[0],yposi[1],/DATA,'1998-08-26 [All]',COLOR=200
    XYOUTS,xposi[0],yposi[2],/DATA,'1998-09-24 [All]',COLOR=150
    XYOUTS,xposi[0],yposi[3],/DATA,'2000-02-11 [All]',COLOR= 50
pclose

; => Plot x and y data [MIXED]
WSET,2
  PLOT,xdat0mix,ydat0mix,_EXTRA=pstrmix
    ; => Plot data for 1997-12-10
    OPLOT,xdat0mix,ydat0mix,PSYM=6,COLOR=250
    ERRPLOT,xdat0mix,ylow0mix,yhigh0mix,/DATA,COLOR=250
    ; => Plot data for 1998-08-26
    OPLOT,xdat1mix,ydat1mix,PSYM=6,COLOR=200
    ERRPLOT,xdat1mix,ylow1mix,yhigh1mix,/DATA,COLOR=200
    ; => Plot data for 1998-09-24
    OPLOT,xdat2mix,ydat2mix,PSYM=6,COLOR=150
    ERRPLOT,xdat2mix,ylow2mix,yhigh2mix,/DATA,COLOR=150
    ; => Plot data for 2000-02-11
    OPLOT,xdat3mix,ydat3mix,PSYM=6,COLOR= 50
    ERRPLOT,xdat3mix,ylow3mix,yhigh3mix,/DATA,COLOR= 50
    XYOUTS,xposi[0],yposi[0],/DATA,'1997-12-10 [All]',COLOR=250
    XYOUTS,xposi[0],yposi[1],/DATA,'1998-08-26 [All]',COLOR=200
    XYOUTS,xposi[0],yposi[2],/DATA,'1998-09-24 [All]',COLOR=150
    XYOUTS,xposi[0],yposi[3],/DATA,'2000-02-11 [All]',COLOR= 50
popen,fnamemix[0],/LAND
  PLOT,xdat0mix,ydat0mix,_EXTRA=pstrmix
    ; => Plot data for 1997-12-10
    OPLOT,xdat0mix,ydat0mix,PSYM=6,COLOR=250
    ERRPLOT,xdat0mix,ylow0mix,yhigh0mix,/DATA,COLOR=250
    ; => Plot data for 1998-08-26
    OPLOT,xdat1mix,ydat1mix,PSYM=6,COLOR=200
    ERRPLOT,xdat1mix,ylow1mix,yhigh1mix,/DATA,COLOR=200
    ; => Plot data for 1998-09-24
    OPLOT,xdat2mix,ydat2mix,PSYM=6,COLOR=150
    ERRPLOT,xdat2mix,ylow2mix,yhigh2mix,/DATA,COLOR=150
    ; => Plot data for 2000-02-11
    OPLOT,xdat3mix,ydat3mix,PSYM=6,COLOR= 50
    ERRPLOT,xdat3mix,ylow3mix,yhigh3mix,/DATA,COLOR= 50
    XYOUTS,xposi[0],yposi[0],/DATA,'1997-12-10 [All]',COLOR=250
    XYOUTS,xposi[0],yposi[1],/DATA,'1998-08-26 [All]',COLOR=200
    XYOUTS,xposi[0],yposi[2],/DATA,'1998-09-24 [All]',COLOR=150
    XYOUTS,xposi[0],yposi[3],/DATA,'2000-02-11 [All]',COLOR= 50
pclose



; => extra for Qe
yttlex   = '[LHWs and WWs]'+' Wave Amplitudes'+'!C'+'[Filtered Peak, nT]'
pstrex   = {XRANGE:xra,YRANGE:yra,XTITLE:xttl,YTITLE:yttlex[0],NODATA:1,YLOG:1,$
            XLOG:xlog,YSTYLE:1,XSTYLE:1,XMINOR:xminor}
fprefex  = 'LHWs-and-WWs-Wave-Amp_vs_'
fsufx    = '_Avg-per-unique-Xvalue_plusminus-STDDEV'
fnameex  = fprefex[0]+'Qe'+fsufx[0]
WSET,0
  PLOT,[xdat0lhw,xdat0whi],[ydat0lhw,ydat0whi],_EXTRA=pstrex
    ; => Plot data for 1997-12-10
    OPLOT,[xdat0lhw,xdat0whi],[ydat0lhw,ydat0whi],PSYM=6,COLOR=250
    ERRPLOT,[xdat0lhw,xdat0whi],[ylow0lhw,ylow0whi],[yhigh0lhw,yhigh0whi],/DATA,COLOR=250
    ; => Plot data for 1998-08-26
    OPLOT,[xdat1lhw,xdat1whi],[ydat1lhw,ydat1whi],PSYM=6,COLOR=200
    ERRPLOT,[xdat1lhw,xdat1whi],[ylow1lhw,ylow1whi],[yhigh1lhw,yhigh1whi],/DATA,COLOR=200
    ; => Plot data for 1998-09-24
    OPLOT,[xdat2lhw,xdat2whi],[ydat2lhw,ydat2whi],PSYM=6,COLOR=150
    ERRPLOT,[xdat2lhw,xdat2whi],[ylow2lhw,ylow2whi],[yhigh2lhw,yhigh2whi],/DATA,COLOR=150
    ; => Plot data for 2000-02-11
    OPLOT,[xdat3lhw,xdat3whi],[ydat3lhw,ydat3whi],PSYM=6,COLOR= 50
    ERRPLOT,[xdat3lhw,xdat3whi],[ylow3lhw,ylow3whi],[yhigh3lhw,yhigh3whi],/DATA,COLOR= 50
    XYOUTS,xposi[0],yposi[0],/DATA,'1997-12-10 [All]',COLOR=250
    XYOUTS,xposi[0],yposi[1],/DATA,'1998-08-26 [All]',COLOR=200
    XYOUTS,xposi[0],yposi[2],/DATA,'1998-09-24 [All]',COLOR=150
    XYOUTS,xposi[0],yposi[3],/DATA,'2000-02-11 [All]',COLOR= 50
popen,fnameex[0],/LAND
  PLOT,[xdat0lhw,xdat0whi],[ydat0lhw,ydat0whi],_EXTRA=pstrex
    ; => Plot data for 1997-12-10
    OPLOT,[xdat0lhw,xdat0whi],[ydat0lhw,ydat0whi],PSYM=6,COLOR=250
    ERRPLOT,[xdat0lhw,xdat0whi],[ylow0lhw,ylow0whi],[yhigh0lhw,yhigh0whi],/DATA,COLOR=250
    ; => Plot data for 1998-08-26
    OPLOT,[xdat1lhw,xdat1whi],[ydat1lhw,ydat1whi],PSYM=6,COLOR=200
    ERRPLOT,[xdat1lhw,xdat1whi],[ylow1lhw,ylow1whi],[yhigh1lhw,yhigh1whi],/DATA,COLOR=200
    ; => Plot data for 1998-09-24
    OPLOT,[xdat2lhw,xdat2whi],[ydat2lhw,ydat2whi],PSYM=6,COLOR=150
    ERRPLOT,[xdat2lhw,xdat2whi],[ylow2lhw,ylow2whi],[yhigh2lhw,yhigh2whi],/DATA,COLOR=150
    ; => Plot data for 2000-02-11
    OPLOT,[xdat3lhw,xdat3whi],[ydat3lhw,ydat3whi],PSYM=6,COLOR= 50
    ERRPLOT,[xdat3lhw,xdat3whi],[ylow3lhw,ylow3whi],[yhigh3lhw,yhigh3whi],/DATA,COLOR= 50
    XYOUTS,xposi[0],yposi[0],/DATA,'1997-12-10 [All]',COLOR=250
    XYOUTS,xposi[0],yposi[1],/DATA,'1998-08-26 [All]',COLOR=200
    XYOUTS,xposi[0],yposi[2],/DATA,'1998-09-24 [All]',COLOR=150
    XYOUTS,xposi[0],yposi[3],/DATA,'2000-02-11 [All]',COLOR= 50
pclose



; => extra for current density 

yttlex   = '[LHWs and MIXED]'+' Wave Amplitudes'+'!C'+'[Filtered Peak, nT]'
pstrex   = {XRANGE:xra,YRANGE:yra,XTITLE:xttl,YTITLE:yttlex[0],NODATA:1,YLOG:1,$
            XLOG:xlog,YSTYLE:1,XSTYLE:1,XMINOR:xminor}
fprefex  = 'LHWs-and-MIXED-Wave-Amp_vs_'
fsufx    = '_Avg-per-unique-Xvalue_plusminus-STDDEV'
fnameex  = fprefex[0]+'jdrift'+fsufx[0]

WSET,0
  PLOT,[xdat0lhw,xdat0mix],[ydat0lhw,ydat0mix],_EXTRA=pstrex
    ; => Plot data for 1997-12-10
    OPLOT,[xdat0lhw,xdat0mix],[ydat0lhw,ydat0mix],PSYM=6,COLOR=250
    ERRPLOT,[xdat0lhw,xdat0mix],[ylow0lhw,ylow0mix],[yhigh0lhw,yhigh0mix],/DATA,COLOR=250
    ; => Plot data for 1998-08-26
    OPLOT,[xdat1lhw,xdat1mix],[ydat1lhw,ydat1mix],PSYM=6,COLOR=200
    ERRPLOT,[xdat1lhw,xdat1mix],[ylow1lhw,ylow1mix],[yhigh1lhw,yhigh1mix],/DATA,COLOR=200
    ; => Plot data for 1998-09-24
    OPLOT,[xdat2lhw,xdat2mix],[ydat2lhw,ydat2mix],PSYM=6,COLOR=150
    ERRPLOT,[xdat2lhw,xdat2mix],[ylow2lhw,ylow2mix],[yhigh2lhw,yhigh2mix],/DATA,COLOR=150
    ; => Plot data for 2000-02-11
    OPLOT,[xdat3lhw,xdat3mix],[ydat3lhw,ydat3mix],PSYM=6,COLOR= 50
    ERRPLOT,[xdat3lhw,xdat3mix],[ylow3lhw,ylow3mix],[yhigh3lhw,yhigh3mix],/DATA,COLOR= 50
    XYOUTS,xposi[0],yposi[0],/DATA,'1997-12-10 [All]',COLOR=250
    XYOUTS,xposi[0],yposi[1],/DATA,'1998-08-26 [All]',COLOR=200
    XYOUTS,xposi[0],yposi[2],/DATA,'1998-09-24 [All]',COLOR=150
    XYOUTS,xposi[0],yposi[3],/DATA,'2000-02-11 [All]',COLOR= 50
popen,fnameex[0],/LAND
  PLOT,[xdat0lhw,xdat0mix],[ydat0lhw,ydat0mix],_EXTRA=pstrex
    ; => Plot data for 1997-12-10
    OPLOT,[xdat0lhw,xdat0mix],[ydat0lhw,ydat0mix],PSYM=6,COLOR=250
    ERRPLOT,[xdat0lhw,xdat0mix],[ylow0lhw,ylow0mix],[yhigh0lhw,yhigh0mix],/DATA,COLOR=250
    ; => Plot data for 1998-08-26
    OPLOT,[xdat1lhw,xdat1mix],[ydat1lhw,ydat1mix],PSYM=6,COLOR=200
    ERRPLOT,[xdat1lhw,xdat1mix],[ylow1lhw,ylow1mix],[yhigh1lhw,yhigh1mix],/DATA,COLOR=200
    ; => Plot data for 1998-09-24
    OPLOT,[xdat2lhw,xdat2mix],[ydat2lhw,ydat2mix],PSYM=6,COLOR=150
    ERRPLOT,[xdat2lhw,xdat2mix],[ylow2lhw,ylow2mix],[yhigh2lhw,yhigh2mix],/DATA,COLOR=150
    ; => Plot data for 2000-02-11
    OPLOT,[xdat3lhw,xdat3mix],[ydat3lhw,ydat3mix],PSYM=6,COLOR= 50
    ERRPLOT,[xdat3lhw,xdat3mix],[ylow3lhw,ylow3mix],[yhigh3lhw,yhigh3mix],/DATA,COLOR= 50
    XYOUTS,xposi[0],yposi[0],/DATA,'1997-12-10 [All]',COLOR=250
    XYOUTS,xposi[0],yposi[1],/DATA,'1998-08-26 [All]',COLOR=200
    XYOUTS,xposi[0],yposi[2],/DATA,'1998-09-24 [All]',COLOR=150
    XYOUTS,xposi[0],yposi[3],/DATA,'2000-02-11 [All]',COLOR= 50
pclose










