@load_tdss_lhw_stats.pro
;-----------------------------------------------------------------------------------------
; => Look at only the mixed-mode waves [without precursors]
;-----------------------------------------------------------------------------------------
good_mix   = array_where(evns,evns_mix,/N_UNIQ)
good_mix   = good_mix[*,0]
PRINT,';  ', N_ELEMENTS(good_mix)
;           200

thkba0     = thkba < (18d1 - thkba)
thkva0     = thkva < (18d1 - thkva)
thkn80     = thkn8 < (18d1 - thkn8)
thkn90     = thkn9 < (18d1 - thkn9)
PRINT,';  ',  MIN(thkba0[good_mix],/NAN),  MAX(thkba0[good_mix],/NAN),  MEAN(thkba0[good_mix],/NAN),  STDDEV(thkba0[good_mix],/NAN)
PRINT,';  ',  MIN(thkva0[good_mix],/NAN),  MAX(thkva0[good_mix],/NAN),  MEAN(thkva0[good_mix],/NAN),  STDDEV(thkva0[good_mix],/NAN)
PRINT,';  ',  MIN(thkn80[good_mix],/NAN),  MAX(thkn80[good_mix],/NAN),  MEAN(thkn80[good_mix],/NAN),  STDDEV(thkn80[good_mix],/NAN)
PRINT,';  ',  MIN(thkn90[good_mix],/NAN),  MAX(thkn90[good_mix],/NAN),  MEAN(thkn90[good_mix],/NAN),  STDDEV(thkn90[good_mix],/NAN)
;---------------------------------------------------------------------
; => Theta_[kB, kV, kn08, kn09]
;---------------------------------------------------------------------
;            Min             Max            Mean          Std. Dev.
;=====================================================================
;         2.1900001       89.871506       40.540470       23.784879
;         6.6259999       89.637001       58.755600       23.227144
;         7.7391048       89.426287       60.131123       21.123505
;         7.6778789       89.892955       60.244399       21.501234
;---------------------------------------------------------------------


unq_mix   = UNIQ(evns[good_mix],SORT(evns[good_mix]))
ugel_mix  = good_mix[unq_mix]
PRINT,';  ', N_ELEMENTS(ugel_mix)
;             9
mform     = '(";   ",a23,"   ",a23,"   ",I9.9)'
FOR j=0L, N_ELEMENTS(ugel_mix) - 1L DO PRINT,FORMAT=mform, scets[ugel_mix[j]], scete[ugel_mix[j]], evns[ugel_mix[j]]
;==================================================================
;   1998-09-24/23:22:24.983   1998-09-24/23:22:26.074   002011723
;   1998-09-24/23:22:46.502   1998-09-24/23:22:47.593   002011820
;   1998-09-24/23:30:46.893   1998-09-24/23:30:47.984   002013165
;   1998-09-24/23:45:50.535   1998-09-24/23:45:51.626   002015299
;   1998-09-24/23:45:51.730   1998-09-24/23:45:52.821   002015304
;   1998-09-24/23:48:40.482   1998-09-24/23:48:41.573   002015650
;   1998-09-25/00:05:21.783   1998-09-25/00:05:22.874   002017555
;   2000-02-11/23:33:56.703   2000-02-11/23:33:57.794   023145474
;   2000-02-11/23:33:59.082   2000-02-11/23:34:00.173   023145484
;   2000-04-06/16:33:08.622   2000-04-06/16:33:09.713   027126638
;   2000-04-06/18:30:59.901   2000-04-06/18:31:00.992   027134252
;==================================================================


;-----------------------------------------------------------------------------------------
; => print out for mathematica
;-----------------------------------------------------------------------------------------
;prefx = 'thkbmix = {{'
;xdat  = thkbs < (18d1 - thkbs)
;ydat  = thkbe < (18d1 - thkbe)
;prefx = 'thkvmix = {{'
;xdat  = thkvs < (18d1 - thkvs)
;ydat  = thkve < (18d1 - thkve)
;prefx = 'filtermix = {{'
;xdat  = freql
;ydat  = freqh
;prefx = 'densmix = {{'
;xdat  = dens_s
;ydat  = dens_e
;prefx = 'bmagmix = {{'
;xdat  = bmag_s
;ydat  = bmag_e
;prefx = 'vmagmix = {{'
;xdat  = vmag_s
;ydat  = vmag_e
;prefx = 'rhoemix = {{'
;xdat  = rhoe_s
;ydat  = rhoe_e

midss = '},{'
ff    = '(f10.3)'
; => turn data into strings
gd    = N_ELEMENTS(good_mix)
gxstr = STRTRIM(STRING(FORMAT=ff,xdat[good_mix]),2L)
gystr = STRTRIM(STRING(FORMAT=ff,ydat[good_mix]),2L)


temp0 = prefx[0]
FOR j=0L, gd - 1L DO BEGIN                               $
  temp0 = temp0[0]+gxstr[j]+','+gystr[j]+midss[0]

PRINT,temp0

thkbmix = {{46.816,46.604},{22.162,22.215},{5.032,4.859},{7.532,8.136},{20.765,21.484},{10.437,11.024},{24.486,24.321},{17.703,17.731},{46.151,47.965},{52.123,53.741},{53.017,54.887},{29.006,31.543},{53.331,57.355},{39.036,34.877},{23.797,26.586},{16.921,19.704},{38.526,42.256},{6.177,9.735},{14.376,12.251},{30.035,28.159},{43.972,47.835},{3.796,4.971},{85.653,80.583},{17.185,21.986},{18.330,23.198},{27.813,32.509},{24.678,29.137},{29.912,34.473},{36.723,40.770},{37.886,42.201},{32.739,37.419},{35.420,39.597},{38.402,42.821},{38.767,42.968},{32.130,36.414},{60.163,60.178},{60.018,60.036},{40.959,45.469},{39.327,43.785},{45.693,49.814},{35.818,40.181},{29.895,34.346},{34.303,38.610},{49.684,53.901},{34.288,38.678},{36.795,41.249},{25.084,29.633},{38.078,42.057},{38.869,43.151},{43.369,47.686},{67.332,65.048},{28.087,36.789},{14.182,2.554},{86.646,83.276},{36.846,43.096},{62.684,53.300},{55.405,55.858},{40.984,53.268},{74.223,61.914},{59.733,65.942},{43.218,39.548},{70.275,57.057},{34.328,38.479},{41.847,45.782},{22.406,23.546},{27.388,31.405},{24.232,22.001},{15.724,15.293},{85.862,71.713},{35.280,38.519},{38.279,38.736},{45.257,52.059},{18.885,24.948},{34.699,42.598},{32.111,42.478},{37.572,30.999},{46.572,54.518},{58.334,59.216},{49.024,49.726},{84.950,83.567},{65.975,64.333},{53.724,53.205},{54.458,53.661},{84.197,79.916},{74.731,71.589},{66.515,68.460},{51.255,48.442},{18.171,12.241},{58.833,54.060},{69.520,63.459},{66.870,63.187},{86.694,83.832},{62.948,60.450},{59.912,62.362},{62.967,57.083},{88.150,86.677},{31.937,34.970},{22.905,23.791},{80.461,65.336},{80.738,88.250},{87.368,89.518},{59.844,61.671},{73.527,66.183},{31.449,18.509},{87.978,83.880},{73.578,65.758},{80.108,75.211},{55.229,52.196},{83.452,77.178},{88.029,87.772},{84.604,86.563},{86.540,85.600},{85.813,87.732},{81.341,76.093},{78.561,88.835},{63.985,74.550},{71.234,66.453},{55.725,58.086},{55.248,57.610},{33.129,31.013},{39.703,38.082},{34.716,32.953},{35.568,33.710},{47.971,46.012},{23.441,21.987},{54.682,52.334},{15.604,14.144},{25.719,24.077},{25.166,23.378},{22.187,20.015},{49.349,47.378},{57.407,61.711},{40.226,36.513},{13.704,17.816},{41.317,40.269},{21.188,20.014},{17.400,19.735},{7.973,12.276},{3.729,3.221},{1.992,3.141},{10.159,8.308},{29.399,27.061},{23.573,21.415},{9.404,7.815},{1.195,3.185},{7.754,6.416},{9.604,7.518},{54.577,51.888},{29.338,32.115},{34.406,35.808},{19.620,23.724},{14.211,15.697},{15.041,18.129},{12.959,15.926},{17.219,20.603},{12.677,15.564},{13.042,15.798},{18.628,20.915},{11.282,15.760},{20.616,23.729},{27.885,30.495},{15.568,18.780},{12.585,11.743},{18.289,17.958},{14.062,17.850},{29.147,30.908},{17.934,19.591},{6.026,7.949},{6.529,7.103},{8.153,12.632},{6.496,10.969},{29.106,29.736},{13.807,17.688},{14.842,16.725},{6.834,11.130},{8.846,9.685},{9.129,10.889},{20.556,23.342},{9.309,10.853},{11.870,9.766},{8.360,5.144},{53.629,56.650},{57.501,55.162},{74.102,77.018},{87.085,89.710},{43.325,43.521},{67.681,65.708},{82.984,80.501},{64.412,62.186},{87.802,85.771},{68.030,70.658},{52.352,50.074},{45.800,45.667},{66.808,64.291},{55.781,52.780},{38.845,37.676},{67.109,63.880},{44.972,41.742},{31.063,30.906}}

thkvmix = {{69.054,69.077},{57.149,57.172},{70.922,70.933},{83.225,83.236},{73.321,73.352},{86.106,86.118},{52.559,52.577},{60.496,60.515},{57.967,57.978},{53.757,53.774},{51.590,51.604},{71.644,71.642},{46.969,46.947},{72.572,72.543},{76.285,76.280},{83.096,83.089},{60.881,60.868},{79.556,79.573},{83.352,83.349},{89.342,89.360},{55.653,55.636},{77.210,77.223},{31.333,31.338},{53.697,53.700},{52.550,52.553},{52.452,52.459},{56.757,56.764},{52.913,52.921},{56.184,56.194},{52.547,52.557},{49.852,49.860},{55.085,55.093},{50.962,50.971},{53.750,53.759},{55.071,55.079},{82.570,82.559},{82.657,82.646},{48.635,48.644},{50.045,50.055},{53.098,53.109},{52.688,52.696},{54.199,54.207},{53.972,53.981},{50.948,50.958},{52.969,52.978},{51.105,51.114},{55.670,55.677},{56.597,56.606},{52.659,52.668},{50.811,50.821},{42.113,42.138},{84.915,84.949},{70.413,70.391},{24.040,24.057},{74.669,74.702},{60.114,60.121},{53.428,53.457},{86.956,86.993},{63.245,63.263},{19.741,19.706},{67.524,67.547},{74.761,74.755},{75.208,75.239},{68.064,68.096},{86.588,86.615},{81.705,81.735},{85.988,86.013},{85.719,85.693},{87.754,87.735},{73.890,73.921},{70.556,70.584},{68.418,68.452},{89.652,89.622},{78.613,78.647},{85.247,85.282},{46.457,46.446},{31.916,31.880},{13.819,13.800},{30.609,30.610},{14.370,14.404},{8.570,8.569},{22.492,22.489},{20.972,20.967},{59.372,59.407},{6.639,6.613},{40.725,40.749},{22.460,22.435},{60.080,60.054},{25.110,25.074},{34.997,34.963},{12.842,12.806},{14.003,14.014},{10.388,10.363},{36.284,36.302},{33.725,33.689},{28.035,27.968},{69.382,69.308},{75.810,75.769},{88.784,88.805},{50.508,50.554},{26.033,26.117},{52.882,52.970},{24.925,24.935},{55.330,55.254},{35.984,36.037},{26.763,26.772},{19.140,19.192},{15.839,15.767},{25.100,25.149},{26.716,26.795},{20.693,20.767},{19.233,19.321},{21.729,21.805},{20.866,20.918},{48.973,49.026},{41.919,41.901},{15.161,15.175},{28.641,28.641},{31.893,31.893},{80.275,80.275},{74.431,74.431},{78.801,78.801},{77.739,77.739},{65.236,65.236},{89.274,89.274},{63.465,63.465},{81.845,81.845},{87.965,87.965},{88.193,88.193},{88.664,88.664},{63.853,63.853},{59.769,59.496},{78.583,78.336},{69.287,69.302},{69.644,69.560},{89.606,89.499},{51.897,51.993},{66.611,66.668},{67.684,67.815},{71.015,71.129},{79.039,79.164},{82.213,82.063},{87.733,87.595},{64.221,64.382},{69.304,69.421},{76.795,76.913},{78.318,78.446},{31.136,31.065},{65.172,65.245},{63.530,63.604},{76.337,76.407},{81.996,82.070},{79.350,79.423},{81.489,81.562},{77.190,77.262},{81.813,81.886},{81.528,81.601},{76.430,76.504},{87.700,87.769},{73.757,73.829},{66.799,66.873},{78.804,78.876},{88.330,88.404},{83.012,83.086},{80.642,80.714},{67.271,67.345},{78.162,78.236},{89.337,89.410},{79.905,79.834},{89.561,89.631},{89.312,89.241},{71.141,71.215},{81.031,81.102},{80.740,80.813},{88.318,88.389},{81.216,81.361},{84.154,84.301},{85.215,85.049},{83.392,83.539},{73.097,73.230},{76.696,76.810},{42.198,42.058},{70.546,70.476},{21.441,21.311},{20.026,19.828},{68.651,68.850},{29.236,29.439},{12.692,12.868},{27.000,27.198},{24.106,24.252},{28.879,28.811},{35.765,35.943},{64.119,64.319},{20.825,21.014},{29.124,29.220},{56.292,56.478},{27.119,27.082},{48.719,48.743},{68.895,69.080}}

filtermix = {{6.000,30.000},{30.000,150.000},{30.000,150.000},{30.000,150.000},{30.000,150.000},{30.000,150.000},{30.000,150.000},{30.000,150.000},{6.000,30.000},{6.000,30.000},{6.000,30.000},{6.000,30.000},{6.000,30.000},{6.000,30.000},{30.000,150.000},{30.000,150.000},{30.000,150.000},{30.000,150.000},{30.000,150.000},{30.000,150.000},{30.000,150.000},{30.000,150.000},{3.000,40.000},{3.000,40.000},{3.000,40.000},{200.000,400.000},{200.000,400.000},{200.000,400.000},{200.000,400.000},{200.000,400.000},{200.000,400.000},{200.000,400.000},{200.000,400.000},{200.000,400.000},{200.000,400.000},{200.000,400.000},{200.000,400.000},{200.000,400.000},{200.000,400.000},{200.000,400.000},{200.000,400.000},{200.000,400.000},{200.000,400.000},{200.000,400.000},{200.000,400.000},{200.000,400.000},{200.000,400.000},{200.000,400.000},{200.000,400.000},{200.000,400.000},{3.000,30.000},{3.000,30.000},{3.000,30.000},{10.000,100.000},{10.000,100.000},{10.000,100.000},{30.000,100.000},{30.000,100.000},{30.000,100.000},{30.000,100.000},{30.000,100.000},{30.000,100.000},{100.000,300.000},{100.000,300.000},{100.000,300.000},{100.000,300.000},{100.000,300.000},{100.000,300.000},{100.000,300.000},{100.000,300.000},{100.000,300.000},{100.000,300.000},{100.000,300.000},{100.000,300.000},{100.000,300.000},{100.000,300.000},{100.000,300.000},{100.000,300.000},{3.000,30.000},{3.000,30.000},{3.000,30.000},{10.000,30.000},{10.000,30.000},{10.000,30.000},{10.000,30.000},{10.000,30.000},{10.000,30.000},{10.000,30.000},{30.000,100.000},{30.000,100.000},{30.000,100.000},{30.000,100.000},{30.000,100.000},{30.000,100.000},{30.000,100.000},{3.000,30.000},{65.000,300.000},{65.000,300.000},{3.000,30.000},{3.000,30.000},{3.000,30.000},{3.000,30.000},{3.000,30.000},{3.000,30.000},{40.000,200.000},{40.000,200.000},{40.000,200.000},{40.000,200.000},{40.000,200.000},{40.000,200.000},{40.000,200.000},{40.000,200.000},{40.000,200.000},{40.000,200.000},{40.000,200.000},{40.000,200.000},{40.000,200.000},{7.000,20.000},{5.000,30.000},{60.000,200.000},{60.000,200.000},{60.000,200.000},{60.000,200.000},{60.000,200.000},{60.000,200.000},{120.000,200.000},{120.000,200.000},{120.000,200.000},{120.000,200.000},{120.000,200.000},{120.000,200.000},{3.000,20.000},{3.000,30.000},{30.000,200.000},{30.000,200.000},{30.000,200.000},{30.000,200.000},{30.000,200.000},{30.000,200.000},{30.000,200.000},{30.000,200.000},{30.000,200.000},{30.000,200.000},{30.000,200.000},{30.000,200.000},{30.000,200.000},{30.000,200.000},{100.000,200.000},{100.000,200.000},{100.000,200.000},{100.000,200.000},{100.000,200.000},{100.000,200.000},{100.000,200.000},{100.000,200.000},{100.000,200.000},{100.000,200.000},{100.000,200.000},{100.000,200.000},{100.000,200.000},{100.000,200.000},{100.000,200.000},{100.000,200.000},{100.000,200.000},{100.000,200.000},{100.000,200.000},{100.000,200.000},{100.000,200.000},{100.000,200.000},{100.000,200.000},{100.000,200.000},{100.000,200.000},{100.000,200.000},{100.000,200.000},{100.000,200.000},{150.000,250.000},{150.000,250.000},{150.000,250.000},{150.000,250.000},{150.000,250.000},{150.000,250.000},{250.000,300.000},{250.000,300.000},{250.000,300.000},{250.000,300.000},{250.000,300.000},{250.000,300.000},{250.000,300.000},{250.000,300.000},{250.000,300.000},{250.000,300.000},{250.000,300.000},{250.000,300.000},{250.000,300.000},{250.000,300.000},{250.000,300.000},{250.000,300.000},{250.000,300.000},{250.000,300.000}}

densmix = {{21.041,21.062},{21.041,21.062},{21.041,21.062},{21.041,21.062},{21.041,21.062},{21.041,21.062},{21.041,21.062},{21.041,21.062},{21.451,21.472},{21.451,21.472},{21.451,21.472},{21.451,21.472},{21.451,21.472},{21.451,21.472},{21.451,21.472},{21.451,21.472},{21.451,21.472},{21.451,21.472},{21.451,21.472},{21.451,21.472},{21.451,21.472},{21.451,21.472},{24.010,24.003},{24.010,24.003},{24.010,24.003},{24.010,24.003},{24.010,24.003},{24.010,24.003},{24.010,24.003},{24.010,24.003},{24.010,24.003},{24.010,24.003},{24.010,24.003},{24.010,24.003},{24.010,24.003},{24.010,24.003},{24.010,24.003},{24.010,24.003},{24.010,24.003},{24.010,24.003},{24.010,24.003},{24.010,24.003},{24.010,24.003},{24.010,24.003},{24.010,24.003},{24.010,24.003},{24.010,24.003},{24.010,24.003},{24.010,24.003},{24.010,24.003},{20.071,20.018},{20.071,20.018},{20.071,20.018},{20.071,20.018},{20.071,20.018},{20.071,20.018},{20.071,20.018},{20.071,20.018},{20.071,20.018},{20.071,20.018},{20.071,20.018},{20.071,20.018},{20.071,20.018},{20.071,20.018},{20.071,20.018},{20.071,20.018},{20.071,20.018},{20.071,20.018},{20.071,20.018},{20.071,20.018},{20.071,20.018},{20.071,20.018},{20.071,20.018},{20.071,20.018},{20.071,20.018},{20.071,20.018},{20.071,20.018},{20.071,20.018},{20.013,19.959},{20.013,19.959},{20.013,19.959},{20.013,19.959},{20.013,19.959},{20.013,19.959},{20.013,19.959},{20.013,19.959},{20.013,19.959},{20.013,19.959},{20.013,19.959},{20.013,19.959},{20.013,19.959},{20.013,19.959},{20.013,19.959},{20.013,19.959},{20.013,19.959},{24.629,24.710},{24.629,24.710},{24.629,24.710},{21.810,21.803},{21.810,21.803},{21.810,21.803},{21.810,21.803},{21.810,21.803},{21.810,21.803},{21.810,21.803},{21.810,21.803},{21.810,21.803},{21.810,21.803},{21.810,21.803},{21.810,21.803},{21.810,21.803},{21.810,21.803},{21.810,21.803},{21.810,21.803},{21.810,21.803},{21.810,21.803},{21.810,21.803},{16.029,16.029},{16.029,16.029},{16.029,16.029},{16.029,16.029},{16.029,16.029},{16.029,16.029},{16.029,16.029},{16.029,16.029},{16.029,16.029},{16.029,16.029},{16.029,16.029},{16.029,16.029},{16.029,16.029},{16.029,16.029},{16.029,16.035},{16.029,16.035},{16.029,16.035},{16.029,16.035},{16.029,16.035},{16.029,16.035},{16.029,16.035},{16.029,16.035},{16.029,16.035},{16.029,16.035},{16.029,16.035},{16.029,16.035},{16.029,16.035},{16.029,16.035},{16.029,16.035},{16.029,16.035},{31.529,31.548},{31.529,31.548},{31.529,31.548},{31.529,31.548},{31.529,31.548},{31.529,31.548},{31.529,31.548},{31.529,31.548},{31.529,31.548},{31.529,31.548},{31.529,31.548},{31.529,31.548},{31.529,31.548},{31.529,31.548},{31.529,31.548},{31.529,31.548},{31.529,31.548},{31.529,31.548},{31.529,31.548},{31.529,31.548},{31.529,31.548},{31.529,31.548},{31.529,31.548},{31.529,31.548},{31.529,31.548},{31.529,31.548},{31.529,31.548},{31.529,31.548},{16.880,16.871},{16.880,16.871},{16.880,16.871},{16.880,16.871},{16.880,16.871},{16.880,16.871},{16.880,16.871},{16.880,16.871},{16.880,16.871},{16.880,16.871},{16.880,16.871},{16.880,16.871},{16.880,16.871},{16.880,16.871},{16.880,16.871},{16.880,16.871},{16.880,16.871},{16.880,16.871},{16.880,16.871},{16.880,16.871},{16.880,16.871},{16.880,16.871},{16.880,16.871},{16.880,16.871}}

bmagmix = {{41.601,41.544},{41.601,41.544},{41.601,41.544},{41.601,41.544},{41.601,41.544},{41.601,41.544},{41.601,41.544},{41.601,41.544},{41.727,42.467},{41.727,42.467},{41.727,42.467},{41.727,42.467},{41.727,42.467},{41.727,42.467},{41.727,42.467},{41.727,42.467},{41.727,42.467},{41.727,42.467},{41.727,42.467},{41.727,42.467},{41.727,42.467},{41.727,42.467},{41.039,40.702},{41.039,40.702},{41.039,40.702},{41.039,40.702},{41.039,40.702},{41.039,40.702},{41.039,40.702},{41.039,40.702},{41.039,40.702},{41.039,40.702},{41.039,40.702},{41.039,40.702},{41.039,40.702},{41.039,40.702},{41.039,40.702},{41.039,40.702},{41.039,40.702},{41.039,40.702},{41.039,40.702},{41.039,40.702},{41.039,40.702},{41.039,40.702},{41.039,40.702},{41.039,40.702},{41.039,40.702},{41.039,40.702},{41.039,40.702},{41.039,40.702},{35.560,35.400},{35.560,35.400},{35.560,35.400},{35.560,35.400},{35.560,35.400},{35.560,35.400},{35.560,35.400},{35.560,35.400},{35.560,35.400},{35.560,35.400},{35.560,35.400},{35.560,35.400},{35.560,35.400},{35.560,35.400},{35.560,35.400},{35.560,35.400},{35.560,35.400},{35.560,35.400},{35.560,35.400},{35.560,35.400},{35.560,35.400},{35.560,35.400},{35.560,35.400},{35.560,35.400},{35.560,35.400},{35.560,35.400},{35.560,35.400},{35.560,35.400},{35.849,37.262},{35.849,37.262},{35.849,37.262},{35.849,37.262},{35.849,37.262},{35.849,37.262},{35.849,37.262},{35.849,37.262},{35.849,37.262},{35.849,37.262},{35.849,37.262},{35.849,37.262},{35.849,37.262},{35.849,37.262},{35.849,37.262},{35.849,37.262},{35.849,37.262},{36.869,37.189},{36.869,37.189},{36.869,37.189},{23.265,20.320},{23.265,20.320},{23.265,20.320},{23.265,20.320},{23.265,20.320},{23.265,20.320},{23.265,20.320},{23.265,20.320},{23.265,20.320},{23.265,20.320},{23.265,20.320},{23.265,20.320},{23.265,20.320},{23.265,20.320},{23.265,20.320},{23.265,20.320},{23.265,20.320},{23.265,20.320},{23.265,20.320},{16.496,14.997},{16.496,14.997},{16.496,14.997},{16.496,14.997},{16.496,14.997},{16.496,14.997},{16.496,14.997},{16.496,14.997},{16.496,14.997},{16.496,14.997},{16.496,14.997},{16.496,14.997},{16.496,14.997},{16.496,14.997},{16.103,14.236},{16.103,14.236},{16.103,14.236},{16.103,14.236},{16.103,14.236},{16.103,14.236},{16.103,14.236},{16.103,14.236},{16.103,14.236},{16.103,14.236},{16.103,14.236},{16.103,14.236},{16.103,14.236},{16.103,14.236},{16.103,14.236},{16.103,14.236},{24.080,23.393},{24.080,23.393},{24.080,23.393},{24.080,23.393},{24.080,23.393},{24.080,23.393},{24.080,23.393},{24.080,23.393},{24.080,23.393},{24.080,23.393},{24.080,23.393},{24.080,23.393},{24.080,23.393},{24.080,23.393},{24.080,23.393},{24.080,23.393},{24.080,23.393},{24.080,23.393},{24.080,23.393},{24.080,23.393},{24.080,23.393},{24.080,23.393},{24.080,23.393},{24.080,23.393},{24.080,23.393},{24.080,23.393},{24.080,23.393},{24.080,23.393},{23.549,23.502},{23.549,23.502},{23.549,23.502},{23.549,23.502},{23.549,23.502},{23.549,23.502},{23.549,23.502},{23.549,23.502},{23.549,23.502},{23.549,23.502},{23.549,23.502},{23.549,23.502},{23.549,23.502},{23.549,23.502},{23.549,23.502},{23.549,23.502},{23.549,23.502},{23.549,23.502},{23.549,23.502},{23.549,23.502},{23.549,23.502},{23.549,23.502},{23.549,23.502},{23.549,23.502}}

vmagmix = {{690.019,689.897},{690.019,689.897},{690.019,689.897},{690.019,689.897},{690.019,689.897},{690.019,689.897},{690.019,689.897},{690.019,689.897},{687.755,687.648},{687.755,687.648},{687.755,687.648},{687.755,687.648},{687.755,687.648},{687.755,687.648},{687.755,687.648},{687.755,687.648},{687.755,687.648},{687.755,687.648},{687.755,687.648},{687.755,687.648},{687.755,687.648},{687.755,687.648},{657.238,656.924},{657.238,656.924},{657.238,656.924},{657.238,656.924},{657.238,656.924},{657.238,656.924},{657.238,656.924},{657.238,656.924},{657.238,656.924},{657.238,656.924},{657.238,656.924},{657.238,656.924},{657.238,656.924},{657.238,656.924},{657.238,656.924},{657.238,656.924},{657.238,656.924},{657.238,656.924},{657.238,656.924},{657.238,656.924},{657.238,656.924},{657.238,656.924},{657.238,656.924},{657.238,656.924},{657.238,656.924},{657.238,656.924},{657.238,656.924},{657.238,656.924},{677.803,677.395},{677.803,677.395},{677.803,677.395},{677.803,677.395},{677.803,677.395},{677.803,677.395},{677.803,677.395},{677.803,677.395},{677.803,677.395},{677.803,677.395},{677.803,677.395},{677.803,677.395},{677.803,677.395},{677.803,677.395},{677.803,677.395},{677.803,677.395},{677.803,677.395},{677.803,677.395},{677.803,677.395},{677.803,677.395},{677.803,677.395},{677.803,677.395},{677.803,677.395},{677.803,677.395},{677.803,677.395},{677.803,677.395},{677.803,677.395},{677.803,677.395},{677.355,676.947},{677.355,676.947},{677.355,676.947},{677.355,676.947},{677.355,676.947},{677.355,676.947},{677.355,676.947},{677.355,676.947},{677.355,676.947},{677.355,676.947},{677.355,676.947},{677.355,676.947},{677.355,676.947},{677.355,676.947},{677.355,676.947},{677.355,676.947},{677.355,676.947},{685.269,686.281},{685.269,686.281},{685.269,686.281},{722.915,723.310},{722.915,723.310},{722.915,723.310},{722.915,723.310},{722.915,723.310},{722.915,723.310},{722.915,723.310},{722.915,723.310},{722.915,723.310},{722.915,723.310},{722.915,723.310},{722.915,723.310},{722.915,723.310},{722.915,723.310},{722.915,723.310},{722.915,723.310},{722.915,723.310},{722.915,723.310},{722.915,723.310},{585.860,585.860},{585.860,585.860},{585.860,585.860},{585.860,585.860},{585.860,585.860},{585.860,585.860},{585.860,585.860},{585.860,585.860},{585.860,585.860},{585.860,585.860},{585.860,585.860},{585.860,585.860},{585.860,585.860},{585.860,585.860},{585.624,585.284},{585.624,585.284},{585.624,585.284},{585.624,585.284},{585.624,585.284},{585.624,585.284},{585.624,585.284},{585.624,585.284},{585.624,585.284},{585.624,585.284},{585.624,585.284},{585.624,585.284},{585.624,585.284},{585.624,585.284},{585.624,585.284},{585.624,585.284},{573.159,571.160},{573.159,571.160},{573.159,571.160},{573.159,571.160},{573.159,571.160},{573.159,571.160},{573.159,571.160},{573.159,571.160},{573.159,571.160},{573.159,571.160},{573.159,571.160},{573.159,571.160},{573.159,571.160},{573.159,571.160},{573.159,571.160},{573.159,571.160},{573.159,571.160},{573.159,571.160},{573.159,571.160},{573.159,571.160},{573.159,571.160},{573.159,571.160},{573.159,571.160},{573.159,571.160},{573.159,571.160},{573.159,571.160},{573.159,571.160},{573.159,571.160},{638.656,639.490},{638.656,639.490},{638.656,639.490},{638.656,639.490},{638.656,639.490},{638.656,639.490},{638.656,639.490},{638.656,639.490},{638.656,639.490},{638.656,639.490},{638.656,639.490},{638.656,639.490},{638.656,639.490},{638.656,639.490},{638.656,639.490},{638.656,639.490},{638.656,639.490},{638.656,639.490},{638.656,639.490},{638.656,639.490},{638.656,639.490},{638.656,639.490},{638.656,639.490},{638.656,639.490}}

rhoemix = {{0.576,0.577},{0.576,0.577},{0.576,0.577},{0.576,0.577},{0.576,0.577},{0.576,0.577},{0.576,0.577},{0.576,0.577},{0.573,0.563},{0.573,0.563},{0.573,0.563},{0.573,0.563},{0.573,0.563},{0.573,0.563},{0.573,0.563},{0.573,0.563},{0.573,0.563},{0.573,0.563},{0.573,0.563},{0.573,0.563},{0.573,0.563},{0.573,0.563},{0.583,0.588},{0.583,0.588},{0.583,0.588},{0.583,0.588},{0.583,0.588},{0.583,0.588},{0.583,0.588},{0.583,0.588},{0.583,0.588},{0.583,0.588},{0.583,0.588},{0.583,0.588},{0.583,0.588},{0.583,0.588},{0.583,0.588},{0.583,0.588},{0.583,0.588},{0.583,0.588},{0.583,0.588},{0.583,0.588},{0.583,0.588},{0.583,0.588},{0.583,0.588},{0.583,0.588},{0.583,0.588},{0.583,0.588},{0.583,0.588},{0.583,0.588},{0.640,0.642},{0.640,0.642},{0.640,0.642},{0.640,0.642},{0.640,0.642},{0.640,0.642},{0.640,0.642},{0.640,0.642},{0.640,0.642},{0.640,0.642},{0.640,0.642},{0.640,0.642},{0.640,0.642},{0.640,0.642},{0.640,0.642},{0.640,0.642},{0.640,0.642},{0.640,0.642},{0.640,0.642},{0.640,0.642},{0.640,0.642},{0.640,0.642},{0.640,0.642},{0.640,0.642},{0.640,0.642},{0.640,0.642},{0.640,0.642},{0.640,0.642},{0.634,0.610},{0.634,0.610},{0.634,0.610},{0.634,0.610},{0.634,0.610},{0.634,0.610},{0.634,0.610},{0.634,0.610},{0.634,0.610},{0.634,0.610},{0.634,0.610},{0.634,0.610},{0.634,0.610},{0.634,0.610},{0.634,0.610},{0.634,0.610},{0.634,0.610},{0.641,0.636},{0.641,0.636},{0.641,0.636},{1.102,1.262},{1.102,1.262},{1.102,1.262},{1.102,1.262},{1.102,1.262},{1.102,1.262},{1.102,1.262},{1.102,1.262},{1.102,1.262},{1.102,1.262},{1.102,1.262},{1.102,1.262},{1.102,1.262},{1.102,1.262},{1.102,1.262},{1.102,1.262},{1.102,1.262},{1.102,1.262},{1.102,1.262},{1.573,1.689},{1.573,1.689},{1.573,1.689},{1.573,1.689},{1.573,1.689},{1.573,1.689},{1.573,1.689},{1.573,1.689},{1.573,1.689},{1.573,1.689},{1.573,1.689},{1.573,1.689},{1.573,1.689},{1.573,1.689},{1.526,1.702},{1.526,1.702},{1.526,1.702},{1.526,1.702},{1.526,1.702},{1.526,1.702},{1.526,1.702},{1.526,1.702},{1.526,1.702},{1.526,1.702},{1.526,1.702},{1.526,1.702},{1.526,1.702},{1.526,1.702},{1.526,1.702},{1.526,1.702},{0.826,0.849},{0.826,0.849},{0.826,0.849},{0.826,0.849},{0.826,0.849},{0.826,0.849},{0.826,0.849},{0.826,0.849},{0.826,0.849},{0.826,0.849},{0.826,0.849},{0.826,0.849},{0.826,0.849},{0.826,0.849},{0.826,0.849},{0.826,0.849},{0.826,0.849},{0.826,0.849},{0.826,0.849},{0.826,0.849},{0.826,0.849},{0.826,0.849},{0.826,0.849},{0.826,0.849},{0.826,0.849},{0.826,0.849},{0.826,0.849},{0.826,0.849},{0.787,0.788},{0.787,0.788},{0.787,0.788},{0.787,0.788},{0.787,0.788},{0.787,0.788},{0.787,0.788},{0.787,0.788},{0.787,0.788},{0.787,0.788},{0.787,0.788},{0.787,0.788},{0.787,0.788},{0.787,0.788},{0.787,0.788},{0.787,0.788},{0.787,0.788},{0.787,0.788},{0.787,0.788},{0.787,0.788},{0.787,0.788},{0.787,0.788},{0.787,0.788},{0.787,0.788}}

;-----------------------------------------------------------------------------------------
; => print out for mathematica [Low]
;-----------------------------------------------------------------------------------------
; => use the SC frame filter values to separate high from low
test_high  = (freql[good_mix] GT wlh[good_mix]/(2d0*!DPI)) AND $
             (freqh[good_mix] GT 40d0)
good_high  = WHERE(test_high,gdhg,COMPLEMENT=good_low,NCOMPLEMENT=gdlw)
PRINT,';  ',  gdhg, gdlw
;           110          38
good_mixlw = good_mix[good_low]
good_mixhg = good_mix[good_high]

;prefx = 'thkbmxl = {{'
;xdat  = thkbs < (18d1 - thkbs)
;ydat  = thkbe < (18d1 - thkbe)
;prefx = 'thkvmxl = {{'
;xdat  = thkvs < (18d1 - thkvs)
;ydat  = thkve < (18d1 - thkve)
;prefx = 'filtermxl = {{'
;xdat  = freql
;ydat  = freqh
;prefx = 'densmxl = {{'
;xdat  = dens_s
;ydat  = dens_e
;prefx = 'bmagmxl = {{'
;xdat  = bmag_s
;ydat  = bmag_e
prefx = 'vmagmxl = {{'
xdat  = vmag_s
ydat  = vmag_e

prefx = 'rhoemxl = {{'
xdat  = rhoe_s
ydat  = rhoe_e

midss = '},{'
ff    = '(f10.3)'
; => turn data into strings
gd    = N_ELEMENTS(good_mixlw)
gxstr = STRTRIM(STRING(FORMAT=ff,xdat[good_mixlw]),2L)
gystr = STRTRIM(STRING(FORMAT=ff,ydat[good_mixlw]),2L)


temp0 = prefx[0]
FOR j=0L, 10L DO BEGIN                               $
  temp0 = temp0[0]+gxstr[j]+','+gystr[j]+midss[0]

PRINT,temp0

temp0 = '{'
FOR j=11L, 21L DO BEGIN                               $
  temp0 = temp0[0]+gxstr[j]+','+gystr[j]+midss[0]

PRINT,temp0

temp0 = '{'
FOR j=22L, gd - 1L DO BEGIN                               $
  temp0 = temp0[0]+gxstr[j]+','+gystr[j]+midss[0]

PRINT,temp0

thkbmxl = {{18.039,18.799},{46.816,46.604},{46.151,47.965},{52.123,53.741},{53.017,54.887},{29.006,31.543},{53.331,57.355},{39.036,34.877},{85.653,80.583},{17.185,21.986},{18.330,23.198},
           {67.332,65.048},{28.087,36.789},{14.182,2.554},{86.646,83.276},{36.846,43.096},{62.684,53.300},{49.024,49.726},{84.950,83.567},{65.975,64.333},{53.724,53.205},{54.458,53.661},
           {84.197,79.916},{74.731,71.589},{66.515,68.460},{51.255,48.442},{18.171,12.241},{88.150,86.677},{80.461,65.336},{80.738,88.250},{87.368,89.518},{59.844,61.671},{73.527,66.183},
           {31.449,18.509},{55.725,58.086},{55.248,57.610},{57.407,61.711},{40.226,36.513} }

thkvmxl = {{88.226,88.208},{69.054,69.077},{57.967,57.978},{53.757,53.774},{51.590,51.604},{71.644,71.642},{46.969,46.947},{72.572,72.543},{31.333,31.338},{53.697,53.700},{52.550,52.553},
           {42.113,42.138},{84.915,84.949},{70.413,70.391},{24.040,24.057},{74.669,74.702},{60.114,60.121},{30.609,30.610},{14.370,14.404},{8.570,8.569},{22.492,22.489},{20.972,20.967},
           {59.372,59.407},{6.639,6.613},{40.725,40.749},{22.460,22.435},{60.080,60.054},{28.035,27.968},{88.784,88.805},{50.508,50.554},{26.033,26.117},{52.882,52.970},{24.925,24.935},
           {55.330,55.254},{28.641,28.641},{31.893,31.893},{59.769,59.496},{78.583,78.336} }

filtermxl = {{6.000,30.000},{6.000,30.000},{6.000,30.000},{6.000,30.000},{6.000,30.000},{6.000,30.000},{6.000,30.000},{6.000,30.000},{3.000,40.000},{3.000,40.000},{3.000,40.000},
             {3.000,30.000},{3.000,30.000},{3.000,30.000},{10.000,100.000},{10.000,100.000},{10.000,100.000},{3.000,30.000},{3.000,30.000},{3.000,30.000},{10.000,30.000},{10.000,30.000},
             {10.000,30.000},{10.000,30.000},{10.000,30.000},{10.000,30.000},{10.000,30.000},{3.000,30.000},{3.000,30.000},{3.000,30.000},{3.000,30.000},{3.000,30.000},{3.000,30.000},
             {3.000,30.000},{7.000,20.000},{5.000,30.000},{3.000,20.000},{3.000,30.000} }

densmxl = {{21.041,21.062},{21.041,21.062},{21.451,21.472},{21.451,21.472},{21.451,21.472},{21.451,21.472},{21.451,21.472},{21.451,21.472},{24.010,24.003},{24.010,24.003},{24.010,24.003},
           {20.071,20.018},{20.071,20.018},{20.071,20.018},{20.071,20.018},{20.071,20.018},{20.071,20.018},{20.013,19.959},{20.013,19.959},{20.013,19.959},{20.013,19.959},{20.013,19.959},
           {20.013,19.959},{20.013,19.959},{20.013,19.959},{20.013,19.959},{20.013,19.959},{24.629,24.710},{21.810,21.803},{21.810,21.803},{21.810,21.803},{21.810,21.803},{21.810,21.803},
           {21.810,21.803},{16.029,16.029},{16.029,16.029},{16.029,16.035},{16.029,16.035} }

bmagmxl = {{41.601,41.544},{41.601,41.544},{41.727,42.467},{41.727,42.467},{41.727,42.467},{41.727,42.467},{41.727,42.467},{41.727,42.467},{41.039,40.702},{41.039,40.702},{41.039,40.702},
           {35.560,35.400},{35.560,35.400},{35.560,35.400},{35.560,35.400},{35.560,35.400},{35.560,35.400},{35.849,37.262},{35.849,37.262},{35.849,37.262},{35.849,37.262},{35.849,37.262},
           {35.849,37.262},{35.849,37.262},{35.849,37.262},{35.849,37.262},{35.849,37.262},{36.869,37.189},{23.265,20.320},{23.265,20.320},{23.265,20.320},{23.265,20.320},{23.265,20.320},
           {23.265,20.320},{16.496,14.997},{16.496,14.997},{16.103,14.236},{16.103,14.236} }

vmagmxl = {{690.019,689.897},{690.019,689.897},{687.755,687.648},{687.755,687.648},{687.755,687.648},{687.755,687.648},{687.755,687.648},{687.755,687.648},{657.238,656.924},{657.238,656.924},{657.238,656.924},
           {677.803,677.395},{677.803,677.395},{677.803,677.395},{677.803,677.395},{677.803,677.395},{677.803,677.395},{677.355,676.947},{677.355,676.947},{677.355,676.947},{677.355,676.947},{677.355,676.947},
           {677.355,676.947},{677.355,676.947},{677.355,676.947},{677.355,676.947},{677.355,676.947},{685.269,686.281},{722.915,723.310},{722.915,723.310},{722.915,723.310},{722.915,723.310},{722.915,723.310},
           {722.915,723.310},{585.860,585.860},{585.860,585.860},{585.624,585.284},{585.624,585.284} }

rhoemxl = {{0.576,0.577},{0.576,0.577},{0.573,0.563},{0.573,0.563},{0.573,0.563},{0.573,0.563},{0.573,0.563},{0.573,0.563},{0.583,0.588},{0.583,0.588},{0.583,0.588},
           {0.640,0.642},{0.640,0.642},{0.640,0.642},{0.640,0.642},{0.640,0.642},{0.640,0.642},{0.634,0.610},{0.634,0.610},{0.634,0.610},{0.634,0.610},{0.634,0.610},
           {0.634,0.610},{0.634,0.610},{0.634,0.610},{0.634,0.610},{0.634,0.610},{0.641,0.636},{1.102,1.262},{1.102,1.262},{1.102,1.262},{1.102,1.262},{1.102,1.262},
           {1.102,1.262},{1.573,1.689},{1.573,1.689},{1.526,1.702},{1.526,1.702} }

;-----------------------------------------------------------------------------------------
; => print out for mathematica [High]
;-----------------------------------------------------------------------------------------
; => use the SC frame filter values to separate high from low
test_high  = (freql[good_mix] GT wlh[good_mix]/(2d0*!DPI)) AND $
             (freqh[good_mix] GT 40d0)
good_high  = WHERE(test_high,gdhg,COMPLEMENT=good_low,NCOMPLEMENT=gdlw)
PRINT,';  ',  gdhg, gdlw
;           110          38
good_mixlw = good_mix[good_low]
good_mixhg = good_mix[good_high]

;prefx = 'thkbmxh = {{'
;xdat  = thkbs < (18d1 - thkbs)
;ydat  = thkbe < (18d1 - thkbe)
;prefx = 'thkvmxh = {{'
;xdat  = thkvs < (18d1 - thkvs)
;ydat  = thkve < (18d1 - thkve)
;prefx = 'filtermxh = {{'
;xdat  = freql
;ydat  = freqh
;prefx = 'densmxh = {{'
;xdat  = dens_s
;ydat  = dens_e
;prefx = 'bmagmxh = {{'
;xdat  = bmag_s
;ydat  = bmag_e
prefx = 'vmagmxh = {{'
xdat  = vmag_s
ydat  = vmag_e

prefx = 'rhoemxh = {{'
xdat  = rhoe_s
ydat  = rhoe_e

midss = '},{'
ff    = '(f10.3)'
; => turn data into strings
gd    = N_ELEMENTS(good_mixhg)
gxstr = STRTRIM(STRING(FORMAT=ff,xdat[good_mixhg]),2L)
gystr = STRTRIM(STRING(FORMAT=ff,ydat[good_mixhg]),2L)


temp0 = prefx[0]
FOR j=0L, 10L DO BEGIN                               $
  temp0 = temp0[0]+gxstr[j]+','+gystr[j]+midss[0]

PRINT,temp0

temp0 = '{'
FOR j=11L, 21L DO BEGIN                               $
  temp0 = temp0[0]+gxstr[j]+','+gystr[j]+midss[0]

PRINT,temp0

temp0 = '{'
FOR j=22L, gd - 1L DO BEGIN                               $
  temp0 = temp0[0]+gxstr[j]+','+gystr[j]+midss[0]

PRINT,temp0

thkbmxh = {{22.162,22.215},{5.032,4.859},{7.532,8.136},{20.765,21.484},{10.437,11.024},{24.486,24.321},{17.703,17.731},{23.797,26.586},{16.921,19.704},{38.526,42.256},{6.177,9.735},
           {14.376,12.251},{30.035,28.159},{43.972,47.835},{3.796,4.971},{27.813,32.509},{24.678,29.137},{29.912,34.473},{36.723,40.770},{37.886,42.201},{32.739,37.419},{35.420,39.597},
           {38.402,42.821},{38.767,42.968},{32.130,36.414},{60.163,60.178},{60.018,60.036},{40.959,45.469},{39.327,43.785},{45.693,49.814},{35.818,40.181},{29.895,34.346},{34.303,38.610},
           {49.684,53.901},{34.288,38.678},{36.795,41.249},{25.084,29.633},{38.078,42.057},{38.869,43.151},{43.369,47.686},{55.405,55.858},{40.984,53.268},{74.223,61.914},{59.733,65.942},
           {43.218,39.548},{70.275,57.057},{34.328,38.479},{41.847,45.782},{22.406,23.546},{27.388,31.405},{24.232,22.001},{15.724,15.293},{85.862,71.713},{35.280,38.519},{38.279,38.736},
           {45.257,52.059},{18.885,24.948},{34.699,42.598},{32.111,42.478},{37.572,30.999},{46.572,54.518},{58.334,59.216},{58.833,54.060},{69.520,63.459},{66.870,63.187},{86.694,83.832},
           {62.948,60.450},{59.912,62.362},{62.967,57.083},{31.937,34.970},{22.905,23.791},{87.978,83.880},{73.578,65.758},{80.108,75.211},{55.229,52.196},{83.452,77.178},{88.029,87.772},
           {84.604,86.563},{86.540,85.600},{85.813,87.732},{81.341,76.093},{78.561,88.835},{63.985,74.550},{71.234,66.453},{33.129,31.013},{39.703,38.082},{34.716,32.953},{35.568,33.710},
           {47.971,46.012},{23.441,21.987},{54.682,52.334},{15.604,14.144},{25.719,24.077},{25.166,23.378},{22.187,20.015},{49.349,47.378},{13.704,17.816},{41.317,40.269},{21.188,20.014},
           {17.400,19.735},{7.973,12.276},{3.729,3.221},{1.992,3.141},{10.159,8.308},{29.399,27.061},{23.573,21.415},{9.404,7.815},{1.195,3.185},{7.754,6.416},{9.604,7.518} }

thkvmxh = {{57.149,57.172},{70.922,70.933},{83.225,83.236},{73.321,73.352},{86.106,86.118},{52.559,52.577},{60.496,60.515},{76.285,76.280},{83.096,83.089},{60.881,60.868},{79.556,79.573},
           {83.352,83.349},{89.342,89.360},{55.653,55.636},{77.210,77.223},{52.452,52.459},{56.757,56.764},{52.913,52.921},{56.184,56.194},{52.547,52.557},{49.852,49.860},{55.085,55.093},
           {50.962,50.971},{53.750,53.759},{55.071,55.079},{82.570,82.559},{82.657,82.646},{48.635,48.644},{50.045,50.055},{53.098,53.109},{52.688,52.696},{54.199,54.207},{53.972,53.981},
           {50.948,50.958},{52.969,52.978},{51.105,51.114},{55.670,55.677},{56.597,56.606},{52.659,52.668},{50.811,50.821},{53.428,53.457},{86.956,86.993},{63.245,63.263},{19.741,19.706},
           {67.524,67.547},{74.761,74.755},{75.208,75.239},{68.064,68.096},{86.588,86.615},{81.705,81.735},{85.988,86.013},{85.719,85.693},{87.754,87.735},{73.890,73.921},{70.556,70.584},
           {68.418,68.452},{89.652,89.622},{78.613,78.647},{85.247,85.282},{46.457,46.446},{31.916,31.880},{13.819,13.800},{25.110,25.074},{34.997,34.963},{12.842,12.806},{14.003,14.014},
           {10.388,10.363},{36.284,36.302},{33.725,33.689},{69.382,69.308},{75.810,75.769},{35.984,36.037},{26.763,26.772},{19.140,19.192},{15.839,15.767},{25.100,25.149},{26.716,26.795},
           {20.693,20.767},{19.233,19.321},{21.729,21.805},{20.866,20.918},{48.973,49.026},{41.919,41.901},{15.161,15.175},{80.275,80.275},{74.431,74.431},{78.801,78.801},{77.739,77.739},
           {65.236,65.236},{89.274,89.274},{63.465,63.465},{81.845,81.845},{87.965,87.965},{88.193,88.193},{88.664,88.664},{63.853,63.853},{69.287,69.302},{69.644,69.560},{89.606,89.499},
           {51.897,51.993},{66.611,66.668},{67.684,67.815},{71.015,71.129},{79.039,79.164},{82.213,82.063},{87.733,87.595},{64.221,64.382},{69.304,69.421},{76.795,76.913},{78.318,78.446} }

filtermxh = {{30.000,150.000},{30.000,150.000},{30.000,150.000},{30.000,150.000},{30.000,150.000},{30.000,150.000},{30.000,150.000},{30.000,150.000},{30.000,150.000},{30.000,150.000},{30.000,150.000},
             {30.000,150.000},{30.000,150.000},{30.000,150.000},{30.000,150.000},{200.000,400.000},{200.000,400.000},{200.000,400.000},{200.000,400.000},{200.000,400.000},{200.000,400.000},{200.000,400.000},
             {200.000,400.000},{200.000,400.000},{200.000,400.000},{200.000,400.000},{200.000,400.000},{200.000,400.000},{200.000,400.000},{200.000,400.000},{200.000,400.000},{200.000,400.000},
             {200.000,400.000},{200.000,400.000},{200.000,400.000},{200.000,400.000},{200.000,400.000},{200.000,400.000},{200.000,400.000},{200.000,400.000},{30.000,100.000},{30.000,100.000},{30.000,100.000},
             {30.000,100.000},{30.000,100.000},{30.000,100.000},{100.000,300.000},{100.000,300.000},{100.000,300.000},{100.000,300.000},{100.000,300.000},{100.000,300.000},{100.000,300.000},{100.000,300.000},
             {100.000,300.000},{100.000,300.000},{100.000,300.000},{100.000,300.000},{100.000,300.000},{100.000,300.000},{100.000,300.000},{100.000,300.000},{30.000,100.000},{30.000,100.000},{30.000,100.000},
             {30.000,100.000},{30.000,100.000},{30.000,100.000},{30.000,100.000},{65.000,300.000},{65.000,300.000},{40.000,200.000},{40.000,200.000},{40.000,200.000},{40.000,200.000},{40.000,200.000},
             {40.000,200.000},{40.000,200.000},{40.000,200.000},{40.000,200.000},{40.000,200.000},{40.000,200.000},{40.000,200.000},{40.000,200.000},{60.000,200.000},{60.000,200.000},{60.000,200.000},
             {60.000,200.000},{60.000,200.000},{60.000,200.000},{120.000,200.000},{120.000,200.000},{120.000,200.000},{120.000,200.000},{120.000,200.000},{120.000,200.000},{30.000,200.000},{30.000,200.000},
             {30.000,200.000},{30.000,200.000},{30.000,200.000},{30.000,200.000},{30.000,200.000},{30.000,200.000},{30.000,200.000},{30.000,200.000},{30.000,200.000},{30.000,200.000},{30.000,200.000},
             {30.000,200.000} }

densmxh = {{21.041,21.062},{21.041,21.062},{21.041,21.062},{21.041,21.062},{21.041,21.062},{21.041,21.062},{21.041,21.062},{21.451,21.472},{21.451,21.472},{21.451,21.472},{21.451,21.472},
           {21.451,21.472},{21.451,21.472},{21.451,21.472},{21.451,21.472},{24.010,24.003},{24.010,24.003},{24.010,24.003},{24.010,24.003},{24.010,24.003},{24.010,24.003},{24.010,24.003},
           {24.010,24.003},{24.010,24.003},{24.010,24.003},{24.010,24.003},{24.010,24.003},{24.010,24.003},{24.010,24.003},{24.010,24.003},{24.010,24.003},{24.010,24.003},{24.010,24.003},
           {24.010,24.003},{24.010,24.003},{24.010,24.003},{24.010,24.003},{24.010,24.003},{24.010,24.003},{24.010,24.003},{20.071,20.018},{20.071,20.018},{20.071,20.018},{20.071,20.018},
           {20.071,20.018},{20.071,20.018},{20.071,20.018},{20.071,20.018},{20.071,20.018},{20.071,20.018},{20.071,20.018},{20.071,20.018},{20.071,20.018},{20.071,20.018},{20.071,20.018},
           {20.071,20.018},{20.071,20.018},{20.071,20.018},{20.071,20.018},{20.071,20.018},{20.071,20.018},{20.071,20.018},{20.013,19.959},{20.013,19.959},{20.013,19.959},{20.013,19.959},
           {20.013,19.959},{20.013,19.959},{20.013,19.959},{24.629,24.710},{24.629,24.710},{21.810,21.803},{21.810,21.803},{21.810,21.803},{21.810,21.803},{21.810,21.803},{21.810,21.803},
           {21.810,21.803},{21.810,21.803},{21.810,21.803},{21.810,21.803},{21.810,21.803},{21.810,21.803},{21.810,21.803},{16.029,16.029},{16.029,16.029},{16.029,16.029},{16.029,16.029},
           {16.029,16.029},{16.029,16.029},{16.029,16.029},{16.029,16.029},{16.029,16.029},{16.029,16.029},{16.029,16.029},{16.029,16.029},{16.029,16.035},{16.029,16.035},{16.029,16.035},
           {16.029,16.035},{16.029,16.035},{16.029,16.035},{16.029,16.035},{16.029,16.035},{16.029,16.035},{16.029,16.035},{16.029,16.035},{16.029,16.035},{16.029,16.035},{16.029,16.035} }

bmagmxh = {{41.601,41.544},{41.601,41.544},{41.601,41.544},{41.601,41.544},{41.601,41.544},{41.601,41.544},{41.601,41.544},{41.727,42.467},{41.727,42.467},{41.727,42.467},{41.727,42.467},
           {41.727,42.467},{41.727,42.467},{41.727,42.467},{41.727,42.467},{41.039,40.702},{41.039,40.702},{41.039,40.702},{41.039,40.702},{41.039,40.702},{41.039,40.702},{41.039,40.702},
           {41.039,40.702},{41.039,40.702},{41.039,40.702},{41.039,40.702},{41.039,40.702},{41.039,40.702},{41.039,40.702},{41.039,40.702},{41.039,40.702},{41.039,40.702},{41.039,40.702},
           {41.039,40.702},{41.039,40.702},{41.039,40.702},{41.039,40.702},{41.039,40.702},{41.039,40.702},{41.039,40.702},{35.560,35.400},{35.560,35.400},{35.560,35.400},{35.560,35.400},
           {35.560,35.400},{35.560,35.400},{35.560,35.400},{35.560,35.400},{35.560,35.400},{35.560,35.400},{35.560,35.400},{35.560,35.400},{35.560,35.400},{35.560,35.400},{35.560,35.400},
           {35.560,35.400},{35.560,35.400},{35.560,35.400},{35.560,35.400},{35.560,35.400},{35.560,35.400},{35.560,35.400},{35.849,37.262},{35.849,37.262},{35.849,37.262},{35.849,37.262},
           {35.849,37.262},{35.849,37.262},{35.849,37.262},{36.869,37.189},{36.869,37.189},{23.265,20.320},{23.265,20.320},{23.265,20.320},{23.265,20.320},{23.265,20.320},{23.265,20.320},
           {23.265,20.320},{23.265,20.320},{23.265,20.320},{23.265,20.320},{23.265,20.320},{23.265,20.320},{23.265,20.320},{16.496,14.997},{16.496,14.997},{16.496,14.997},{16.496,14.997},
           {16.496,14.997},{16.496,14.997},{16.496,14.997},{16.496,14.997},{16.496,14.997},{16.496,14.997},{16.496,14.997},{16.496,14.997},{16.103,14.236},{16.103,14.236},{16.103,14.236},
           {16.103,14.236},{16.103,14.236},{16.103,14.236},{16.103,14.236},{16.103,14.236},{16.103,14.236},{16.103,14.236},{16.103,14.236},{16.103,14.236},{16.103,14.236},{16.103,14.236} }

vmagmxh = {{690.019,689.897},{690.019,689.897},{690.019,689.897},{690.019,689.897},{690.019,689.897},{690.019,689.897},{690.019,689.897},{687.755,687.648},{687.755,687.648},{687.755,687.648},{687.755,687.648},
           {687.755,687.648},{687.755,687.648},{687.755,687.648},{687.755,687.648},{657.238,656.924},{657.238,656.924},{657.238,656.924},{657.238,656.924},{657.238,656.924},{657.238,656.924},{657.238,656.924},
           {657.238,656.924},{657.238,656.924},{657.238,656.924},{657.238,656.924},{657.238,656.924},{657.238,656.924},{657.238,656.924},{657.238,656.924},{657.238,656.924},{657.238,656.924},{657.238,656.924},
           {657.238,656.924},{657.238,656.924},{657.238,656.924},{657.238,656.924},{657.238,656.924},{657.238,656.924},{657.238,656.924},{677.803,677.395},{677.803,677.395},{677.803,677.395},{677.803,677.395},
           {677.803,677.395},{677.803,677.395},{677.803,677.395},{677.803,677.395},{677.803,677.395},{677.803,677.395},{677.803,677.395},{677.803,677.395},{677.803,677.395},{677.803,677.395},{677.803,677.395},
           {677.803,677.395},{677.803,677.395},{677.803,677.395},{677.803,677.395},{677.803,677.395},{677.803,677.395},{677.803,677.395},{677.355,676.947},{677.355,676.947},{677.355,676.947},{677.355,676.947},
           {677.355,676.947},{677.355,676.947},{677.355,676.947},{685.269,686.281},{685.269,686.281},{722.915,723.310},{722.915,723.310},{722.915,723.310},{722.915,723.310},{722.915,723.310},{722.915,723.310},
           {722.915,723.310},{722.915,723.310},{722.915,723.310},{722.915,723.310},{722.915,723.310},{722.915,723.310},{722.915,723.310},{585.860,585.860},{585.860,585.860},{585.860,585.860},{585.860,585.860},
           {585.860,585.860},{585.860,585.860},{585.860,585.860},{585.860,585.860},{585.860,585.860},{585.860,585.860},{585.860,585.860},{585.860,585.860},{585.624,585.284},{585.624,585.284},{585.624,585.284},
           {585.624,585.284},{585.624,585.284},{585.624,585.284},{585.624,585.284},{585.624,585.284},{585.624,585.284},{585.624,585.284},{585.624,585.284},{585.624,585.284},{585.624,585.284},{585.624,585.284} }

rhoemxh = {{0.576,0.577},{0.576,0.577},{0.576,0.577},{0.576,0.577},{0.576,0.577},{0.576,0.577},{0.576,0.577},{0.573,0.563},{0.573,0.563},{0.573,0.563},{0.573,0.563},
           {0.573,0.563},{0.573,0.563},{0.573,0.563},{0.573,0.563},{0.583,0.588},{0.583,0.588},{0.583,0.588},{0.583,0.588},{0.583,0.588},{0.583,0.588},{0.583,0.588},
           {0.583,0.588},{0.583,0.588},{0.583,0.588},{0.583,0.588},{0.583,0.588},{0.583,0.588},{0.583,0.588},{0.583,0.588},{0.583,0.588},{0.583,0.588},{0.583,0.588},
           {0.583,0.588},{0.583,0.588},{0.583,0.588},{0.583,0.588},{0.583,0.588},{0.583,0.588},{0.583,0.588},{0.640,0.642},{0.640,0.642},{0.640,0.642},{0.640,0.642},
           {0.640,0.642},{0.640,0.642},{0.640,0.642},{0.640,0.642},{0.640,0.642},{0.640,0.642},{0.640,0.642},{0.640,0.642},{0.640,0.642},{0.640,0.642},{0.640,0.642},
           {0.640,0.642},{0.640,0.642},{0.640,0.642},{0.640,0.642},{0.640,0.642},{0.640,0.642},{0.640,0.642},{0.634,0.610},{0.634,0.610},{0.634,0.610},{0.634,0.610},
           {0.634,0.610},{0.634,0.610},{0.634,0.610},{0.641,0.636},{0.641,0.636},{1.102,1.262},{1.102,1.262},{1.102,1.262},{1.102,1.262},{1.102,1.262},{1.102,1.262},
           {1.102,1.262},{1.102,1.262},{1.102,1.262},{1.102,1.262},{1.102,1.262},{1.102,1.262},{1.102,1.262},{1.573,1.689},{1.573,1.689},{1.573,1.689},{1.573,1.689},
           {1.573,1.689},{1.573,1.689},{1.573,1.689},{1.573,1.689},{1.573,1.689},{1.573,1.689},{1.573,1.689},{1.573,1.689},{1.526,1.702},{1.526,1.702},{1.526,1.702},
           {1.526,1.702},{1.526,1.702},{1.526,1.702},{1.526,1.702},{1.526,1.702},{1.526,1.702},{1.526,1.702},{1.526,1.702},{1.526,1.702},{1.526,1.702},{1.526,1.702} }

;-----------------------------------------------------------------------------------------
; => Look at wave parameters
;-----------------------------------------------------------------------------------------
; => Define rest frame frequencies
all_frestm = [frest_lfkm[good_mix],frest_hfkm[good_mix]]
; => Define fci[ce,lh] frequency
all_wcpm   = [wcp[good_mix],wcp[good_mix]]
all_wcem   = [wce[good_mix],wce[good_mix]]
all_wlhm   = [wlh[good_mix],wlh[good_mix]]
; => Define phase speeds
all_vphm   = [frest_lfkm[good_mix],frest_hfkm[good_mix]]/[avg_lfkm[good_mix],avg_hfkm[good_mix]]

; => Define rest frame wave number magnitudes
all_k_kmm  = [avg_lfkm[good_mix],avg_hfkm[good_mix]]
all_kcwpem = [kcwpelfm[good_mix],kcwpehfm[good_mix]]
all_krhoem = [krhoelfm[good_mix],krhoehfm[good_mix]]
; => Define rest frame parallel wave number magnitudes
all_kpar_m = ABS([avg_lfkm_par[good_mix],avg_hfkm_par[good_mix]])
all_kparcm = ABS([kcwpelfm_par[good_mix],kcwpehfm_par[good_mix]])
all_kparrm = ABS([krhoelfm_par[good_mix],krhoehfm_par[good_mix]])
; => Define rest frame perpendicular wave number magnitudes
all_kper_m = ABS([avg_lfkm_per[good_mix],avg_hfkm_per[good_mix]])
all_kpercm = ABS([kcwpelfm_per[good_mix],kcwpehfm_per[good_mix]])
all_kperrm = ABS([krhoelfm_per[good_mix],krhoehfm_per[good_mix]])

PRINT,';  ',  MIN(all_k_kmm,/NAN),  MAX(all_k_kmm,/NAN),  MEAN(all_k_kmm,/NAN),  STDDEV(all_k_kmm,/NAN)
PRINT,';  ',  MIN(all_kcwpem,/NAN), MAX(all_kcwpem,/NAN), MEAN(all_kcwpem,/NAN), STDDEV(all_kcwpem,/NAN)
PRINT,';  ',  MIN(all_krhoem,/NAN), MAX(all_krhoem,/NAN), MEAN(all_krhoem,/NAN), STDDEV(all_krhoem,/NAN)
PRINT,';  ',  MIN(all_vphm,/NAN),   MAX(all_vphm,/NAN),   MEAN(all_vphm,/NAN),   STDDEV(all_vphm,/NAN)
;---------------------------------------------------------------------
; => |k| [km^(-1), (c/wpe), (rho_ce)], w/k [km/s]
;---------------------------------------------------------------------
; => Results for (- sign), All Filter Frequencies
;---------------------------------------------------------------------
;            Min             Max            Mean          Std. Dev.
;=====================================================================
;       0.018173501      0.38541099     0.093157576     0.063399748
;       0.020681155      0.45746278      0.10754866     0.072657769
;       0.011476048      0.44805609     0.083638110     0.071847648
;         3.5078315       1194.2100       415.69219       320.95912
;---------------------------------------------------------------------

PRINT,';  ',  [MIN(all_frestm,/NAN),MAX(all_frestm,/NAN),MEAN(all_frestm,/NAN),STDDEV(all_frestm,/NAN)]/(2d0*!DPI)
PRINT,';  ',  MIN(all_frestm/all_wcpm,/NAN), MAX(all_frestm/all_wcpm,/NAN), MEAN(all_frestm/all_wcpm,/NAN), STDDEV(all_frestm/all_wcpm,/NAN)
PRINT,';  ',  MIN(all_frestm/all_wlhm,/NAN), MAX(all_frestm/all_wlhm,/NAN), MEAN(all_frestm/all_wlhm,/NAN), STDDEV(all_frestm/all_wlhm,/NAN)
PRINT,';  ',  MIN(all_frestm/all_wcem,/NAN), MAX(all_frestm/all_wcem,/NAN), MEAN(all_frestm/all_wcem,/NAN), STDDEV(all_frestm/all_wcem,/NAN)
;---------------------------------------------------------------------
; => f_rest [s^(-1), (wci), (wlh), (wce)]
;---------------------------------------------------------------------
; => Results for (- sign), All Filter Frequencies
;---------------------------------------------------------------------
;            Min             Max            Mean          Std. Dev.
;=====================================================================
;       0.011477858       53.930461       8.2373973       8.9933878
;       0.032306645       120.19296       19.434454       21.115873
;     0.00075394117       2.8049468      0.45354246      0.49278179
;     1.7594749e-05     0.065459132     0.010584334     0.011500064
;---------------------------------------------------------------------

PRINT,';  ',  MIN(all_kpar_m,/NAN), MAX(all_kpar_m,/NAN), MEAN(all_kpar_m,/NAN), STDDEV(all_kpar_m,/NAN)
PRINT,';  ',  MIN(all_kparcm,/NAN), MAX(all_kparcm,/NAN), MEAN(all_kparcm,/NAN), STDDEV(all_kparcm,/NAN)
PRINT,';  ',  MIN(all_kparrm,/NAN), MAX(all_kparrm,/NAN), MEAN(all_kparrm,/NAN), STDDEV(all_kparrm,/NAN)
;---------------------------------------------------------------------
; => |k|_para [km^(-1), (c/wpe), (rho_ce)]
;---------------------------------------------------------------------
; => Results for (- sign), All Filter Frequencies
;---------------------------------------------------------------------
;            Min             Max            Mean          Std. Dev.
;=====================================================================
;     4.6106560e-05      0.18151674     0.064646628     0.049775908
;     5.2468532e-05      0.20934330     0.074180327     0.056177108
;     5.4502568e-05      0.25461174     0.058492840     0.057688646
;---------------------------------------------------------------------

PRINT,';  ',  MIN(all_kper_m,/NAN), MAX(all_kper_m,/NAN), MEAN(all_kper_m,/NAN), STDDEV(all_kper_m,/NAN)
PRINT,';  ',  MIN(all_kpercm,/NAN), MAX(all_kpercm,/NAN), MEAN(all_kpercm,/NAN), STDDEV(all_kpercm,/NAN)
PRINT,';  ',  MIN(all_kperrm,/NAN), MAX(all_kperrm,/NAN), MEAN(all_kperrm,/NAN), STDDEV(all_kperrm,/NAN)
;---------------------------------------------------------------------
; => |k|_perp [km^(-1), (c/wpe), (rho_ce)]
;---------------------------------------------------------------------
; => Results for (- sign), All Filter Frequencies
;---------------------------------------------------------------------
;            Min             Max            Mean          Std. Dev.
;=====================================================================
;      0.0015100791      0.37805456     0.055131015     0.054820289
;      0.0020041722      0.44873108     0.064201411     0.063799094
;      0.0014905226      0.42824543     0.048328636     0.055456939
;---------------------------------------------------------------------



; => Define rest frame frequencies
all_frestp = [frest_lfkp[good_mix],frest_hfkp[good_mix]]
; => Define fci[ce,lh] frequency
all_wcpp   = [wcp[good_mix],wcp[good_mix]]
all_wcep   = [wce[good_mix],wce[good_mix]]
all_wlhp   = [wlh[good_mix],wlh[good_mix]]
; => Define phase speeds
all_vphp   = [frest_lfkp[good_mix],frest_hfkp[good_mix]]/[avg_lfkp[good_mix],avg_hfkp[good_mix]]

; => Define rest frame wave number magnitudes
all_k_kmp  = [avg_lfkp[good_mix],avg_hfkp[good_mix]]
all_kcwpep = [kcwpelfp[good_mix],kcwpehfp[good_mix]]
all_krhoep = [krhoelfp[good_mix],krhoehfp[good_mix]]
; => Define rest frame parallel wave number magnitudes
all_kpar_p = ABS([avg_lfkp_par[good_mix],avg_hfkp_par[good_mix]])
all_kparcp = ABS([kcwpelfp_par[good_mix],kcwpehfp_par[good_mix]])
all_kparrp = ABS([krhoelfp_par[good_mix],krhoehfp_par[good_mix]])
; => Define rest frame perpendicular wave number magnitudes
all_kper_p = ABS([avg_lfkp_per[good_mix],avg_hfkp_per[good_mix]])
all_kpercp = ABS([kcwpelfp_per[good_mix],kcwpehfp_per[good_mix]])
all_kperrp = ABS([krhoelfp_per[good_mix],krhoehfp_per[good_mix]])

PRINT,';  ',  MIN(all_k_kmp,/NAN),  MAX(all_k_kmp,/NAN),  MEAN(all_k_kmp,/NAN),  STDDEV(all_k_kmp,/NAN)
PRINT,';  ',  MIN(all_kcwpep,/NAN), MAX(all_kcwpep,/NAN), MEAN(all_kcwpep,/NAN), STDDEV(all_kcwpep,/NAN)
PRINT,';  ',  MIN(all_krhoep,/NAN), MAX(all_krhoep,/NAN), MEAN(all_krhoep,/NAN), STDDEV(all_krhoep,/NAN)
PRINT,';  ',  MIN(all_vphp,/NAN),   MAX(all_vphp,/NAN),   MEAN(all_vphp,/NAN),   STDDEV(all_vphp,/NAN)
;---------------------------------------------------------------------
; => |k| [km^(-1), (c/wpe), (rho_ce)], w/k [km/s]
;---------------------------------------------------------------------
; => Results for (+ sign), All Filter Frequencies
;---------------------------------------------------------------------
;            Min             Max            Mean          Std. Dev.
;=====================================================================
;       0.046667002       3.2611430      0.31257490      0.50831617
;       0.054050232       3.7111288      0.36328796      0.58532893
;       0.026891861       3.8549973      0.28657212      0.53968021
;         36.661677       1602.9510       762.39323       353.51977
;---------------------------------------------------------------------

PRINT,';  ',  [MIN(all_frestp,/NAN),MAX(all_frestp,/NAN),MEAN(all_frestp,/NAN),STDDEV(all_frestp,/NAN)]/(2d0*!DPI)
PRINT,';  ',  MIN(all_frestp/all_wcpp,/NAN), MAX(all_frestp/all_wcpp,/NAN), MEAN(all_frestp/all_wcpp,/NAN), STDDEV(all_frestp/all_wcpp,/NAN)
PRINT,';  ',  MIN(all_frestp/all_wlhp,/NAN), MAX(all_frestp/all_wlhp,/NAN), MEAN(all_frestp/all_wlhp,/NAN), STDDEV(all_frestm/all_wlhp,/NAN)
PRINT,';  ',  MIN(all_frestp/all_wcep,/NAN), MAX(all_frestp/all_wcep,/NAN), MEAN(all_frestp/all_wcep,/NAN), STDDEV(all_frestm/all_wcep,/NAN)
;---------------------------------------------------------------------
; => f_rest [s^(-1), (wci), (wlh), (wce)]
;---------------------------------------------------------------------
; => Results for (+ sign), All Filter Frequencies
;---------------------------------------------------------------------
;            Min             Max            Mean          Std. Dev.
;=====================================================================
;         2.1208584       113.87257       28.745778       22.075751
;         3.9209835       295.20842       68.324160       55.640744
;       0.091504114       6.8892882       1.5944830      0.49278179
;      0.0021354343      0.16077553     0.037210500     0.011500064
;---------------------------------------------------------------------

PRINT,';  ',  MIN(all_kpar_p,/NAN), MAX(all_kpar_p,/NAN), MEAN(all_kpar_p,/NAN), STDDEV(all_kpar_p,/NAN)
PRINT,';  ',  MIN(all_kparcp,/NAN), MAX(all_kparcp,/NAN), MEAN(all_kparcp,/NAN), STDDEV(all_kparcp,/NAN)
PRINT,';  ',  MIN(all_kparrp,/NAN), MAX(all_kparrp,/NAN), MEAN(all_kparrp,/NAN), STDDEV(all_kparrp,/NAN)
;---------------------------------------------------------------------
; => |k|_para [km^(-1), (c/wpe), (rho_ce)]
;---------------------------------------------------------------------
; => Results for (+ sign), All Filter Frequencies
;---------------------------------------------------------------------
;            Min             Max            Mean          Std. Dev.
;=====================================================================
;       0.028608414      0.27965497      0.13009590     0.052060287
;       0.033956698      0.31824290      0.15054864     0.059831300
;       0.018337564      0.36010031      0.11711810     0.077861236
;---------------------------------------------------------------------

PRINT,';  ',  MIN(all_kper_p,/NAN), MAX(all_kper_p,/NAN), MEAN(all_kper_p,/NAN), STDDEV(all_kper_p,/NAN)
PRINT,';  ',  MIN(all_kpercp,/NAN), MAX(all_kpercp,/NAN), MEAN(all_kpercp,/NAN), STDDEV(all_kpercp,/NAN)
PRINT,';  ',  MIN(all_kperrp,/NAN), MAX(all_kperrp,/NAN), MEAN(all_kperrp,/NAN), STDDEV(all_kperrp,/NAN)
;---------------------------------------------------------------------
; => |k|_perp [km^(-1), (c/wpe), (rho_ce)]
;---------------------------------------------------------------------
; => Results for (+ sign), All Filter Frequencies
;---------------------------------------------------------------------
;            Min             Max            Mean          Std. Dev.
;=====================================================================
;      0.0038936785       3.2590579      0.24956879      0.52365651
;      0.0049537899       3.7087560      0.29103288      0.60308089
;      0.0024520325       3.8525325      0.22867929      0.54895036
;---------------------------------------------------------------------


; => Define wave amplitudes [nT]
filtamp_0  = filtamp[good_mix]                    ; => Filtered amplitudes [nT]
pkamps_0   = DOUBLE(pkamps[good_mix])             ; => Peak-to-Peak amplitudes [nT]
dist_r_0   = dist_r[good_mix]                     ; => normal distance from shock ramp (km)
; => Define wave normal angles with respect to Bo, Vsw, and n
th_kn_rh08 = thkn8[good_mix]                      ; => Theta_kn (deg) [RH08 JCK's]
th_kn_rh09 = thkn9[good_mix]                      ; => Theta_kn (deg) [RH09 JCK's]
th_kV_st   = thkvs[good_mix]                      ; => Theta_kV (deg) [at start of TDSS]
th_kV_en   = thkve[good_mix]                      ; => Theta_kV (deg) [at end   of TDSS]
th_kV_av   = thkva[good_mix]                      ; => Theta_kV (deg) [Avg.]
th_kB_st   = thkbs[good_mix]                      ; => Theta_kB (deg) [at start of TDSS]
th_kB_en   = thkbe[good_mix]                      ; => Theta_kB (deg) [at end   of TDSS]
th_kB_av   = thkba[good_mix]                      ; => Theta_kB (deg) [Avg.]
; => Force angles to be from 0-90 degrees
th_kn_rh08 = th_kn_rh08 < (18d1 - th_kn_rh08)
th_kn_rh09 = th_kn_rh09 < (18d1 - th_kn_rh09)
th_kV_st   = th_kV_st   < (18d1 -   th_kV_st)
th_kV_en   = th_kV_en   < (18d1 -   th_kV_en)
th_kV_av   = th_kV_av   < (18d1 -   th_kV_av)
th_kB_st   = th_kB_st   < (18d1 -   th_kB_st)
th_kB_en   = th_kB_en   < (18d1 -   th_kB_en)
th_kB_av   = th_kB_av   < (18d1 -   th_kB_av)

PRINT,';  ', MIN(filtamp_0,/NAN), MAX(filtamp_0,/NAN), MEAN(filtamp_0,/NAN), STDDEV(filtamp_0,/NAN)
PRINT,';  ', MIN(pkamps_0,/NAN),  MAX(pkamps_0,/NAN),  MEAN(pkamps_0,/NAN),  STDDEV(pkamps_0,/NAN)
PRINT,';  ', MIN(dist_r_0,/NAN),  MAX(dist_r_0,/NAN),  MEAN(dist_r_0,/NAN),  STDDEV(dist_r_0,/NAN)
;---------------------------------------------------------------------
; => Results for peak wave amplitudes [nT, Peak-to-Peak, filtered]
;---------------------------------------------------------------------
;            Min             Max            Mean          Std. Dev.
;=====================================================================
;       0.086000003       8.0159998      0.83748648       1.0968995
;---------------------------------------------------------------------
; => Results for peak wave amplitudes [nT, Peak-to-Peak, unfiltered]
;---------------------------------------------------------------------
;            Min             Max            Mean          Std. Dev.
;=====================================================================
;         1.1870000       7.3600001       2.9985608       1.9385369
;---------------------------------------------------------------------
; => Results for normal distance from shock ramp [km]
;---------------------------------------------------------------------
;            Min             Max            Mean          Std. Dev.
;=====================================================================
;         887.69760       2073437.6       751913.40       694945.63
;---------------------------------------------------------------------

PRINT,';  ', MIN(th_kn_rh08,/NAN), MAX(th_kn_rh08,/NAN), MEAN(th_kn_rh08,/NAN), STDDEV(th_kn_rh08,/NAN)
PRINT,';  ', MIN(th_kn_rh09,/NAN), MAX(th_kn_rh09,/NAN), MEAN(th_kn_rh09,/NAN), STDDEV(th_kn_rh09,/NAN)
;---------------------------------------------------------------------
; => Results for Theta_kn [RH08, degrees]
;---------------------------------------------------------------------
;            Min             Max            Mean          Std. Dev.
;=====================================================================
;         7.7391048       89.402732       59.044001       20.619337
;---------------------------------------------------------------------
; => Results for Theta_kn [RH09, degrees]
;---------------------------------------------------------------------
;            Min             Max            Mean          Std. Dev.
;=====================================================================
;         7.6778789       89.892955       58.942315       20.915334
;---------------------------------------------------------------------

PRINT,';  ', MIN(th_kV_st,/NAN), MAX(th_kV_st,/NAN), MEAN(th_kV_st,/NAN), STDDEV(th_kV_st,/NAN)
PRINT,';  ', MIN(th_kV_en,/NAN), MAX(th_kV_en,/NAN), MEAN(th_kV_en,/NAN), STDDEV(th_kV_en,/NAN)
PRINT,';  ', MIN(th_kV_av,/NAN), MAX(th_kV_av,/NAN), MEAN(th_kV_av,/NAN), STDDEV(th_kV_av,/NAN)
;---------------------------------------------------------------------
; => Results for Theta_kV [degrees]
;---------------------------------------------------------------------
;            Min             Max            Mean          Std. Dev.
;=====================================================================
;         6.6389999       89.652000       56.754446       22.838259
;         6.6129999       89.622002       56.761689       22.835610
;         6.6259999       89.637001       56.758068       22.836918
;---------------------------------------------------------------------

PRINT,';  ', MIN(th_kB_st,/NAN), MAX(th_kB_st,/NAN), MEAN(th_kB_st,/NAN), STDDEV(th_kB_st,/NAN)
PRINT,';  ', MIN(th_kB_en,/NAN), MAX(th_kB_en,/NAN), MEAN(th_kB_en,/NAN), STDDEV(th_kB_en,/NAN)
PRINT,';  ', MIN(th_kB_av,/NAN), MAX(th_kB_av,/NAN), MEAN(th_kB_av,/NAN), STDDEV(th_kB_av,/NAN)
;---------------------------------------------------------------------
; => Results for Theta_kB [degrees]
;---------------------------------------------------------------------
;            Min             Max            Mean          Std. Dev.
;=====================================================================
;         1.1950001       88.150002       43.185237       23.637695
;         2.5539999       89.517998       43.508919       22.758874
;         2.1900001       89.871506       43.401639       23.180786
;---------------------------------------------------------------------


;-----------------------------------------------------------------------------------------
; => Look at particle parameters
;-----------------------------------------------------------------------------------------
; => Define electron and ion thermal speeds (km/s)
vte_0      = vte[good_mix]
vti_0      = vti[good_mix]
; => Define electron-ion drift, (Vsw - Ve), speed (km/s)
vdrmg_0    = vdrmg[good_mix]
; => Define electron and ion avg. temperatures (eV)
teavg_0    = teavg[good_mix]
tiavg_0    = tiavg[good_mix]
; => Define core and halo electron temperatures (eV)
tec_avg_0  = tecavg[good_mix]
teh_avg_0  = tehavg[good_mix]
; => Define parallel and perpendicular core electron temperatures (eV)
tpara_ec_0 = tparc[good_mix]
tperp_ec_0 = tperc[good_mix]
; => Define parallel and perpendicular halo electron temperatures (eV)
tpara_eh_0 = tparh[good_mix]
tperp_eh_0 = tperh[good_mix]
; => Define k . (Vsw - Ve)/|(Vsw - Ve)| angle [deg]
th_kvd_0   = the_kvds[good_mix]
; => Define electron heat flux magnitude [eV km/s cm^(-3)]
qmag_0     = qmag[good_mix]
; => Define parallel core electron plasma beta
beta_pac_0 = beta_pac[good_mix]

; => Define electron-to-ion temperature ratio
te_ti_0    = te_tiav[good_mix]
; => Define halo-to-core avg. electron temperature ratio
teh_tec_0  = tehc_avg[good_mix]
; => Define halo-to-core parallel and perpendicular electron temperature ratio
thc_para_0 = thc_par[good_mix]
thc_perp_0 = thc_per[good_mix]
; => Define halo and core electron temperature anisotropy
tanis_ce_0 = tanis_c[good_mix]
tanis_he_0 = tanis_h[good_mix]

; => Only look at unique elements
unq        = UNIQ(vte_0,SORT(vte_0))
PRINT,';  ', N_ELEMENTS(unq)
;             9
vte_0      = vte_0[unq]
vti_0      = vti_0[unq]
vdrmg_0    = vdrmg_0[unq]
teavg_0    = teavg_0[unq]
tiavg_0    = tiavg_0[unq]
tec_avg_0  = tec_avg_0[unq]
teh_avg_0  = teh_avg_0[unq]
tpara_ec_0 = tpara_ec_0[unq]
tperp_ec_0 = tperp_ec_0[unq]
tpara_eh_0 = tpara_eh_0[unq]
tperp_eh_0 = tperp_eh_0[unq]
qmag_0     = qmag_0[unq]
beta_pac_0 = beta_pac_0[unq]
te_ti_0    = te_ti_0[unq]
teh_tec_0  = teh_tec_0[unq]
thc_para_0 = thc_para_0[unq]
thc_perp_0 = thc_perp_0[unq]
tanis_ce_0 = tanis_ce_0[unq]
tanis_he_0 = tanis_he_0[unq]

Vdr_vte    = vdrmg_0*1d3/vte_0
Vdr_vti    = vdrmg_0*1d3/vti_0

PRINT,';  ', MIN(Vdr_vte,/NAN), MAX(Vdr_vte,/NAN), MEAN(Vdr_vte,/NAN), STDDEV(Vdr_vte,/NAN)
PRINT,';  ', MIN(Vdr_vti,/NAN), MAX(Vdr_vti,/NAN), MEAN(Vdr_vti,/NAN), STDDEV(Vdr_vti,/NAN)
;---------------------------------------------------------------------
;            Min             Max            Mean          Std. Dev.
;=====================================================================
;       0.018085865     0.058200252     0.026800547     0.012506418
;        0.59313855       3.4642639       1.1053055      0.92594428
;---------------------------------------------------------------------

PRINT,';  ', MIN(tiavg_0,/NAN),   MAX(tiavg_0,/NAN),   MEAN(tiavg_0,/NAN),   STDDEV(tiavg_0,/NAN)
PRINT,';  ', MIN(teavg_0,/NAN),   MAX(teavg_0,/NAN),   MEAN(teavg_0,/NAN),   STDDEV(teavg_0,/NAN)
PRINT,';  ', MIN(te_ti_0,/NAN),   MAX(te_ti_0,/NAN),   MEAN(te_ti_0,/NAN),   STDDEV(te_ti_0,/NAN)
;---------------------------------------------------------------------
;            Min             Max            Mean          Std. Dev.
;=====================================================================
;         29.955000       125.22600       76.020221       29.500181
;         45.413002       57.825500       51.013277       4.4881461
;        0.46176913       1.9298614      0.84398737      0.55189215
;---------------------------------------------------------------------

PRINT,';  ', MIN(tec_avg_0,/NAN), MAX(tec_avg_0,/NAN), MEAN(tec_avg_0,/NAN), STDDEV(tec_avg_0,/NAN)
PRINT,';  ', MIN(teh_avg_0,/NAN), MAX(teh_avg_0,/NAN), MEAN(teh_avg_0,/NAN), STDDEV(teh_avg_0,/NAN)
PRINT,';  ', MIN(teh_tec_0,/NAN), MAX(teh_tec_0,/NAN), MEAN(teh_tec_0,/NAN), STDDEV(teh_tec_0,/NAN)
;---------------------------------------------------------------------
;            Min             Max            Mean          Std. Dev.
;=====================================================================
;         34.015999       45.254501       39.582500       3.2915711
;         164.93500       258.62500       191.10516       36.886422
;         3.8282709       7.4247558       4.9177367       1.3887432
;---------------------------------------------------------------------

PRINT,';  ', MIN(tpara_ec_0,/NAN), MAX(tpara_ec_0,/NAN), MEAN(tpara_ec_0,/NAN), STDDEV(tpara_ec_0,/NAN)
PRINT,';  ', MIN(tperp_ec_0,/NAN), MAX(tperp_ec_0,/NAN), MEAN(tperp_ec_0,/NAN), STDDEV(tperp_ec_0,/NAN)
PRINT,';  ', MIN(tanis_ce_0,/NAN), MAX(tanis_ce_0,/NAN), MEAN(tanis_ce_0,/NAN), STDDEV(tanis_ce_0,/NAN)
;---------------------------------------------------------------------
;            Min             Max            Mean          Std. Dev.
;=====================================================================
;         35.672501       48.247002       43.646333       4.5676540
;         33.188000       44.271000       37.550277       3.6045765
;        0.73632003      0.93752778      0.86597515     0.092794995
;---------------------------------------------------------------------

PRINT,';  ', MIN(tpara_eh_0,/NAN), MAX(tpara_eh_0,/NAN), MEAN(tpara_eh_0,/NAN), STDDEV(tpara_eh_0,/NAN)
PRINT,';  ', MIN(tperp_eh_0,/NAN), MAX(tperp_eh_0,/NAN), MEAN(tperp_eh_0,/NAN), STDDEV(tperp_eh_0,/NAN)
PRINT,';  ', MIN(tanis_he_0,/NAN), MAX(tanis_he_0,/NAN), MEAN(tanis_he_0,/NAN), STDDEV(tanis_he_0,/NAN)
;---------------------------------------------------------------------
;            Min             Max            Mean          Std. Dev.
;=====================================================================
;         117.09250       264.58951       175.26328       51.647961
;         163.79150       258.74548       199.02622       37.010052
;        0.81129689       1.7547196       1.2030945      0.34973710
;---------------------------------------------------------------------

PRINT,';  ', MIN(qmag_0,/NAN),     MAX(qmag_0,/NAN),     MEAN(qmag_0,/NAN),     STDDEV(qmag_0,/NAN)
PRINT,';  ', MIN(beta_pac_0,/NAN), MAX(beta_pac_0,/NAN), MEAN(beta_pac_0,/NAN), STDDEV(beta_pac_0,/NAN)
;---------------------------------------------------------------------
;            Min             Max            Mean          Std. Dev.
;=====================================================================
;         97436.000       518983.62       357901.09       151887.16
;        0.20760000       1.0101000      0.49851666      0.34901046
;---------------------------------------------------------------------

PRINT,';  ', MIN(thc_para_0,/NAN), MAX(thc_para_0,/NAN), MEAN(thc_para_0,/NAN), STDDEV(thc_para_0,/NAN)
PRINT,';  ', MIN(thc_perp_0,/NAN), MAX(thc_perp_0,/NAN), MEAN(thc_perp_0,/NAN), STDDEV(thc_perp_0,/NAN)
;---------------------------------------------------------------------
;            Min             Max            Mean          Std. Dev.
;=====================================================================
;         2.7392943       7.0771408       4.1266456       1.6385962
;         3.9302365       7.7963567       5.3709846       1.3157863
;---------------------------------------------------------------------






;-----------------------------------------------------------------------------------------
;-----------------------------------------------------------------------------------------
;-----------------------------------------------------------------------------------------
; => Look at wave parameters for high/low frequencies separately
;-----------------------------------------------------------------------------------------
;-----------------------------------------------------------------------------------------
;-----------------------------------------------------------------------------------------
;good_high  = WHERE(freql[good_mix] GT 60d0,gdhg,COMPLEMENT=good_low,NCOMPLEMENT=gdlw)
;PRINT,';  ',  gdhg, gdlw
;            49          99

; => use the SC frame filter values to separate high from low
test_high  = (freql[good_mix] GT wlh[good_mix]/(2d0*!DPI)) AND $
             (freqh[good_mix] GT 40d0)
good_high  = WHERE(test_high,gdhg,COMPLEMENT=good_low,NCOMPLEMENT=gdlw)
PRINT,';  ',  gdhg, gdlw
;           110          38
good_mixlw = good_mix[good_low]
good_mixhg = good_mix[good_high]

;-----------------------------------------------------------------------------------------
; => Results for (- sign), Low Filter Frequencies
;-----------------------------------------------------------------------------------------
; => Define rest frame frequencies
all_frest_lm = [frest_lfkm[good_mixlw],frest_hfkm[good_mixlw]]
; => Define fci[ce,lh] frequency
all_wcp_lm   = [wcp[good_mixlw],wcp[good_mixlw]]
all_wce_lm   = [wce[good_mixlw],wce[good_mixlw]]
all_wlh_lm   = [wlh[good_mixlw],wlh[good_mixlw]]
; => Define phase speeds
all_vph_lm   = [frest_lfkm[good_mixlw],frest_hfkm[good_mixlw]]/[avg_lfkm[good_mixlw],avg_hfkm[good_mixlw]]
; => Define rest frame wave number magnitudes
all_k_km_lm  = [avg_lfkm[good_mixlw],avg_hfkm[good_mixlw]]
all_kcwpe_lm = [kcwpelfm[good_mixlw],kcwpehfm[good_mixlw]]
all_krhoe_lm = [krhoelfm[good_mixlw],krhoehfm[good_mixlw]]
; => Define rest frame parallel wave number magnitudes
all_kpar_lm  = ABS([avg_lfkm_par[good_mixlw],avg_hfkm_par[good_mixlw]])
all_kparc_lm = ABS([kcwpelfm_par[good_mixlw],kcwpehfm_par[good_mixlw]])
all_kparr_lm = ABS([krhoelfm_par[good_mixlw],krhoehfm_par[good_mixlw]])
; => Define rest frame perpendicular wave number magnitudes
all_kper_lm  = ABS([avg_lfkm_per[good_mixlw],avg_hfkm_per[good_mixlw]])
all_kperc_lm = ABS([kcwpelfm_per[good_mixlw],kcwpehfm_per[good_mixlw]])
all_kperr_lm = ABS([krhoelfm_per[good_mixlw],krhoehfm_per[good_mixlw]])

PRINT,';  ',  MIN(all_k_km_lm,/NAN),  MAX(all_k_km_lm,/NAN),  MEAN(all_k_km_lm,/NAN),  STDDEV(all_k_km_lm,/NAN)
PRINT,';  ',  MIN(all_kcwpe_lm,/NAN), MAX(all_kcwpe_lm,/NAN), MEAN(all_kcwpe_lm,/NAN), STDDEV(all_kcwpe_lm,/NAN)
PRINT,';  ',  MIN(all_krhoe_lm,/NAN), MAX(all_krhoe_lm,/NAN), MEAN(all_krhoe_lm,/NAN), STDDEV(all_krhoe_lm,/NAN)
PRINT,';  ',  MIN(all_vph_lm,/NAN),   MAX(all_vph_lm,/NAN),   MEAN(all_vph_lm,/NAN),   STDDEV(all_vph_lm,/NAN)
;---------------------------------------------------------------------
; => Results for (- sign), Low Filter Frequencies
;---------------------------------------------------------------------
;            Min             Max            Mean          Std. Dev.
;=====================================================================
;       0.018522501      0.37903398     0.092521875     0.073636717
;       0.022017615      0.43133363      0.10855062     0.085175335
;       0.011518958      0.44805609     0.078222284     0.080451358
;         4.6602741       1120.2239       362.63086       325.79647
;---------------------------------------------------------------------

PRINT,';  ',  [MIN(all_frest_lm,/NAN),MAX(all_frest_lm,/NAN),MEAN(all_frest_lm,/NAN),STDDEV(all_frest_lm,/NAN)]/(2d0*!DPI)
PRINT,';  ',  MIN(all_frest_lm/all_wcp_lm,/NAN), MAX(all_frest_lm/all_wcp_lm,/NAN), MEAN(all_frest_lm/all_wcp_lm,/NAN), STDDEV(all_frest_lm/all_wcp_lm,/NAN)
PRINT,';  ',  MIN(all_frest_lm/all_wce_lm,/NAN), MAX(all_frest_lm/all_wce_lm,/NAN), MEAN(all_frest_lm/all_wce_lm,/NAN), STDDEV(all_frest_lm/all_wce_lm,/NAN)
PRINT,';  ',  MIN(all_frest_lm/all_wlh_lm,/NAN), MAX(all_frest_lm/all_wlh_lm,/NAN), MEAN(all_frest_lm/all_wlh_lm,/NAN), STDDEV(all_frest_lm/all_wlh_lm,/NAN)
;---------------------------------------------------------------------
; => Results for (- sign), Low Filter Frequencies
;---------------------------------------------------------------------
;            Min             Max            Mean          Std. Dev.
;=====================================================================
;       0.015173072       39.931169       7.1141577       8.5143362
;       0.032306313       120.19249       14.935403       19.757687
;     1.7594567e-05     0.065458874    0.0081340742     0.010760372
;     0.00075393386       2.8049409      0.34854789      0.46108606
;---------------------------------------------------------------------

PRINT,';  ',  MIN(all_kpar_lm,/NAN), MAX(all_kpar_lm,/NAN), MEAN(all_kpar_lm,/NAN), STDDEV(all_kpar_lm,/NAN)
PRINT,';  ',  MIN(all_kper_lm,/NAN), MAX(all_kper_lm,/NAN), MEAN(all_kper_lm,/NAN), STDDEV(all_kper_lm,/NAN)
PRINT,';  ',  MIN(all_kparc_lm,/NAN), MAX(all_kparc_lm,/NAN), MEAN(all_kparc_lm,/NAN), STDDEV(all_kparc_lm,/NAN)
PRINT,';  ',  MIN(all_kperc_lm,/NAN), MAX(all_kperc_lm,/NAN), MEAN(all_kperc_lm,/NAN), STDDEV(all_kperc_lm,/NAN)
PRINT,';  ',  MIN(all_kparr_lm,/NAN), MAX(all_kparr_lm,/NAN), MEAN(all_kparr_lm,/NAN), STDDEV(all_kparr_lm,/NAN)
PRINT,';  ',  MIN(all_kperr_lm,/NAN), MAX(all_kperr_lm,/NAN), MEAN(all_kperr_lm,/NAN), STDDEV(all_kperr_lm,/NAN)
;---------------------------------------------------------------------
; => Results for (- sign), Low Filter Frequencies
;---------------------------------------------------------------------
;            Min             Max            Mean          Std. Dev.
;=====================================================================
;     0.00028054977      0.13800030     0.045928943     0.040335235
;      0.0046076409      0.36227511     0.072167529     0.071096282
;     0.00030016277      0.17041075     0.054198094     0.047385941
;      0.0054690294      0.41226235     0.084667172     0.081908782
;     0.00017917030      0.20726075     0.037656334     0.040222391
;      0.0029534288      0.42824543     0.062470923     0.075255110
;---------------------------------------------------------------------


;-----------------------------------------------------------------------------------------
; => Results for (- sign), High Filter Frequencies
;-----------------------------------------------------------------------------------------
; => Define rest frame frequencies
all_frest_hm = [frest_lfkm[good_mixhg],frest_hfkm[good_mixhg]]
; => Define fci[ce,lh] frequency
all_wcp_hm   = [wcp[good_mixhg],wcp[good_mixhg]]
all_wce_hm   = [wce[good_mixhg],wce[good_mixhg]]
all_wlh_hm   = [wlh[good_mixhg],wlh[good_mixhg]]
; => Define phase speeds
all_vph_hm   = [frest_lfkm[good_mixhg],frest_hfkm[good_mixhg]]/[avg_lfkm[good_mixhg],avg_hfkm[good_mixhg]]
; => Define rest frame wave number magnitudes
all_k_km_hm  = [avg_lfkm[good_mixhg],avg_hfkm[good_mixhg]]
all_kcwpe_hm = [kcwpelfm[good_mixhg],kcwpehfm[good_mixhg]]
all_krhoe_hm = [krhoelfm[good_mixhg],krhoehfm[good_mixhg]]
; => Define rest frame parallel wave number magnitudes
all_kpar_hm  = ABS([avg_lfkm_par[good_mixhg],avg_hfkm_par[good_mixhg]])
all_kparc_hm = ABS([kcwpelfm_par[good_mixhg],kcwpehfm_par[good_mixhg]])
all_kparr_hm = ABS([krhoelfm_par[good_mixhg],krhoehfm_par[good_mixhg]])
; => Define rest frame perpendicular wave number magnitudes
all_kper_hm  = ABS([avg_lfkm_per[good_mixhg],avg_hfkm_per[good_mixhg]])
all_kperc_hm = ABS([kcwpelfm_per[good_mixhg],kcwpehfm_per[good_mixhg]])
all_kperr_hm = ABS([krhoelfm_per[good_mixhg],krhoehfm_per[good_mixhg]])

PRINT,';  ',  MIN(all_k_km_hm,/NAN),  MAX(all_k_km_hm,/NAN),  MEAN(all_k_km_hm,/NAN),  STDDEV(all_k_km_hm,/NAN)
PRINT,';  ',  MIN(all_kcwpe_hm,/NAN), MAX(all_kcwpe_hm,/NAN), MEAN(all_kcwpe_hm,/NAN), STDDEV(all_kcwpe_hm,/NAN)
PRINT,';  ',  MIN(all_krhoe_hm,/NAN), MAX(all_krhoe_hm,/NAN), MEAN(all_krhoe_hm,/NAN), STDDEV(all_krhoe_hm,/NAN)
PRINT,';  ',  MIN(all_vph_hm,/NAN),   MAX(all_vph_hm,/NAN),   MEAN(all_vph_hm,/NAN),   STDDEV(all_vph_hm,/NAN)
;---------------------------------------------------------------------
; => Results for (- sign), High Filter Frequencies
;---------------------------------------------------------------------
;            Min             Max            Mean          Std. Dev.
;=====================================================================
;       0.018173501      0.38541099     0.095023211     0.063849020
;       0.020681106      0.45746274      0.11302223     0.075817449
;       0.011476048      0.28479332     0.090248164     0.078167122
;         3.5078137       1194.2088       472.78711       349.04657
;---------------------------------------------------------------------

PRINT,';  ',  [MIN(all_frest_hm,/NAN),MAX(all_frest_hm,/NAN),MEAN(all_frest_hm,/NAN),STDDEV(all_frest_hm,/NAN)]/(2d0*!DPI)
PRINT,';  ',  MIN(all_frest_hm/all_wcp_hm,/NAN), MAX(all_frest_hm/all_wcp_hm,/NAN), MEAN(all_frest_hm/all_wcp_hm,/NAN), STDDEV(all_frest_hm/all_wcp_hm,/NAN)
PRINT,';  ',  MIN(all_frest_hm/all_wce_hm,/NAN), MAX(all_frest_hm/all_wce_hm,/NAN), MEAN(all_frest_hm/all_wce_hm,/NAN), STDDEV(all_frest_hm/all_wce_hm,/NAN)
PRINT,';  ',  MIN(all_frest_hm/all_wlh_hm,/NAN), MAX(all_frest_hm/all_wlh_hm,/NAN), MEAN(all_frest_hm/all_wlh_hm,/NAN), STDDEV(all_frest_hm/all_wlh_hm,/NAN)
;---------------------------------------------------------------------
; => Results for (- sign), High Filter Frequencies
;---------------------------------------------------------------------
;            Min             Max            Mean          Std. Dev.
;=====================================================================
;       0.011477799       53.930406       9.5265551       9.9720574
;       0.034548083       99.705111       21.884700       22.729261
;     1.8815473e-05     0.054301098     0.011918780     0.012378742
;     0.00080625109       2.3268195      0.51072306      0.53043224
;---------------------------------------------------------------------

PRINT,';  ',  MIN(all_kpar_hm,/NAN), MAX(all_kpar_hm,/NAN), MEAN(all_kpar_hm,/NAN), STDDEV(all_kpar_hm,/NAN)
PRINT,';  ',  MIN(all_kper_hm,/NAN), MAX(all_kper_hm,/NAN), MEAN(all_kper_hm,/NAN), STDDEV(all_kper_hm,/NAN)
PRINT,';  ',  MIN(all_kparc_hm,/NAN), MAX(all_kparc_hm,/NAN), MEAN(all_kparc_hm,/NAN), STDDEV(all_kparc_hm,/NAN)
PRINT,';  ',  MIN(all_kperc_hm,/NAN), MAX(all_kperc_hm,/NAN), MEAN(all_kperc_hm,/NAN), STDDEV(all_kperc_hm,/NAN)
PRINT,';  ',  MIN(all_kparr_hm,/NAN), MAX(all_kparr_hm,/NAN), MEAN(all_kparr_hm,/NAN), STDDEV(all_kparr_hm,/NAN)
PRINT,';  ',  MIN(all_kperr_hm,/NAN), MAX(all_kperr_hm,/NAN), MEAN(all_kperr_hm,/NAN), STDDEV(all_kperr_hm,/NAN)
;---------------------------------------------------------------------
; => Results for (- sign), High Filter Frequencies
;---------------------------------------------------------------------
;            Min             Max            Mean          Std. Dev.
;=====================================================================
;     4.6106560e-05      0.15773343     0.066264755     0.047780550
;      0.0015100791      0.37805456     0.057529905     0.055932876
;     5.2468409e-05      0.20934295     0.079563549     0.058822038
;      0.0020041689      0.44873104     0.067493878     0.064692484
;     5.4502568e-05      0.25461174     0.064128600     0.065284579
;      0.0014905226      0.28307234     0.051856474     0.056544813
;---------------------------------------------------------------------


;-----------------------------------------------------------------------------------------
; => Results for (+ sign), Low Filter Frequencies
;-----------------------------------------------------------------------------------------
; => Define rest frame frequencies
all_frest_lp = [frest_lfkp[good_mixlw],frest_hfkp[good_mixlw]]
; => Define fci[ce,lh] frequency
all_wcp_lp   = [wcp[good_mixlw],wcp[good_mixlw]]
all_wce_lp   = [wce[good_mixlw],wce[good_mixlw]]
all_wlh_lp   = [wlh[good_mixlw],wlh[good_mixlw]]
; => Define phase speeds
all_vph_lp   = [frest_lfkp[good_mixlw],frest_hfkp[good_mixlw]]/[avg_lfkp[good_mixlw],avg_hfkp[good_mixlw]]
; => Define rest frame wave number magnitudes
all_k_km_lp  = [avg_lfkp[good_mixlw],avg_hfkp[good_mixlw]]
all_kcwpe_lp = [kcwpelfp[good_mixlw],kcwpehfp[good_mixlw]]
all_krhoe_lp = [krhoelfp[good_mixlw],krhoehfp[good_mixlw]]
; => Define rest frame parallel wave number magnitudes
all_kpar_lp  = ABS([avg_lfkp_par[good_mixlw],avg_hfkp_par[good_mixlw]])
all_kparc_lp = ABS([kcwpelfp_par[good_mixlw],kcwpehfp_par[good_mixlw]])
all_kparr_lp = ABS([krhoelfp_par[good_mixlw],krhoehfp_par[good_mixlw]])
; => Define rest frame perpendicular wave number magnitudes
all_kper_lp  = ABS([avg_lfkp_per[good_mixlw],avg_hfkp_per[good_mixlw]])
all_kperc_lp = ABS([kcwpelfp_per[good_mixlw],kcwpehfp_per[good_mixlw]])
all_kperr_lp = ABS([krhoelfp_per[good_mixlw],krhoehfp_per[good_mixlw]])

PRINT,';  ',  MIN(all_k_km_lp,/NAN),  MAX(all_k_km_lp,/NAN),  MEAN(all_k_km_lp,/NAN),  STDDEV(all_k_km_lp,/NAN)
PRINT,';  ',  MIN(all_kcwpe_lp,/NAN), MAX(all_kcwpe_lp,/NAN), MEAN(all_kcwpe_lp,/NAN), STDDEV(all_kcwpe_lp,/NAN)
PRINT,';  ',  MIN(all_krhoe_lp,/NAN), MAX(all_krhoe_lp,/NAN), MEAN(all_krhoe_lp,/NAN), STDDEV(all_krhoe_lp,/NAN)
PRINT,';  ',  MIN(all_vph_lp,/NAN),   MAX(all_vph_lp,/NAN),   MEAN(all_vph_lp,/NAN),   STDDEV(all_vph_lp,/NAN)
;---------------------------------------------------------------------
; => Results for (+ sign), Low Filter Frequencies
;---------------------------------------------------------------------
;            Min             Max            Mean          Std. Dev.
;=====================================================================
;       0.046667002       2.9747775      0.45352856      0.64927690
;       0.054050483       3.3332340      0.52314737      0.72043508
;       0.026891861       3.4624609      0.37769351      0.60453821
;         36.661647       1602.9450       802.11817       380.35408
;---------------------------------------------------------------------

PRINT,';  ',  [MIN(all_frest_lp,/NAN),MAX(all_frest_lp,/NAN),MEAN(all_frest_lp,/NAN),STDDEV(all_frest_lp,/NAN)]/(2d0*!DPI)
PRINT,';  ',  MIN(all_frest_lp/all_wcp_lp,/NAN), MAX(all_frest_lp/all_wcp_lp,/NAN), MEAN(all_frest_lp/all_wcp_lp,/NAN), STDDEV(all_frest_lp/all_wcp_lp,/NAN)
PRINT,';  ',  MIN(all_frest_lp/all_wce_lp,/NAN), MAX(all_frest_lp/all_wce_lp,/NAN), MEAN(all_frest_lp/all_wce_lp,/NAN), STDDEV(all_frest_lp/all_wce_lp,/NAN)
PRINT,';  ',  MIN(all_frest_lp/all_wlh_lp,/NAN), MAX(all_frest_lp/all_wlh_lp,/NAN), MEAN(all_frest_lp/all_wlh_lp,/NAN), STDDEV(all_frest_lp/all_wlh_lp,/NAN)
;---------------------------------------------------------------------
; => Results for (+ sign), Low Filter Frequencies
;---------------------------------------------------------------------
;            Min             Max            Mean          Std. Dev.
;=====================================================================
;         2.2283483       113.87242       37.532222       24.779599
;         5.0857055       295.20761       81.701899       62.327595
;      0.0027697617      0.16077508     0.044496243     0.033944668
;        0.11868517       6.8892812       1.9066790       1.4545401
;---------------------------------------------------------------------

PRINT,';  ',  MIN(all_kpar_lp,/NAN), MAX(all_kpar_lp,/NAN), MEAN(all_kpar_lp,/NAN), STDDEV(all_kpar_lp,/NAN)
PRINT,';  ',  MIN(all_kper_lp,/NAN), MAX(all_kper_lp,/NAN), MEAN(all_kper_lp,/NAN), STDDEV(all_kper_lp,/NAN)
PRINT,';  ',  MIN(all_kparc_lp,/NAN), MAX(all_kparc_lp,/NAN), MEAN(all_kparc_lp,/NAN), STDDEV(all_kparc_lp,/NAN)
PRINT,';  ',  MIN(all_kperc_lp,/NAN), MAX(all_kperc_lp,/NAN), MEAN(all_kperc_lp,/NAN), STDDEV(all_kperc_lp,/NAN)
PRINT,';  ',  MIN(all_kparr_lp,/NAN), MAX(all_kparr_lp,/NAN), MEAN(all_kparr_lp,/NAN), STDDEV(all_kparr_lp,/NAN)
PRINT,';  ',  MIN(all_kperr_lp,/NAN), MAX(all_kperr_lp,/NAN), MEAN(all_kperr_lp,/NAN), STDDEV(all_kperr_lp,/NAN)
;---------------------------------------------------------------------
; => Results for (+ sign), Low Filter Frequencies
;---------------------------------------------------------------------
;            Min             Max            Mean          Std. Dev.
;=====================================================================
;       0.035896368      0.25492449      0.12463438     0.051128151
;       0.010014389       2.9745317      0.41005677      0.66427085
;       0.038405853      0.29009933      0.14729698     0.062153236
;       0.011886558       3.3260745      0.47193564      0.73812469
;       0.022924856      0.35118764      0.10700486     0.083428328
;      0.0064190734       3.4550237      0.34194713      0.61071779
;---------------------------------------------------------------------

;-----------------------------------------------------------------------------------------
; => Results for (+ sign), High Filter Frequencies
;-----------------------------------------------------------------------------------------
; => Define rest frame frequencies
all_frest_hp = [frest_lfkp[good_mixhg],frest_hfkp[good_mixhg]]
; => Define fci[ce,lh] frequency
all_wcp_hp   = [wcp[good_mixhg],wcp[good_mixhg]]
all_wce_hp   = [wce[good_mixhg],wce[good_mixhg]]
all_wlh_hp   = [wlh[good_mixhg],wlh[good_mixhg]]
; => Define phase speeds
all_vph_hp   = [frest_lfkp[good_mixhg],frest_hfkp[good_mixhg]]/[avg_lfkp[good_mixhg],avg_hfkp[good_mixhg]]
; => Define rest frame wave number magnitudes
all_k_km_hp  = [avg_lfkp[good_mixhg],avg_hfkp[good_mixhg]]
all_kcwpe_hp = [kcwpelfp[good_mixhg],kcwpehfp[good_mixhg]]
all_krhoe_hp = [krhoelfp[good_mixhg],krhoehfp[good_mixhg]]
; => Define rest frame parallel wave number magnitudes
all_kpar_hp  = ABS([avg_lfkp_par[good_mixhg],avg_hfkp_par[good_mixhg]])
all_kparc_hp = ABS([kcwpelfp_par[good_mixhg],kcwpehfp_par[good_mixhg]])
all_kparr_hp = ABS([krhoelfp_par[good_mixhg],krhoehfp_par[good_mixhg]])
; => Define rest frame perpendicular wave number magnitudes
all_kper_hp  = ABS([avg_lfkp_per[good_mixhg],avg_hfkp_per[good_mixhg]])
all_kperc_hp = ABS([kcwpelfp_per[good_mixhg],kcwpehfp_per[good_mixhg]])
all_kperr_hp = ABS([krhoelfp_per[good_mixhg],krhoehfp_per[good_mixhg]])

PRINT,';  ',  MIN(all_k_km_hp,/NAN),  MAX(all_k_km_hp,/NAN),  MEAN(all_k_km_hp,/NAN),  STDDEV(all_k_km_hp,/NAN)
PRINT,';  ',  MIN(all_kcwpe_hp,/NAN), MAX(all_kcwpe_hp,/NAN), MEAN(all_kcwpe_hp,/NAN), STDDEV(all_kcwpe_hp,/NAN)
PRINT,';  ',  MIN(all_krhoe_hp,/NAN), MAX(all_krhoe_hp,/NAN), MEAN(all_krhoe_hp,/NAN), STDDEV(all_krhoe_hp,/NAN)
PRINT,';  ',  MIN(all_vph_hp,/NAN),   MAX(all_vph_hp,/NAN),   MEAN(all_vph_hp,/NAN),   STDDEV(all_vph_hp,/NAN)
;---------------------------------------------------------------------
; => Results for (+ sign), High Filter Frequencies
;---------------------------------------------------------------------
;            Min             Max            Mean          Std. Dev.
;=====================================================================
;       0.047713503       3.2611430      0.29642560      0.51182271
;       0.054732138       3.7111201      0.34554449      0.58267981
;       0.027091252       3.8549973      0.29784971      0.60431729
;         40.675547       1537.8034       822.84495       372.97482
;---------------------------------------------------------------------

PRINT,';  ',  [MIN(all_frest_hp,/NAN),MAX(all_frest_hp,/NAN),MEAN(all_frest_hp,/NAN),STDDEV(all_frest_hp,/NAN)]/(2d0*!DPI)
PRINT,';  ',  MIN(all_frest_hp/all_wcp_hp,/NAN), MAX(all_frest_hp/all_wcp_hp,/NAN), MEAN(all_frest_hp/all_wcp_hp,/NAN), STDDEV(all_frest_hp/all_wcp_hp,/NAN)
PRINT,';  ',  MIN(all_frest_hp/all_wce_hp,/NAN), MAX(all_frest_hp/all_wce_hp,/NAN), MEAN(all_frest_hp/all_wce_hp,/NAN), STDDEV(all_frest_hp/all_wce_hp,/NAN)
PRINT,';  ',  MIN(all_frest_hp/all_wlh_hp,/NAN), MAX(all_frest_hp/all_wlh_hp,/NAN), MEAN(all_frest_hp/all_wlh_hp,/NAN), STDDEV(all_frest_hp/all_wlh_hp,/NAN)
;---------------------------------------------------------------------
; => Results for (+ sign), High Filter Frequencies
;---------------------------------------------------------------------
;            Min             Max            Mean          Std. Dev.
;=====================================================================
;         2.1208562       97.976189       29.185881       22.595237
;         3.9209830       294.90753       67.864805       57.615031
;      0.0021354340      0.16061165     0.036960326     0.031378125
;       0.091504031       6.8822783       1.5837622       1.3445652
;---------------------------------------------------------------------

PRINT,';  ',  MIN(all_kpar_hp,/NAN), MAX(all_kpar_hp,/NAN), MEAN(all_kpar_hp,/NAN), STDDEV(all_kpar_hp,/NAN)
PRINT,';  ',  MIN(all_kper_hp,/NAN), MAX(all_kper_hp,/NAN), MEAN(all_kper_hp,/NAN), STDDEV(all_kper_hp,/NAN)
PRINT,';  ',  MIN(all_kparc_hp,/NAN), MAX(all_kparc_hp,/NAN), MEAN(all_kparc_hp,/NAN), STDDEV(all_kparc_hp,/NAN)
PRINT,';  ',  MIN(all_kperc_hp,/NAN), MAX(all_kperc_hp,/NAN), MEAN(all_kperc_hp,/NAN), STDDEV(all_kperc_hp,/NAN)
PRINT,';  ',  MIN(all_kparr_hp,/NAN), MAX(all_kparr_hp,/NAN), MEAN(all_kparr_hp,/NAN), STDDEV(all_kparr_hp,/NAN)
PRINT,';  ',  MIN(all_kperr_hp,/NAN), MAX(all_kperr_hp,/NAN), MEAN(all_kperr_hp,/NAN), STDDEV(all_kperr_hp,/NAN)
;---------------------------------------------------------------------
; => Results for (+ sign), High Filter Frequencies
;---------------------------------------------------------------------
;            Min             Max            Mean          Std. Dev.
;=====================================================================
;       0.028608414      0.27965497      0.12925812     0.053555306
;      0.0038936785       3.2590579      0.23416302      0.52488010
;       0.033956695      0.31824216      0.15327877     0.063875919
;      0.0049538124       3.7087473      0.27055873      0.59853722
;       0.018337564      0.36010031      0.12350150     0.088063370
;      0.0024520325       3.8525325      0.23563849      0.61275180
;---------------------------------------------------------------------










;-----------------------------------------------------------------------------------------
; => Results for Low Filter Frequencies
;-----------------------------------------------------------------------------------------
; => Define wave amplitudes [nT]
filtamp_l    = filtamp[good_mixlw]                    ; => Filtered amplitudes [nT]
pkamps_l     = DOUBLE(pkamps[good_mixlw])             ; => Peak-to-Peak amplitudes [nT]
dist_r_l     = dist_r[good_mixlw]                     ; => normal distance from shock ramp (km)
; => Define wave normal angles with respect to Bo, Vsw, and n
th_kn_rh08_l = thkn8[good_mixlw]                      ; => Theta_kn (deg) [RH08 JCK's]
th_kn_rh09_l = thkn9[good_mixlw]                      ; => Theta_kn (deg) [RH09 JCK's]
th_kV_st_l   = thkvs[good_mixlw]                      ; => Theta_kV (deg) [at start of TDSS]
th_kV_en_l   = thkve[good_mixlw]                      ; => Theta_kV (deg) [at end   of TDSS]
th_kV_av_l   = thkva[good_mixlw]                      ; => Theta_kV (deg) [Avg.]
th_kB_st_l   = thkbs[good_mixlw]                      ; => Theta_kB (deg) [at start of TDSS]
th_kB_en_l   = thkbe[good_mixlw]                      ; => Theta_kB (deg) [at end   of TDSS]
th_kB_av_l   = thkba[good_mixlw]                      ; => Theta_kB (deg) [Avg.]
; => Force angles to be from 0-90 degrees
th_kn_rh08_l = th_kn_rh08_l < (18d1 - th_kn_rh08_l)
th_kn_rh09_l = th_kn_rh09_l < (18d1 - th_kn_rh09_l)
th_kV_st_l   = th_kV_st_l   < (18d1 -   th_kV_st_l)
th_kV_en_l   = th_kV_en_l   < (18d1 -   th_kV_en_l)
th_kV_av_l   = th_kV_av_l   < (18d1 -   th_kV_av_l)
th_kB_st_l   = th_kB_st_l   < (18d1 -   th_kB_st_l)
th_kB_en_l   = th_kB_en_l   < (18d1 -   th_kB_en_l)
th_kB_av_l   = th_kB_av_l   < (18d1 -   th_kB_av_l)

PRINT,';  ', MIN(filtamp_l,/NAN), MAX(filtamp_l,/NAN), MEAN(filtamp_l,/NAN), STDDEV(filtamp_l,/NAN)
PRINT,';  ', MIN(pkamps_l,/NAN),  MAX(pkamps_l,/NAN),  MEAN(pkamps_l,/NAN),  STDDEV(pkamps_l,/NAN)
PRINT,';  ', MIN(dist_r_l,/NAN),  MAX(dist_r_l,/NAN),  MEAN(dist_r_l,/NAN),  STDDEV(dist_r_l,/NAN)
;---------------------------------------------------------------------
; => Results for peak wave amplitudes [nT, Peak-to-Peak, filtered]
;---------------------------------------------------------------------
;            Min             Max            Mean          Std. Dev.
;=====================================================================
;        0.48800001       8.0159998       1.8284737       1.7700245
;---------------------------------------------------------------------
; => Results for peak wave amplitudes [nT, Peak-to-Peak, unfiltered]
;---------------------------------------------------------------------
;            Min             Max            Mean          Std. Dev.
;=====================================================================
;         1.1870000       7.3600001       3.3838684       1.9985762
;---------------------------------------------------------------------
; => Results for normal distance from shock ramp [km]
;---------------------------------------------------------------------
;            Min             Max            Mean          Std. Dev.
;=====================================================================
;         887.69760       2073437.6       911415.34       707783.56
;---------------------------------------------------------------------

PRINT,';  ', MIN(th_kn_rh08_l,/NAN), MAX(th_kn_rh08_l,/NAN), MEAN(th_kn_rh08_l,/NAN), STDDEV(th_kn_rh08_l,/NAN)
PRINT,';  ', MIN(th_kn_rh09_l,/NAN), MAX(th_kn_rh09_l,/NAN), MEAN(th_kn_rh09_l,/NAN), STDDEV(th_kn_rh09_l,/NAN)
;---------------------------------------------------------------------
; => Results for Theta_kn [RH08, degrees]
;---------------------------------------------------------------------
;            Min             Max            Mean          Std. Dev.
;=====================================================================
;         13.377986       88.683479       49.762413       20.597064
;---------------------------------------------------------------------
; => Results for Theta_kn [RH09, degrees]
;---------------------------------------------------------------------
;            Min             Max            Mean          Std. Dev.
;=====================================================================
;         11.891229       84.900421       49.221735       19.899262
;---------------------------------------------------------------------

PRINT,';  ', MIN(th_kV_st_l,/NAN), MAX(th_kV_st_l,/NAN), MEAN(th_kV_st_l,/NAN), STDDEV(th_kV_st_l,/NAN)
PRINT,';  ', MIN(th_kV_en_l,/NAN), MAX(th_kV_en_l,/NAN), MEAN(th_kV_en_l,/NAN), STDDEV(th_kV_en_l,/NAN)
PRINT,';  ', MIN(th_kV_av_l,/NAN), MAX(th_kV_av_l,/NAN), MEAN(th_kV_av_l,/NAN), STDDEV(th_kV_av_l,/NAN)
;---------------------------------------------------------------------
; => Results for Theta_kV [degrees]
;---------------------------------------------------------------------
;            Min             Max            Mean          Std. Dev.
;=====================================================================
;         6.6389999       88.783997       47.823553       22.637897
;         6.6129999       88.805000       47.815474       22.626535
;         6.6259999       88.794495       47.819513       22.632191
;---------------------------------------------------------------------

PRINT,';  ', MIN(th_kB_st_l,/NAN), MAX(th_kB_st_l,/NAN), MEAN(th_kB_st_l,/NAN), STDDEV(th_kB_st_l,/NAN)
PRINT,';  ', MIN(th_kB_en_l,/NAN), MAX(th_kB_en_l,/NAN), MEAN(th_kB_en_l,/NAN), STDDEV(th_kB_en_l,/NAN)
PRINT,';  ', MIN(th_kB_av_l,/NAN), MAX(th_kB_av_l,/NAN), MEAN(th_kB_av_l,/NAN), STDDEV(th_kB_av_l,/NAN)
;---------------------------------------------------------------------
; => Results for Theta_kB [degrees]
;---------------------------------------------------------------------
;            Min             Max            Mean          Std. Dev.
;=====================================================================
;         14.182000       88.150002       54.410711       22.356917
;         2.5539999       89.517998       53.442236       22.287937
;         8.3680000       89.263504       54.033895       22.322323
;---------------------------------------------------------------------



;-----------------------------------------------------------------------------------------
; => Results for High Filter Frequencies
;-----------------------------------------------------------------------------------------
; => Define wave amplitudes [nT]
filtamp_h    = filtamp[good_mixhg]                    ; => Filtered amplitudes [nT]
pkamps_h     = DOUBLE(pkamps[good_mixhg])             ; => Peak-to-Peak amplitudes [nT]
dist_r_h     = dist_r[good_mixhg]                     ; => normal distance from shock ramp (km)
; => Define wave normal angles with respect to Bo, Vsw, and n
th_kn_rh08_h = thkn8[good_mixhg]                      ; => Theta_kn (deg) [RH08 JCK's]
th_kn_rh09_h = thkn9[good_mixhg]                      ; => Theta_kn (deg) [RH09 JCK's]
th_kV_st_h   = thkvs[good_mixhg]                      ; => Theta_kV (deg) [at start of TDSS]
th_kV_en_h   = thkve[good_mixhg]                      ; => Theta_kV (deg) [at end   of TDSS]
th_kV_av_h   = thkva[good_mixhg]                      ; => Theta_kV (deg) [Avg.]
th_kB_st_h   = thkbs[good_mixhg]                      ; => Theta_kB (deg) [at start of TDSS]
th_kB_en_h   = thkbe[good_mixhg]                      ; => Theta_kB (deg) [at end   of TDSS]
th_kB_av_h   = thkba[good_mixhg]                      ; => Theta_kB (deg) [Avg.]
; => Force angles to be from 0-90 degrees
th_kn_rh08_h = th_kn_rh08_h < (18d1 - th_kn_rh08_h)
th_kn_rh09_h = th_kn_rh09_h < (18d1 - th_kn_rh09_h)
th_kV_st_h   = th_kV_st_h   < (18d1 -   th_kV_st_h)
th_kV_en_h   = th_kV_en_h   < (18d1 -   th_kV_en_h)
th_kV_av_h   = th_kV_av_h   < (18d1 -   th_kV_av_h)
th_kB_st_h   = th_kB_st_h   < (18d1 -   th_kB_st_h)
th_kB_en_h   = th_kB_en_h   < (18d1 -   th_kB_en_h)
th_kB_av_h   = th_kB_av_h   < (18d1 -   th_kB_av_h)

PRINT,';  ', MIN(filtamp_h,/NAN), MAX(filtamp_h,/NAN), MEAN(filtamp_h,/NAN), STDDEV(filtamp_h,/NAN)
PRINT,';  ', MIN(pkamps_h,/NAN),  MAX(pkamps_h,/NAN),  MEAN(pkamps_h,/NAN),  STDDEV(pkamps_h,/NAN)
PRINT,';  ', MIN(dist_r_h,/NAN),  MAX(dist_r_h,/NAN),  MEAN(dist_r_h,/NAN),  STDDEV(dist_r_h,/NAN)
;---------------------------------------------------------------------
; => Results for peak wave amplitudes [nT, Peak-to-Peak, filtered]
;---------------------------------------------------------------------
;            Min             Max            Mean          Std. Dev.
;=====================================================================
;       0.086000003       1.4980000      0.49514545      0.31387445
;---------------------------------------------------------------------
; => Results for peak wave amplitudes [nT, Peak-to-Peak, unfiltered]
;---------------------------------------------------------------------
;            Min             Max            Mean          Std. Dev.
;=====================================================================
;         1.1870000       7.3600001       2.8654545       1.9085399
;---------------------------------------------------------------------
; => Results for normal distance from shock ramp [km]
;---------------------------------------------------------------------
;            Min             Max            Mean          Std. Dev.
;=====================================================================
;         887.69760       2073437.6       696812.73       685079.61
;---------------------------------------------------------------------

PRINT,';  ', MIN(th_kn_rh08_h,/NAN), MAX(th_kn_rh08_h,/NAN), MEAN(th_kn_rh08_h,/NAN), STDDEV(th_kn_rh08_h,/NAN)
PRINT,';  ', MIN(th_kn_rh09_h,/NAN), MAX(th_kn_rh09_h,/NAN), MEAN(th_kn_rh09_h,/NAN), STDDEV(th_kn_rh09_h,/NAN)
;---------------------------------------------------------------------
; => Results for Theta_kn [RH08, degrees]
;---------------------------------------------------------------------
;            Min             Max            Mean          Std. Dev.
;=====================================================================
;         7.7391048       89.402732       62.250368       19.722091
;---------------------------------------------------------------------
; => Results for Theta_kn [RH09, degrees]
;---------------------------------------------------------------------
;            Min             Max            Mean          Std. Dev.
;=====================================================================
;         7.6778789       89.892955       62.300333       20.278575
;---------------------------------------------------------------------

PRINT,';  ', MIN(th_kV_st_h,/NAN), MAX(th_kV_st_h,/NAN), MEAN(th_kV_st_h,/NAN), STDDEV(th_kV_st_h,/NAN)
PRINT,';  ', MIN(th_kV_en_h,/NAN), MAX(th_kV_en_h,/NAN), MEAN(th_kV_en_h,/NAN), STDDEV(th_kV_en_h,/NAN)
PRINT,';  ', MIN(th_kV_av_h,/NAN), MAX(th_kV_av_h,/NAN), MEAN(th_kV_av_h,/NAN), STDDEV(th_kV_av_h,/NAN)
;---------------------------------------------------------------------
; => Results for Theta_kV [degrees]
;---------------------------------------------------------------------
;            Min             Max            Mean          Std. Dev.
;=====================================================================
;         10.388000       89.652000       59.839664       22.182241
;         10.363007       89.622002       59.852200       22.179601
;         10.375504       89.637001       59.845932       22.180908
;---------------------------------------------------------------------

PRINT,';  ', MIN(th_kB_st_h,/NAN), MAX(th_kB_st_h,/NAN), MEAN(th_kB_st_h,/NAN), STDDEV(th_kB_st_h,/NAN)
PRINT,';  ', MIN(th_kB_en_h,/NAN), MAX(th_kB_en_h,/NAN), MEAN(th_kB_en_h,/NAN), STDDEV(th_kB_en_h,/NAN)
PRINT,';  ', MIN(th_kB_av_h,/NAN), MAX(th_kB_av_h,/NAN), MEAN(th_kB_av_h,/NAN), STDDEV(th_kB_av_h,/NAN)
;---------------------------------------------------------------------
; => Results for Theta_kB [degrees]
;---------------------------------------------------------------------
;            Min             Max            Mean          Std. Dev.
;=====================================================================
;         1.1950001       88.028999       39.307345       22.907570
;         3.1410000       88.834999       40.077409       21.991753
;         2.1900001       89.871506       39.728678       22.416823
;---------------------------------------------------------------------


