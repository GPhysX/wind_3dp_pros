;-----------------------------------------------------------------------------------------
; -Constants
;-----------------------------------------------------------------------------------------
f      = !VALUES.F_NAN
d      = !VALUES.D_NAN
epo    = 8.854187817d-12   ; -Permittivity of free space (F/m)
muo    = 4d0*!DPI*1d-7     ; -Permeability of free space (N/A^2 or H/m)
me     = 9.1093897d-31     ; -Electron mass (kg)
mp     = 1.6726231d-27     ; -Proton mass (kg)
ma     = 4d0*(mp + me)     ; -Alpha-Particle mass (kg)
qq     = 1.60217733d-19    ; -Fundamental charge (C)
kB     = 1.380658d-23      ; -Boltzmann Constant (J/K)
K_eV   = 1.160474d4        ; -Conversion = degree Kelvin/eV
c      = 2.99792458d8      ; -Speed of light in vacuum (m/s)
c2     = (c*1d-3)^2        ; -" " squared (km/s)^2
mm     = [-1d0,0d0,1d0]    ; -[Normal Cyclotron, Landau, Anomalous Cyclotron]
mass_e = 0.5109906d6       ; -Electron mass in eV/c^2
mass_p = mp*c^2/qq         ; -Proton mass in eV/c^2
u_mass = mass_e/c2         ; -Electron mass [eV/(km/s)^2]
p_mass = mass_p/c2         ; -Proton mass [eV/(km/s)^2]
pressc = 1.60217646d-13    ; => Conversion from eV/cm^3 to J/m^3 (or Pascals)
picops = pressc*1d12       ; => Conversion from eV/cm^3 to pJ/m^3 (or pPa)
;-----------------------------------------------------------------------------------------
; => Dates and time ranges
;-----------------------------------------------------------------------------------------
date = '092498'
t    = ['1998-09-24/22:20:00','1998-09-25/00:30:00']
tramp = '1998-09-24/23:20:37.374'
tr3   = time_double(t)
tura  = time_double(tramp)

mydate = my_str_date(DATE=date)
sdate  = mydate.S_DATE[0]  ; -('MMDDYY')
ldate  = mydate.DATE[0]    ; -('YYYYMMDD')
tdate  = mydate.TDATE[0]   ; => 'YYYY-MM-DD'
;-----------------------------------------------------------------------------------------
; => Load MFI data
;-----------------------------------------------------------------------------------------
htr_mfi2tplot,DATE=date
get_data,'WIND_B3_HTR(GSE,nT)',DATA=temporary_mfi
magf_htr = temporary_mfi
str_element,magf_htr,'R',REPLICATE(1L,N_ELEMENTS(magf_htr.X)),/ADD_REPLACE


mag3  = read_wind_mfi(TRANGE=tr3)
t3x   = mag3.MAG.X
magf4 = mag3.BGSE.Y

magf_3s = {X:t3x,Y:magf4}
;-----------------------------------------------------------------------------------------
; => Find shock info
;-----------------------------------------------------------------------------------------
gnorm      = [-0.914,-0.220,-0.341]   ; => Using RH08 from JCK's site
dgnorm     = [ 0.004, 0.009, 0.327]

gnorm2     = [-0.939,-0.175,-0.296]   ; => Using RH09 from JCK's site
dgnorm2    = [ 0.024, 0.070, 0.287]
;-----------------------------------------------------------------------------------------
; => Get TDS data
;-----------------------------------------------------------------------------------------
; => Get TDSS data
my_tdss    = get_wind_tds_data(DATE=date,FIXFILE=1,/TDSS)
x          = LINDGEN(N_ELEMENTS(my_tdss.SCET))
IF (sdate[0] EQ '092498') THEN gels = [x[24L:43L],x[47L:50L],x[53L:72L],x[76L:91L]]
; => Get ONLY whistler TDSS
IF (gels[0] NE -1) THEN scetss  = my_tdss.SCET[gels[*]]             ELSE scetss  = ''
IF (gels[0] NE -1) THEN fieldss = REFORM(my_tdss.EFIELD[gels[*],*]) ELSE fieldss = dumbf
IF (gels[0] NE -1) THEN timess  = REFORM(my_tdss.TIME[gels[*],*])   ELSE timess  = dumbd
IF (gels[0] NE -1) THEN evnums  = my_tdss.EVENT_N[gels[*]]          ELSE evnums  = -1
IF (gels[0] NE -1) THEN atypes  = my_tdss.A_TYPE[gels[*]]           ELSE atypes  = ''
IF (gels[0] NE -1) THEN sangss  = my_tdss.S_ANG[gels[*]]            ELSE sangss  = 0.
IF (gels[0] NE -1) THEN eangss  = my_tdss.E_ANG[gels[*]]            ELSE eangss  = 0.

ascets     = scetss
; => STRMID(scet,0,2)+STRMID(scet,3,2)+'-'+STRMID(scet,6,2)+'x'+STRMID(scet,9,3)
ascets2    = string_replace_char(string_replace_char(ascets,'/','-'),' ','_')
ascets2    = STRMID(ascets2[*],0L,23L)  ; => Remove the _UT
fdates     = STRMID(ascets2[*],0L,11L)
fscets     = STRMID(ascets2[*],11L)
fscets     = STRMID(fscets[*],0,2)+STRMID(fscets[*],3,2)+'-'+$
             STRMID(fscets[*],6,2)+'x'+STRMID(fscets[*],9,3)
fn_scets   = fdates[*]+fscets[*]

afields    = fieldss
atimes     = timess
aevnum     = evnums
aatype     = atypes
asangs     = sangss
aeangs     = eangss
; => Eliminate bad elements
bad        = WHERE(ascets EQ '',bd,COMPLEMENT=good,NCOMPLEMENT=gd)
IF (gd GT 0) THEN ascets  = ascets[good]
IF (gd GT 0) THEN afields = afields[good,*]
IF (gd GT 0) THEN atimes  = atimes[good,*]
IF (gd GT 0) THEN aevnum  = aevnum[good]
IF (gd GT 0) THEN aatype  = aatype[good]
IF (gd GT 0) THEN asangs  = asangs[good]
IF (gd GT 0) THEN aeangs  = aeangs[good]
; => sort elements
mts        = my_time_string(ascets,STR=1,FORM=1,PREC=3,/NOMSSG)
ascets     = mts.DATE_TIME
aunix      = mts.UNIX
sp         = SORT(aunix)
ascets     = ascets[sp]
aunix      = aunix[sp]
afields    = afields[sp,*]
atimes     = atimes[sp,*]
aevnum     = aevnum[sp]
aatype     = aatype[sp]
asangs     = asangs[sp]
aeangs     = aeangs[sp]
;-----------------------------------------------------------------------------------------
; => define fields
;-----------------------------------------------------------------------------------------
nsams   = N_ELEMENTS(REFORM(my_tdss.TIME[0,*]))
efxyz   = DBLARR(N_ELEMENTS(UNIQ(ascets,SORT(ascets))),nsams,3L)  ; => Dummy array of E-fields (mV/m)
bfxyz   = DBLARR(N_ELEMENTS(UNIQ(ascets,SORT(ascets))),nsams,3L)  ; => Dummy array of B-fields (nT)
unqel   = UNIQ(aevnum,SORT(aevnum))
n_uq    = N_ELEMENTS(unqel) - 1L
tempevn = aevnum[unqel]
n_avgs  = N_ELEMENTS(aevnum)/N_ELEMENTS(unqel) - 1L

jj      = 0L
FOR j=0L, n_uq DO BEGIN                                                    $
  t_evn   = tempevn[j]                                                   & $
  ggd     = WHERE(t_evn[0] EQ aevnum)                                    & $
  t_types = STRMID(aatype[ggd],0L,2L)                                    & $
  t_field = afields[ggd,*]                                               & $
  FOR k=0L, n_avgs DO BEGIN                                                $
    t_type = STRMID(t_types[k],0L,2L)                                    & $
    IF (t_type EQ 'EX') THEN efxyz[j,*,0] = t_field[k,*]                 & $
    IF (t_type EQ 'EY') THEN efxyz[j,*,1] = t_field[k,*]                 & $
    IF (t_type EQ 'EZ') THEN efxyz[j,*,2] = t_field[k,*]                 & $
    IF (t_type EQ 'BX') THEN bfxyz[j,*,0] = t_field[k,*]                 & $
    IF (t_type EQ 'BY') THEN bfxyz[j,*,1] = t_field[k,*]                 & $
    IF (t_type EQ 'BZ') THEN bfxyz[j,*,2] = t_field[k,*]                 & $
  ENDFOR                                                                 & $
  jj += 1L

FOR j=0L, n_uq DO BEGIN                                                    $
  jstr  = 'T'+STRTRIM(j,2)                                               & $
  str_element,waves_ef,jstr,REFORM(efxyz[j,*,*]),/ADD_REPLACE            & $
  str_element,waves_bf,jstr,REFORM(bfxyz[j,*,*]),/ADD_REPLACE
;-----------------------------------------------------------------------------------------
; => find unique elements of fields
;-----------------------------------------------------------------------------------------
unqel   = UNIQ(ascets,SORT(ascets))
nscets  = REFORM(ascets[unqel])
nunix   = REFORM(aunix[unqel])
nsangs  = REFORM(asangs[unqel])
neangs  = REFORM(aeangs[unqel])
nevnm   = REFORM(aevnum[unqel])
natype  = aatype[unqel]
fn_scet = fn_scets[unqel]
ntimes  = REFORM(atimes[unqel,*],N_ELEMENTS(unqel),nsams)
n_uq    = N_ELEMENTS(unqel) - 1L
;-----------------------------------------------------------------------------------------
; => interpolate angles
;-----------------------------------------------------------------------------------------
nangsi = DBLARR(nsams,n_uq+1L)
FOR k=0L, n_uq DO BEGIN                                              $
  kstr  = 'T'+STRTRIM(k,2)                                         & $
  tt0         = REFORM(ntimes[k,*])*1d-3 + nunix[k]                & $
  tts0        = [MIN(tt0,/NAN),MAX(tt0,/NAN)]                      & $
  temp0       = interp([nsangs[k],neangs[k]],tts0,tt0,/NO_EXTRAP)  & $
  str_element,tds_unx,kstr,tt0,/ADD_REPLACE                        & $
  nangsi[*,k] = temp0

san_str    = STRTRIM(STRING(FORMAT='(f15.1)',nsangs),2)
ean_str    = STRTRIM(STRING(FORMAT='(f15.1)',neangs),2)
ang_str    = san_str[*]+'!Uo!N'+'-'+ean_str[*]+'!Uo!N'
fang_str   = '+E!Dx!N Angle to Sun:  '+ang_str[*]
;-----------------------------------------------------------------------------------------
; => filter fields
;-----------------------------------------------------------------------------------------
lfc1  = [3d0,5d0,1d1, 5d1,1d2]   ; => For 1998-09-24/23:20:38.842 UT
hfc1  = [2d1,2d1,45d0,2d2,2d2]   ; => For 1998-09-24/23:20:38.842 UT
lfc2  = [3d0,6d0,15d0, 3d1]      ; => For 1998-09-24/23:22:26.632 UT
hfc2  = [2d1,3d1,15d1,15d1]      ; => For 1998-09-24/23:22:26.632 UT
lfc3  = [3d0,6d0,15d0, 3d1]      ; => For 1998-09-24/23:22:48.150 UT
hfc3  = [2d1,3d1,15d1,15d1]      ; => For 1998-09-24/23:22:48.150 UT
lfc4  = [3d0]                    ; => For 1998-09-24/23:30:00.465 UT
hfc4  = [3d1]                    ; => For 1998-09-24/23:30:00.465 UT
lfc5  = [3d0,1d1,4d1,2d2]        ; => For 1998-09-24/23:30:48.542 UT
hfc5  = [4d1,4d1,1d2,4d2]        ; => For 1998-09-24/23:30:48.542 UT
lfc6  = [3d0]                    ; => For 1998-09-24/23:43:18.951 UT
hfc6  = [3d1]                    ; => For 1998-09-24/23:43:18.951 UT
lfc7  = [3d0,1d1,3d1,1d2]        ; => For 1998-09-24/23:45:52.184 UT
hfc7  = [3d1,1d2,1d2,3d2]        ; => For 1998-09-24/23:45:52.184 UT
lfc8  = [3d0,1d1,15d0,30d0]      ; => For 1998-09-24/23:45:53.379 UT
hfc8  = [3d1,3d1,6d1 ,1d2 ]      ; => For 1998-09-24/23:45:53.379 UT
lfc9  = [3d0,4d0,1d1]            ; => For 1998-09-24/23:48:39.020 UT
hfc9  = [3d1,4d1,4d1]            ; => For 1998-09-24/23:48:39.020 UT
lfc10 = [3d0,5d0,7d0,65d0]       ; => For 1998-09-24/23:48:42.131 UT
hfc10 = [3d1,3d1,3d1,3d2]        ; => For 1998-09-24/23:48:42.131 UT
lfc11 = [3d0,6d0,1d1]            ; => For 1998-09-24/23:48:51.622 UT
hfc11 = [3d1,3d1,1d2]            ; => For 1998-09-24/23:48:51.622 UT
lfc12 = [3d0,5d0,7d0]            ; => For 1998-09-25/00:04:04.545 UT
hfc12 = [3d1,5d1,5d1]            ; => For 1998-09-25/00:04:04.545 UT
lfc13 = [3d0,5d0,4d1]            ; => For 1998-09-25/00:05:23.432 UT
hfc13 = [3d1,5d1,2d2]            ; => For 1998-09-25/00:05:23.432 UT
lfc14 = [3d0,7d0,1d1,2d1]        ; => For 1998-09-25/00:14:50.603 UT
hfc14 = [3d1,5d1,1d2,1d2]        ; => For 1998-09-25/00:14:50.603 UT
lfc15 = [3d0,1d1,3d1]            ; => For 1998-09-25/00:28:42.305 UT
hfc15 = [3d1,5d1,2d2]            ; => For 1998-09-25/00:28:42.305 UT

tags  = ['t1','t2','t3','t4','t5','t6','t7','t8','t9',$
         't10','t11','t12','t13','t14','t15']

lf_str = CREATE_STRUCT(tags,lfc1,lfc2,lfc3,lfc4,lfc5,lfc6,lfc7,lfc8,lfc9,$
                       lfc10,lfc11,lfc12,lfc13,lfc14,lfc15)
hf_str = CREATE_STRUCT(tags,hfc1,hfc2,hfc3,hfc4,hfc5,hfc6,hfc7,hfc8,hfc9,$
                       hfc10,hfc11,hfc12,hfc13,hfc14,hfc15)

DELVAR,filter_sf0,filter_ef0,filter_bf0,filter_sf,filter_ef,filter_bf
jj     = 0L
FOR j=0L, n_uq DO BEGIN                                                             $
  evln  = (MAX(ntimes[j,*],/NAN) - MIN(ntimes[j,*],/NAN))*1d-3                    & $
  tsam  = (nsams - 1L)/evln                                                       & $
  jstr  = 'T'+STRTRIM(j,2)                                                        & $
  lfc0  = lf_str.(j)                                                              & $
  hfc0  = hf_str.(j)                                                              & $
  n_fr  = N_ELEMENTS(lfc0) - 1L                                                   & $
  t_ef  = REFORM(waves_ef.(j))                                                    & $
  t_bf  = REFORM(waves_bf.(j))                                                    & $
  FOR k=0L, n_fr DO BEGIN                                                           $
    kstr  = 'T'+STRTRIM(k,2)                                                      & $
    flow  = lfc0[k]                                                               & $
    fhigh = hfc0[k]                                                               & $
    filte = vector_bandpass(t_ef,tsam[0],flow[0],fhigh[0],/MIDF)                  & $
    filtb = vector_bandpass(t_bf,tsam[0],flow[0],fhigh[0],/MIDF)                  & $
    str_element,filter_ef0,kstr,filte,/ADD_REPLACE                                & $
    str_element,filter_bf0,kstr,filtb,/ADD_REPLACE                                & $
    vec_ef = REFORM(filte)*1d-3                                                   & $
    vec_bf = REFORM(filtb)*1d-9                                                   & $
    poy_sf = my_crossp_2(vec_ef,vec_bf,/NOM)/muo*1d6                              & $
    str_element,filter_sf0,kstr,poy_sf,/ADD_REPLACE                               & $
  ENDFOR                                                                          & $
  str_element,filter_sf,jstr,filter_sf0,/ADD_REPLACE                              & $
  str_element,filter_ef,jstr,filter_ef0,/ADD_REPLACE                              & $
  str_element,filter_bf,jstr,filter_bf0,/ADD_REPLACE                              & $
  FOR k=0L, n_fr DO BEGIN                                                           $
    kstr  = 'T'+STRTRIM(k,2)                                                      & $
    str_element,filter_ef0,kstr,/DELETE                                           & $
    str_element,filter_bf0,kstr,/DELETE                                           & $
    str_element,filter_sf0,kstr,/DELETE                                           & $
  ENDFOR                                                                          & $
ENDFOR                                                                            & $
jj += 1L

DELVAR,filter_sf0,filter_ef0,filter_bf0,vec_ef,vec_bf,filte,filtb,poy_sf,t_ef,b_ef

; => [erg cm^(-2) s^(-1) = 10^(-3) W m^(-2)]
; => [milliergs cm^(-2) s^(-1) = 10^(-6) W m^(-2)]
;-----------------------------------------------------------------------------------------
; => rotate fields into GSE and FAC Coordinates [use Shock Norm. Vec. as second vector]
;-----------------------------------------------------------------------------------------
unx_t0     = ntimes*1d-3 + (nunix # REPLICATE(1d0,2048L))
t_mag0     = tds_bfield(unx_t0,nsangs,neangs,B3SMAG=magf_3s,HTRMAG=magf_htr,DATE=date,/NOCURR)
b3s_gse    = t_mag0.G3MAG                ; => [# of TDSF, # of points, 3L]
htr_gse    = t_mag0.GHTR
; => Change the following line when HTR MFI is available...
mag_gse    = htr_gse
sun_dir    = gnorm

jj     = 0L
FOR j=0L, n_uq DO BEGIN                                                     $
  jstr    = 'T'+STRTRIM(j,2)                                              & $
  unx0    = REFORM(unx_t0[j,*])                                           & $
  g_magf  = REFORM(mag_gse[j,*,*])                                        & $
  angles  = REFORM(nangsi[*,j])                                           & $
  filter_ef0 = filter_ef.(j)                                              & $
  filter_bf0 = filter_bf.(j)                                              & $
  filter_sf0 = filter_sf.(j)                                              & $
  n_fr       = N_ELEMENTS(lf_str.(j)) - 1L                                & $
  FOR k=0L, n_fr DO BEGIN                                                   $
    kstr    = 'T'+STRTRIM(k,2)                                            & $
    vec_ef  = REFORM(filter_ef0.(k))*1d0                                  & $
    vec_bf  = REFORM(filter_bf0.(k))*1d0                                  & $
    vec_sf  = REFORM(filter_sf0.(k))*1d0                                  & $
    rot_efg = DBLARR(nsams,3L)                                            & $
    rot_bfg = DBLARR(nsams,3L)                                            & $
    rot_sfg = DBLARR(nsams,3L)                                            & $
    rot_ef  = DBLARR(nsams,3L)                                            & $
    rot_bf  = DBLARR(nsams,3L)                                            & $
    rot_sf  = DBLARR(nsams,3L)                                            & $
    FOR i=0L, nsams - 1L DO BEGIN                                           $
      rotm0 = TRANSPOSE(eulermat(0d0,angles[i],180d0,/DEG))               & $
      t_eef = REFORM(rotm0 ## REFORM(vec_ef[i,*]))                        & $
      t_ebf = REFORM(rotm0 ## REFORM(vec_bf[i,*]))                        & $
      t_esf = REFORM(rotm0 ## REFORM(vec_sf[i,*]))                        & $
      rot_efg[i,*] = t_eef                                                & $
      rot_bfg[i,*] = t_ebf                                                & $
      rot_sfg[i,*] = t_esf                                                & $
      magf  = REFORM(g_magf[i,*])                                         & $
      rotm0 = rot_mat(magf,sun_dir)                                       & $
      t_eef = REFORM(rotm0 ## REFORM(vec_ef[i,*]))                        & $
      t_ebf = REFORM(rotm0 ## REFORM(vec_bf[i,*]))                        & $
      t_esf = REFORM(rotm0 ## REFORM(vec_sf[i,*]))                        & $
      rot_ef[i,*] = t_eef                                                 & $
      rot_bf[i,*] = t_ebf                                                 & $
      rot_sf[i,*] = t_esf                                                 & $
    ENDFOR                                                                & $
    str_element,rotated_gse_ef0,kstr,rot_efg,/ADD_REPLACE                 & $
    str_element,rotated_gse_bf0,kstr,rot_bfg,/ADD_REPLACE                 & $
    str_element,rotated_gse_sf0,kstr,rot_sfg,/ADD_REPLACE                 & $
    str_element,rotated_fac_ef0,kstr,rot_ef,/ADD_REPLACE                  & $
    str_element,rotated_fac_bf0,kstr,rot_bf,/ADD_REPLACE                  & $
    str_element,rotated_fac_sf0,kstr,rot_sf,/ADD_REPLACE                  & $
  ENDFOR                                                                  & $
  str_element,rotated_gse_ef,jstr,rotated_gse_ef0,/ADD_REPLACE            & $
  str_element,rotated_gse_bf,jstr,rotated_gse_bf0,/ADD_REPLACE            & $
  str_element,rotated_gse_sf,jstr,rotated_gse_sf0,/ADD_REPLACE            & $
  str_element,rotated_fac_ef,jstr,rotated_fac_ef0,/ADD_REPLACE            & $
  str_element,rotated_fac_bf,jstr,rotated_fac_bf0,/ADD_REPLACE            & $
  str_element,rotated_fac_sf,jstr,rotated_fac_sf0,/ADD_REPLACE            & $
  FOR k=0L, n_fr DO BEGIN                                                   $
    kstr    = 'T'+STRTRIM(k,2)                                            & $
    str_element,rotated_gse_ef0,kstr,/DELETE                              & $
    str_element,rotated_gse_bf0,kstr,/DELETE                              & $
    str_element,rotated_gse_sf0,kstr,/DELETE                              & $
    str_element,rotated_fac_ef0,kstr,/DELETE                              & $
    str_element,rotated_fac_bf0,kstr,/DELETE                              & $
    str_element,rotated_fac_sf0,kstr,/DELETE                              & $
  ENDFOR                                                                  & $
ENDFOR                                                                            & $
jj += 1L

;      rotm0 = eulermat(0d0,angles[i],180d0,/DEG)                          & $
DELVAR,filter_sf0,filter_ef0,filter_bf0
DELVAR,rotated_gse_ef0,rotated_gse_bf0,rotated_gse_sf0,rot_efg,rot_bfg,rot_sfg
DELVAR,rot_ef,rot_bf,rot_sf,vec_ef,vec_bf,vec_sf,t_eef,t_ebf,t_esf

; => *_gse_*  =  fields rotated into GSE Coordinates
; => *_fac_*  =  fields rotated into FACs
;-----------------------------------------------------------------------------------------
; => create structures of start/end times to over plot on waveforms
;-----------------------------------------------------------------------------------------
tags      = ['t0','t1','t2','t3','t4','t5','t6','t7','t8','t9','t10','t11','t12','t13',$
             't14','t15','t16','t17','t18','t19','t20','t21','t22','t23','t24']
prefd     = '1998-09-24/'


jj        = 0L
; => For  3 Hz < f < 20 Hz  at  1998-09-24/23:20:38.842 UT
tr0       = time_double([prefd[0]+'23:20:38.9636',prefd[0]+'23:20:39.1204'])
tr_str_00 = CREATE_STRUCT(tags[0L:0L],tr0)

; => For  5 Hz < f < 20 Hz  at  1998-09-24/23:20:38.842 UT
tr0       = time_double([prefd[0]+'23:20:38.8420',prefd[0]+'23:20:38.9945'])
tr1       = time_double([prefd[0]+'23:20:38.9951',prefd[0]+'23:20:39.1476'])
tr2       = time_double([prefd[0]+'23:20:39.6953',prefd[0]+'23:20:39.7999'])
tr_str_01 = CREATE_STRUCT(tags[0L:2L],tr0,tr1,tr2)

; => For  10 Hz < f < 45 Hz  at  1998-09-24/23:20:38.842 UT
tr_str_02 = 0

; => For  50 Hz < f < 200 Hz  at  1998-09-24/23:20:38.842 UT
tr_str_03 = 0

; => For  100 Hz < f < 200 Hz  at  1998-09-24/23:20:38.842 UT
tr0       = time_double([prefd[0]+'23:20:39.0761',prefd[0]+'23:20:39.0985'])
tr1       = time_double([prefd[0]+'23:20:39.4303',prefd[0]+'23:20:39.4559'])
tr2       = time_double([prefd[0]+'23:20:39.4804',prefd[0]+'23:20:39.5071'])
tr3       = time_double([prefd[0]+'23:20:39.7236',prefd[0]+'23:20:39.7524'])
tr_str_04 = CREATE_STRUCT(tags[0L:3L],tr0,tr1,tr2,tr3)
tr_str_0  = CREATE_STRUCT(['T0','T1','T2','T3','T4'],tr_str_00,tr_str_01,tr_str_02,tr_str_03,tr_str_04)


jj        = 1L
; => For  3 Hz < f < 20 Hz  at  1998-09-24/23:22:26.632 UT
tr_str_10 = 0

; => For  6 Hz < f < 30 Hz  at  1998-09-24/23:22:26.632 UT
tr0       = time_double([prefd[0]+'23:22:27.2005',prefd[0]+'23:22:27.2875'])
tr1       = time_double([prefd[0]+'23:22:27.6037',prefd[0]+'23:22:27.6437'])
tr_str_11 = CREATE_STRUCT(tags[0L:1L],tr0,tr1)

; => For  15 Hz < f < 150 Hz  at  1998-09-24/23:22:26.632 UT
tr_str_12 = 0

; => For  30 Hz < f < 150 Hz  at  1998-09-24/23:22:26.632 UT
tr0       = time_double([prefd[0]+'23:22:26.7173',prefd[0]+'23:22:26.7536'])
tr1       = time_double([prefd[0]+'23:22:27.1584',prefd[0]+'23:22:27.2160'])
tr2       = time_double([prefd[0]+'23:22:27.2304',prefd[0]+'23:22:27.2528'])
tr3       = time_double([prefd[0]+'23:22:27.2624',prefd[0]+'23:22:27.2955'])
tr4       = time_double([prefd[0]+'23:22:27.2960',prefd[0]+'23:22:27.3296'])
tr5       = time_double([prefd[0]+'23:22:27.3813',prefd[0]+'23:22:27.4117'])
tr6       = time_double([prefd[0]+'23:22:27.4123',prefd[0]+'23:22:27.4464'])
tr_str_13 = CREATE_STRUCT(tags[0L:6L],tr0,tr1,tr2,tr3,tr4,tr5,tr6)
tr_str_1  = CREATE_STRUCT(['T0','T1','T2','T3'],tr_str_10,tr_str_11,tr_str_12,tr_str_13)


jj        = 2L
; => For  3 Hz < f < 20 Hz  at  1998-09-24/23:22:26.632 UT
tr_str_20 = 0

; => For  6 Hz < f < 30 Hz  at  1998-09-24/23:22:48.150 UT
tr0       = time_double([prefd[0]+'23:22:48.1500',prefd[0]+'23:22:48.2396'])
tr1       = time_double([prefd[0]+'23:22:48.2401',prefd[0]+'23:22:48.2855'])
tr2       = time_double([prefd[0]+'23:22:48.3351',prefd[0]+'23:22:48.3831'])
tr3       = time_double([prefd[0]+'23:22:48.5244',prefd[0]+'23:22:48.6380'])
tr4       = time_double([prefd[0]+'23:22:48.7788',prefd[0]+'23:22:48.8412'])
tr5       = time_double([prefd[0]+'23:22:49.0124',prefd[0]+'23:22:49.0748'])
tr_str_21 = CREATE_STRUCT(tags[0L:5L],tr0,tr1,tr2,tr3,tr4,tr5)

; => For  15 Hz < f < 150 Hz  at  1998-09-24/23:22:26.632 UT
tr_str_22 = 0

; => For  30 Hz < f < 150 Hz  at  1998-09-24/23:22:48.150 UT
tr0       = time_double([prefd[0]+'23:22:48.1836',prefd[0]+'23:22:48.2508'])
tr1       = time_double([prefd[0]+'23:22:48.3473',prefd[0]+'23:22:48.3713'])
tr2       = time_double([prefd[0]+'23:22:48.3996',prefd[0]+'23:22:48.4220'])
tr3       = time_double([prefd[0]+'23:22:48.5068',prefd[0]+'23:22:48.5447'])
tr4       = time_double([prefd[0]+'23:22:48.6225',prefd[0]+'23:22:48.6577'])
tr5       = time_double([prefd[0]+'23:22:48.6583',prefd[0]+'23:22:48.7127'])
tr6       = time_double([prefd[0]+'23:22:48.9489',prefd[0]+'23:22:48.9729'])
tr7       = time_double([prefd[0]+'23:22:49.0817',prefd[0]+'23:22:49.1057'])
tr_str_23 = CREATE_STRUCT(tags[0L:7L],tr0,tr1,tr2,tr3,tr4,tr5,tr6,tr7)
tr_str_2  = CREATE_STRUCT(['T0','T1','T2','T3'],tr_str_20,tr_str_21,tr_str_22,tr_str_23)


jj        = 4L
; => For  3 Hz < f < 40 Hz  at  1998-09-24/23:30:48.542 UT
tr0       = time_double([prefd[0]+'23:30:48.8737',prefd[0]+'23:30:49.0177'])
tr1       = time_double([prefd[0]+'23:30:49.3260',prefd[0]+'23:30:49.4988'])
tr2       = time_double([prefd[0]+'23:30:49.3692',prefd[0]+'23:30:49.4988'])
tr_str_40 = CREATE_STRUCT(tags[0L:2L],tr0,tr1,tr2)

; => For  10 Hz < f < 40 Hz  at  1998-09-24/23:30:48.542 UT
tr_str_41 = 0

; => For  40 Hz < f < 100 Hz  at  1998-09-24/23:30:48.542 UT
tr_str_42 = 0

; => For  200 Hz < f < 400 Hz  at  1998-09-24/23:30:48.542 UT
tr0       = time_double([prefd[0]+'23:30:48.5500',prefd[0]+'23:30:48.5697'])
tr1       = time_double([prefd[0]+'23:30:48.5799',prefd[0]+'23:30:48.5991'])
tr2       = time_double([prefd[0]+'23:30:48.6188',prefd[0]+'23:30:48.6508'])
tr3       = time_double([prefd[0]+'23:30:48.6524',prefd[0]+'23:30:48.6668'])
tr4       = time_double([prefd[0]+'23:30:48.6679',prefd[0]+'23:30:48.6999'])
tr5       = time_double([prefd[0]+'23:30:48.7004',prefd[0]+'23:30:48.7244'])
tr6       = time_double([prefd[0]+'23:30:48.8055',prefd[0]+'23:30:48.8497'])
tr7       = time_double([prefd[0]+'23:30:48.8503',prefd[0]+'23:30:48.9265'])
tr8       = time_double([prefd[0]+'23:30:48.9265',prefd[0]+'23:30:48.9996'])
tr9       = time_double([prefd[0]+'23:30:49.0001',prefd[0]+'23:30:49.0396'])
tr10      = time_double([prefd[0]+'23:30:49.0449',prefd[0]+'23:30:49.0609'])
tr11      = time_double([prefd[0]+'23:30:49.0615',prefd[0]+'23:30:49.0967'])
tr12      = time_double([prefd[0]+'23:30:49.1100',prefd[0]+'23:30:49.1196'])
tr13      = time_double([prefd[0]+'23:30:49.1201',prefd[0]+'23:30:49.1457'])
tr14      = time_double([prefd[0]+'23:30:49.1463',prefd[0]+'23:30:49.2023'])
tr15      = time_double([prefd[0]+'23:30:49.2028',prefd[0]+'23:30:49.2268'])
tr16      = time_double([prefd[0]+'23:30:49.2353',prefd[0]+'23:30:49.2673'])
tr17      = time_double([prefd[0]+'23:30:49.2679',prefd[0]+'23:30:49.3143'])
tr18      = time_double([prefd[0]+'23:30:49.3148',prefd[0]+'23:30:49.3255'])
tr19      = time_double([prefd[0]+'23:30:49.3313',prefd[0]+'23:30:49.3799'])
tr20      = time_double([prefd[0]+'23:30:49.3804',prefd[0]+'23:30:49.4327'])
tr21      = time_double([prefd[0]+'23:30:49.4503',prefd[0]+'23:30:49.4972'])
tr22      = time_double([prefd[0]+'23:30:49.4977',prefd[0]+'23:30:49.5228'])
tr23      = time_double([prefd[0]+'23:30:49.5271',prefd[0]+'23:30:49.5585'])
tr24      = time_double([prefd[0]+'23:30:49.5591',prefd[0]+'23:30:49.5815'])
tr_str_43 = CREATE_STRUCT(tags,tr0,tr1,tr2,tr3,tr4,tr5,tr6,tr7,tr8,tr9,tr10,tr11,tr12,$
                          tr13,tr14,tr15,tr16,tr17,tr18,tr19,tr20,tr21,tr22,tr23,tr24)
tr_str_4  = CREATE_STRUCT(['T0','T1','T2','T3'],tr_str_40,tr_str_41,tr_str_42,tr_str_43)


jj        = 5L
; => For  3 Hz < f < 30 Hz  at  1998-09-24/23:43:18.951 UT
tr0       = time_double([prefd[0]+'23:43:19.0694',prefd[0]+'23:43:19.2214'])
tr1       = time_double([prefd[0]+'23:43:19.6502',prefd[0]+'23:43:19.7110'])
tr2       = time_double([prefd[0]+'23:43:19.9270',prefd[0]+'23:43:19.9995'])
tr_str_50 = CREATE_STRUCT(tags[0L:2L],tr0,tr1,tr2)
tr_str_5  = CREATE_STRUCT(['T0'],tr_str_50)


jj        = 6L
; => For  3 Hz < f < 30 Hz  at  1998-09-24/23:45:52.184 UT
tr0       = time_double([prefd[0]+'23:45:52.4485',prefd[0]+'23:45:52.5099'])
tr1       = time_double([prefd[0]+'23:45:52.5504',prefd[0]+'23:45:52.6272'])
tr2       = time_double([prefd[0]+'23:45:53.1765',prefd[0]+'23:45:53.2757'])
tr_str_60 = CREATE_STRUCT(tags[0L:2L],tr0,tr1,tr2)

; => For  10 Hz < f < 100 Hz  at  1998-09-24/23:45:52.184 UT
tr0       = time_double([prefd[0]+'23:45:52.4560',prefd[0]+'23:45:52.5045'])
tr1       = time_double([prefd[0]+'23:45:52.5403',prefd[0]+'23:45:52.6683'])
tr2       = time_double([prefd[0]+'23:45:53.0869',prefd[0]+'23:45:53.1013'])
tr_str_61 = CREATE_STRUCT(tags[0L:2L],tr0,tr1,tr2)

; => For  30 Hz < f < 100 Hz  at  1998-09-24/23:45:52.184 UT
tr0       = time_double([prefd[0]+'23:45:52.2805',prefd[0]+'23:45:52.3189'])
tr1       = time_double([prefd[0]+'23:45:52.4144',prefd[0]+'23:45:52.4299'])
tr2       = time_double([prefd[0]+'23:45:52.6053',prefd[0]+'23:45:52.6181'])
tr3       = time_double([prefd[0]+'23:45:52.9051',prefd[0]+'23:45:52.9200'])
tr4       = time_double([prefd[0]+'23:45:52.9888',prefd[0]+'23:45:53.0085'])
tr5       = time_double([prefd[0]+'23:45:53.0091',prefd[0]+'23:45:53.0421'])
tr6       = time_double([prefd[0]+'23:45:53.0592',prefd[0]+'23:45:53.0752'])
tr_str_62 = CREATE_STRUCT(tags[0L:6L],tr0,tr1,tr2,tr3,tr4,tr5,tr6)

; => For  100 Hz < f < 300 Hz  at  1998-09-24/23:45:52.184 UT
tr0       = time_double([prefd[0]+'23:45:52.2720',prefd[0]+'23:45:52.2965'])
tr1       = time_double([prefd[0]+'23:45:52.3051',prefd[0]+'23:45:52.3168'])
tr2       = time_double([prefd[0]+'23:45:52.5173',prefd[0]+'23:45:52.5392'])
tr3       = time_double([prefd[0]+'23:45:52.5504',prefd[0]+'23:45:52.5680'])
tr4       = time_double([prefd[0]+'23:45:52.6064',prefd[0]+'23:45:52.6443'])
tr5       = time_double([prefd[0]+'23:45:52.6560',prefd[0]+'23:45:52.6768'])
tr6       = time_double([prefd[0]+'23:45:52.6864',prefd[0]+'23:45:52.7136'])
tr7       = time_double([prefd[0]+'23:45:52.7381',prefd[0]+'23:45:52.7643'])
tr8       = time_double([prefd[0]+'23:45:52.7648',prefd[0]+'23:45:52.7797'])
tr9       = time_double([prefd[0]+'23:45:52.7883',prefd[0]+'23:45:52.8048'])
tr10      = time_double([prefd[0]+'23:45:52.8160',prefd[0]+'23:45:52.8432'])
tr11      = time_double([prefd[0]+'23:45:52.8501',prefd[0]+'23:45:52.8688'])
tr12      = time_double([prefd[0]+'23:45:52.9072',prefd[0]+'23:45:52.9307'])
tr13      = time_double([prefd[0]+'23:45:53.0757',prefd[0]+'23:45:53.1019'])
tr14      = time_double([prefd[0]+'23:45:53.1312',prefd[0]+'23:45:53.1483'])
tr15      = time_double([prefd[0]+'23:45:53.2080',prefd[0]+'23:45:53.2192'])
tr_str_63 = CREATE_STRUCT(tags[0L:15L],tr0,tr1,tr2,tr3,tr4,tr5,tr6,tr7,tr8,tr9,$
                          tr10,tr11,tr12,tr13,tr14,tr15)
tr_str_6  = CREATE_STRUCT(['T0','T1','T2','T3'],tr_str_60,tr_str_61,tr_str_62,tr_str_63)


jj        = 7L
; => For  3 Hz < f < 30 Hz  at  1998-09-24/23:45:53.379 UT
tr0       = time_double([prefd[0]+'23:45:53.3790',prefd[0]+'23:45:53.4830'])
tr1       = time_double([prefd[0]+'23:45:53.9603',prefd[0]+'23:45:54.0563'])
tr2       = time_double([prefd[0]+'23:45:54.1977',prefd[0]+'23:45:54.3625'])
tr_str_70 = CREATE_STRUCT(tags[0L:2L],tr0,tr1,tr2)

; => For  10 Hz < f < 30 Hz  at  1998-09-24/23:45:53.379 UT
tr0       = time_double([prefd[0]+'23:45:53.4105',prefd[0]+'23:45:53.4670'])
tr1       = time_double([prefd[0]+'23:45:53.5315',prefd[0]+'23:45:53.5662'])
tr2       = time_double([prefd[0]+'23:45:53.5795',prefd[0]+'23:45:53.6318'])
tr3       = time_double([prefd[0]+'23:45:53.6510',prefd[0]+'23:45:53.7017'])
tr4       = time_double([prefd[0]+'23:45:53.7443',prefd[0]+'23:45:53.8147'])
tr5       = time_double([prefd[0]+'23:45:54.2206',prefd[0]+'23:45:54.2830'])
tr6       = time_double([prefd[0]+'23:45:54.4238',prefd[0]+'23:45:54.4707'])
tr_str_71 = CREATE_STRUCT(tags[0L:6L],tr0,tr1,tr2,tr3,tr4,tr5,tr6)

; => For  15 Hz < f < 60 Hz  at  1998-09-24/23:45:53.379 UT
tr_str_72 = 0

; => For  30 Hz < f < 100 Hz  at  1998-09-24/23:45:53.379 UT
tr0       = time_double([prefd[0]+'23:45:53.8787',prefd[0]+'23:45:53.8990'])
tr1       = time_double([prefd[0]+'23:45:53.9134',prefd[0]+'23:45:53.9342'])
tr2       = time_double([prefd[0]+'23:45:53.9721',prefd[0]+'23:45:54.0009'])
tr3       = time_double([prefd[0]+'23:45:54.0014',prefd[0]+'23:45:54.0409'])
tr4       = time_double([prefd[0]+'23:45:54.0414',prefd[0]+'23:45:54.0595'])
tr5       = time_double([prefd[0]+'23:45:54.1182',prefd[0]+'23:45:54.1577'])
tr6       = time_double([prefd[0]+'23:45:54.2830',prefd[0]+'23:45:54.3022'])
tr_str_73 = CREATE_STRUCT(tags[0L:6L],tr0,tr1,tr2,tr3,tr4,tr5,tr6)
tr_str_7  = CREATE_STRUCT(['T0','T1','T2','T3'],tr_str_70,tr_str_71,tr_str_72,tr_str_73)


jj        = 8L
; => For  3 Hz < f < 30 Hz  at  1998-09-24/23:48:39.020 UT
tr0       = time_double([prefd[0]+'23:48:39.0893',prefd[0]+'23:48:39.1592'])
tr1       = time_double([prefd[0]+'23:48:39.4568',prefd[0]+'23:48:39.5896'])
tr2       = time_double([prefd[0]+'23:48:39.8269',prefd[0]+'23:48:39.8808'])
tr3       = time_double([prefd[0]+'23:48:39.9443',prefd[0]+'23:48:40.0003'])
tr_str_80 = CREATE_STRUCT(tags[0L:3L],tr0,tr1,tr2,tr3)

; => For  4 Hz < f < 40 Hz  at  1998-09-24/23:48:39.020 UT
tr_str_81 = 0

; => For  10 Hz < f < 40 Hz  at  1998-09-24/23:48:39.020 UT
tr0       = time_double([prefd[0]+'23:48:39.0200',prefd[0]+'23:48:39.1555'])
tr1       = time_double([prefd[0]+'23:48:39.9987',prefd[0]+'23:48:40.0808'])
tr_str_82 = CREATE_STRUCT(tags[0L:1L],tr0,tr1)
tr_str_8  = CREATE_STRUCT(['T0','T1','T2'],tr_str_80,tr_str_81,tr_str_82)


jj        = 9L
; => For  3 Hz < f < 30 Hz  at  1998-09-24/23:48:42.131 UT
tr0       = time_double([prefd[0]+'23:48:43.1358',prefd[0]+'23:48:43.2227'])
tr_str_90 = CREATE_STRUCT(tags[0L:0L],tr0)

; => For  5 Hz < f < 30 Hz  at  1998-09-24/23:48:42.131 UT
tr_str_91 = 0

; => For  7 Hz < f < 30 Hz  at  1998-09-24/23:48:42.131 UT
tr_str_92 = 0

; => For  65 Hz < f < 300 Hz  at  1998-09-24/23:48:42.131 UT
tr0       = time_double([prefd[0]+'23:48:42.9134',prefd[0]+'23:48:42.9486'])
tr1       = time_double([prefd[0]+'23:48:43.0430',prefd[0]+'23:48:43.1177'])
tr_str_93 = CREATE_STRUCT(tags[0L:1L],tr0,tr1)
tr_str_9  = CREATE_STRUCT(['T0','T1','T2','T3'],tr_str_90,tr_str_91,tr_str_92,tr_str_93)


jj        = 10L
; => For  3 Hz < f < 30 Hz  at  1998-09-24/23:48:51.622 UT
tr0     = time_double([prefd[0]+'23:48:51.7292',prefd[0]+'23:48:51.7676'])
tr1     = time_double([prefd[0]+'23:48:51.8305',prefd[0]+'23:48:51.8700'])
tr2     = time_double([prefd[0]+'23:48:51.9985',prefd[0]+'23:48:52.0465'])
tr3     = time_double([prefd[0]+'23:48:52.1255',prefd[0]+'23:48:52.2140'])
tr4     = time_double([prefd[0]+'23:48:52.2140',prefd[0]+'23:48:52.2828'])
tr5     = time_double([prefd[0]+'23:48:52.4204',prefd[0]+'23:48:52.5100'])
tr6     = time_double([prefd[0]+'23:48:52.5745',prefd[0]+'23:48:52.6188'])
tr7     = time_double([prefd[0]+'23:48:52.6193',prefd[0]+'23:48:52.6700'])
tr8     = time_double([prefd[0]+'23:48:52.6705',prefd[0]+'23:48:52.7137'])
tr_str_100 = CREATE_STRUCT(tags[0L:8L],tr0,tr1,tr2,tr3,tr4,tr5,tr6,tr7,tr8)

; => For  6 Hz < f < 30 Hz  at  1998-09-24/23:48:51.622 UT
tr0     = time_double([prefd[0]+'23:48:51.7292',prefd[0]+'23:48:51.7708'])
tr1     = time_double([prefd[0]+'23:48:51.8012',prefd[0]+'23:48:51.8396'])
tr2     = time_double([prefd[0]+'23:48:51.8396',prefd[0]+'23:48:51.8727'])
tr3     = time_double([prefd[0]+'23:48:51.8988',prefd[0]+'23:48:51.9772'])
tr4     = time_double([prefd[0]+'23:48:51.9969',prefd[0]+'23:48:52.0407'])
tr5     = time_double([prefd[0]+'23:48:52.1121',prefd[0]+'23:48:52.1452'])
tr6     = time_double([prefd[0]+'23:48:52.1628',prefd[0]+'23:48:52.1980'])
tr7     = time_double([prefd[0]+'23:48:52.2407',prefd[0]+'23:48:52.2860'])
tr8     = time_double([prefd[0]+'23:48:52.5793',prefd[0]+'23:48:52.6060'])
tr9     = time_double([prefd[0]+'23:48:52.6449',prefd[0]+'23:48:52.6833'])
tr_str_101 = CREATE_STRUCT(tags[0L:9L],tr0,tr1,tr2,tr3,tr4,tr5,tr6,tr7,tr8,tr9)

; => For  10 Hz < f < 100 Hz  at  1998-09-24/23:48:51.622 UT
tr_str_102 = 0
tr_str_10  = CREATE_STRUCT(['T0','T1','T2'],tr_str_100,tr_str_101,tr_str_102)


jj      = 11L
; => For  3 Hz < f < 30 Hz  at  1998-09-25/00:04:04.545 UT
prefd   = '1998-09-25/'
tr0     = time_double([prefd[0]+'00:04:04.6714',prefd[0]+'00:04:04.7482'])
tr1     = time_double([prefd[0]+'00:04:04.9002',prefd[0]+'00:04:04.9690'])
tr2     = time_double([prefd[0]+'00:04:05.0522',prefd[0]+'00:04:05.0954'])
tr3     = time_double([prefd[0]+'00:04:05.2682',prefd[0]+'00:04:05.3530'])
tr4     = time_double([prefd[0]+'00:04:05.3311',prefd[0]+'00:04:05.3866'])
tr5     = time_double([prefd[0]+'00:04:05.4527',prefd[0]+'00:04:05.5098'])
tr_str_110 = CREATE_STRUCT(tags[0L:5L],tr0,tr1,tr2,tr3,tr4,tr5)

; => For  3 Hz < f < 30 Hz  at  1998-09-25/00:04:04.545 UT
tr_str_111 = 0

; => For  7 Hz < f < 50 Hz  at  1998-09-25/00:04:04.545 UT
tr0     = time_double([prefd[0]+'00:04:05.0666',prefd[0]+'00:04:05.1130'])
tr1     = time_double([prefd[0]+'00:04:05.2815',prefd[0]+'00:04:05.3354'])
tr2     = time_double([prefd[0]+'00:04:05.3498',prefd[0]+'00:04:05.3914'])
tr3     = time_double([prefd[0]+'00:04:05.4559',prefd[0]+'00:04:05.4874'])
tr4     = time_double([prefd[0]+'00:04:05.4879',prefd[0]+'00:04:05.5418'])
tr5     = time_double([prefd[0]+'00:04:05.5823',prefd[0]+'00:04:05.6106'])
tr_str_112 = CREATE_STRUCT(tags[0L:5L],tr0,tr1,tr2,tr3,tr4,tr5)
tr_str_11  = CREATE_STRUCT(['T0','T1','T2'],tr_str_110,tr_str_111,tr_str_112)


jj      = 12L
; => For  3 Hz < f < 30 Hz  at  1998-09-25/00:05:23.432 UT
tr0     = time_double([prefd[0]+'00:05:23.5024',prefd[0]+'00:05:23.6352'])
tr1     = time_double([prefd[0]+'00:05:23.8000',prefd[0]+'00:05:23.8832'])
tr2     = time_double([prefd[0]+'00:05:23.8832',prefd[0]+'00:05:24.0026'])
tr3     = time_double([prefd[0]+'00:05:24.0448',prefd[0]+'00:05:24.1232'])
tr4     = time_double([prefd[0]+'00:05:24.2629',prefd[0]+'00:05:24.3472'])
tr5     = time_double([prefd[0]+'00:05:24.3472',prefd[0]+'00:05:24.4512'])
tr_str_120 = CREATE_STRUCT(tags[0L:5L],tr0,tr1,tr2,tr3,tr4,tr5)

; => For  5 Hz < f < 50 Hz  at  1998-09-25/00:05:23.432 UT
tr_str_121 = 0

; => For  40 Hz < f < 200 Hz  at  1998-09-25/00:05:23.432 UT
tr0     = time_double([prefd[0]+'00:05:23.4592',prefd[0]+'00:05:23.4816'])
tr1     = time_double([prefd[0]+'00:05:23.5008',prefd[0]+'00:05:23.5162'])
tr2     = time_double([prefd[0]+'00:05:23.5328',prefd[0]+'00:05:23.5658'])
tr3     = time_double([prefd[0]+'00:05:23.6128',prefd[0]+'00:05:23.6234'])
tr4     = time_double([prefd[0]+'00:05:23.7376',prefd[0]+'00:05:23.7658'])
tr5     = time_double([prefd[0]+'00:05:23.7728',prefd[0]+'00:05:23.7904'])
tr6     = time_double([prefd[0]+'00:05:23.8208',prefd[0]+'00:05:23.8528'])
tr7     = time_double([prefd[0]+'00:05:23.9408',prefd[0]+'00:05:23.9834'])
tr8     = time_double([prefd[0]+'00:05:24.0405',prefd[0]+'00:05:24.0592'])
tr9     = time_double([prefd[0]+'00:05:24.0928',prefd[0]+'00:05:24.1088'])
tr10    = time_double([prefd[0]+'00:05:24.1520',prefd[0]+'00:05:24.1680'])
tr11    = time_double([prefd[0]+'00:05:24.1744',prefd[0]+'00:05:24.1920'])
tr12    = time_double([prefd[0]+'00:05:24.3920',prefd[0]+'00:05:24.4160'])
tr_str_122 = CREATE_STRUCT(tags[0L:5L],tr0,tr1,tr2,tr3,tr4,tr5)
tr_str_12  = CREATE_STRUCT(['T0','T1','T2'],tr_str_120,tr_str_121,tr_str_122)


jj      = 13L
; => For  3 Hz < f < 30 Hz  at  1998-09-25/00:14:50.603 UT
tr0     = time_double([prefd[0]+'00:14:50.6478',prefd[0]+'00:14:50.7032'])
tr1     = time_double([prefd[0]+'00:14:50.9112',prefd[0]+'00:14:51.0158'])
tr2     = time_double([prefd[0]+'00:14:51.3822',prefd[0]+'00:14:51.4424'])
tr3     = time_double([prefd[0]+'00:14:51.4899',prefd[0]+'00:14:51.5678'])
tr4     = time_double([prefd[0]+'00:14:51.6467',prefd[0]+'00:14:51.6947'])
tr_str_130 = CREATE_STRUCT(tags[0L:4L],tr0,tr1,tr2,tr3,tr4)

; => For  7 Hz < f < 50 Hz  at  1998-09-25/00:14:50.603 UT
tr_str_131 = 0

; => For  10 Hz < f < 100 Hz  at  1998-09-25/00:14:50.603 UT
tr_str_132 = 0

; => For  20 Hz < f < 100 Hz  at  1998-09-25/00:14:50.603 UT
tr_str_133 = 0
tr_str_13 = CREATE_STRUCT(['T0','T1','T2','T3'],tr_str_130,tr_str_131,tr_str_132,tr_str_133)


tags      = ['t0','t1','t2','t3','t4','t5','t6','t7','t8','t9','t10','t11','t12','t13','t14']
tr_str_3  = CREATE_STRUCT(['T0'],0)
tr_str_14 = CREATE_STRUCT(['T0','T1','T2'],0,0,0)

tr_str    = CREATE_STRUCT(tags,tr_str_0,tr_str_1,tr_str_2,tr_str_3,tr_str_4,tr_str_5,$
                          tr_str_6,tr_str_7,tr_str_8,tr_str_9,tr_str_10,tr_str_11,   $
                          tr_str_12,tr_str_13,tr_str_14)
;-----------------------------------------------------------------------------------------
; => Plot waveforms in GSE Coordinates with time ranges over plotted
;-----------------------------------------------------------------------------------------
wi,1
!P.MULTI = [0,1,3]

yttlsws   = ['S!Dx!N (!7l!3'+'W/m!U2!N'+')','S!Dy!N (!7l!3'+'W/m!U2!N'+')',$
             'S!Dz!N (!7l!3'+'W/m!U2!N'+')']
yttlbws   = ['B!Dx!N (nT)','B!Dy!N (nT)','B!Dz!N (nT)']
yttlews   = ['E!Dx!N (mV/m)','E!Dy!N (mV/m)','E!Dz!N (mV/m)']

xtntm     = ['0','200','400','600','800','1000']
xtvtm     = [0e0,2e2,4e2,6e2,8e2,1e3]
xtstm     = N_ELEMENTS(xtvtm) - 1L
xtt1      = 'Time (ms)'
exstr_s   = {XSTYLE:1,YSTYLE:1,NODATA:1,XTICKNAME:xtntm,XTICKV:xtvtm,$
             XTICKS:xtstm,XTITLE:xtt1,XMINOR:10,XTICKLEN:0.04}

ffw_prefx = 'FIXED_WAVES-Coords_filtered_'
colors    = [250,150,50]
!P.CHARSIZE = 1.5
!P.MULTI    = [0,1,3]

ffr_prefx = 'FIXED_GSE_filtered_'
fur_prefx = 'FIXED_GSE_unfiltered_'
; => Plot rotated and filtered fields 

; =>  i = abcissa for each TDSS event
; =>  k = abcissa for each frequency range for filters
; =>  m = " " filter string labels
; =>  j = " " field components of TDSS events
; =>  p = " " time ranges of 


jj        = 0L
FOR i=0L, n_uq DO BEGIN                                                         $
  lfc0       = lf_str.(i)                                                     & $
  hfc0       = hf_str.(i)                                                     & $
  fwl_str    = STRTRIM(STRING(FORMAT='(f15.1)',lfc0),2)                       & $
  fwh_str    = STRTRIM(STRING(FORMAT='(f15.1)',hfc0),2)                       & $
  fil_str    = fwl_str[*]+'-'+fwh_str[*]+'Hz_'                                & $
  fil_st2    = STRARR(N_ELEMENTS(fil_str))                                    & $
  n_fr       = N_ELEMENTS(lfc0) - 1L                                          & $
  tpstr      = exstr_s                                                        & $
  FOR m=0L, n_fr DO fil_st2[m] = STRMID(fil_str[m],0L,STRLEN(fil_str[m])-1L)  & $
  FOR k=0L, n_fr DO BEGIN                                                       $
    tras0    = tr_str.(i).(k)                                                 & $
    IF (SIZE(tras0,/TYPE) NE 8L) THEN GOTO,JUMP_FREE                          & $
    n_tras   = N_TAGS(tras0)                                                  & $
    ms_times = REFORM(ntimes[i,*])                                            & $
    ew_field = rotated_gse_ef.(i).(k)                                         & $
    bw_field = rotated_gse_bf.(i).(k)                                         & $
    yra_bw   = [-1e0*MAX(ABS(bw_field),/NAN),MAX(ABS(bw_field),/NAN)]         & $
    yra_ew   = [-1e0*MAX(ABS(ew_field),/NAN),MAX(ABS(ew_field),/NAN)]         & $
    fname0   = ffr_prefx[0]+fn_scet[i]+'_B-GSE_'+fil_str[k]                   & $
    str_element,tpstr,'YRANGE',yra_bw,/ADD_REPLACE                            & $
    FOR p=0L, n_tras - 1L DO BEGIN                                                $
      tras1    = tras0.(p)                                                      & $
      ntrasuff = file_name_times(tras1,prec=4)                                  & $
      ltrasuff = 'TRA-'+ntrasuff.F_TIME[0]+'-'+ntrasuff.F_TIME[1]               & $
      mstraln  = (tras1 - nunix[i])*1d3                                         & $
      popen,fname0+ltrasuff[0],/LAND                                            & $
        FOR j=0L, 2L DO BEGIN                                                     $
          IF (j EQ 0) THEN ttle = 'Magnetic Field [GSE-Coords] at: '+nscets[i]  & $
          IF (j EQ 1) THEN ttle = 'Filtered: '+fil_st2[k]+', '+fang_str[i]      & $
          IF (j EQ 2) THEN ttle = ''                                            & $
          str_element,tpstr,'TITLE' ,ttle      ,/ADD_REPLACE                    & $
          str_element,tpstr,'YTITLE',yttlbws[j],/ADD_REPLACE                    & $
          PLOT,ms_times,bw_field[*,j],_EXTRA=tpstr                              & $
            OPLOT,ms_times,bw_field[*,j],COLOR=colors[j]                        & $
            OPLOT,[mstraln[0],mstraln[0]],tpstr.YRANGE,COLOR=50,LINESTYLE=3L    & $
            OPLOT,[mstraln[1],mstraln[1]],tpstr.YRANGE,COLOR=50,LINESTYLE=3L    & $
        ENDFOR                                                                  & $
      pclose                                                                    & $
    ENDFOR                                                                    & $
    fname0   = ffr_prefx[0]+fn_scet[i]+'_E-GSE_'+fil_str[k]                   & $
    str_element,tpstr,'YRANGE',yra_ew,/ADD_REPLACE                            & $
    FOR p=0L, n_tras - 1L DO BEGIN                                                $
      tras1    = tras0.(p)                                                      & $
      ntrasuff = file_name_times(tras1,prec=4)                                  & $
      ltrasuff = 'TRA-'+ntrasuff.F_TIME[0]+'-'+ntrasuff.F_TIME[1]               & $
      mstraln  = (tras1 - nunix[i])*1d3                                         & $
      popen,fname0+ltrasuff[0],/LAND                                            & $
        FOR j=0L, 2L DO BEGIN                                                     $
          IF (j EQ 0) THEN ttle = 'Electric Field [GSE-Coords] at: '+nscets[i]  & $
          IF (j EQ 1) THEN ttle = 'Filtered: '+fil_st2[k]+', '+fang_str[i]      & $
          IF (j EQ 2) THEN ttle = ''                                            & $
          str_element,tpstr,'TITLE' ,ttle      ,/ADD_REPLACE                    & $
          str_element,tpstr,'YTITLE',yttlews[j],/ADD_REPLACE                    & $
          PLOT,ms_times,ew_field[*,j],_EXTRA=tpstr                              & $
            OPLOT,ms_times,ew_field[*,j],COLOR=colors[j]                        & $
            OPLOT,[mstraln[0],mstraln[0]],tpstr.YRANGE,COLOR=50,LINESTYLE=3L    & $
            OPLOT,[mstraln[1],mstraln[1]],tpstr.YRANGE,COLOR=50,LINESTYLE=3L    & $
        ENDFOR                                                                  & $
      pclose                                                                    & $
    ENDFOR                                                                    & $
  JUMP_FREE:                                                                  & $
  jj += 1L


jj        = 0L
FOR i=0L, n_uq DO BEGIN                                                         $
  lfc0       = lf_str.(i)                                                     & $
  hfc0       = hf_str.(i)                                                     & $
  fwl_str    = STRTRIM(STRING(FORMAT='(f15.1)',lfc0),2)                       & $
  fwh_str    = STRTRIM(STRING(FORMAT='(f15.1)',hfc0),2)                       & $
  fil_str    = fwl_str[*]+'-'+fwh_str[*]+'Hz_'                                & $
  fil_st2    = STRARR(N_ELEMENTS(fil_str))                                    & $
  n_fr       = N_ELEMENTS(lfc0) - 1L                                          & $
  tpstr      = exstr_s                                                        & $
  unfilbf    = REFORM(bfxyz[i,*,*])                                           & $
  unfilef    = REFORM(bfxyz[i,*,*])                                           & $
  FOR m=0L, n_fr DO fil_st2[m] = STRMID(fil_str[m],0L,STRLEN(fil_str[m])-1L)  & $
  FOR k=0L, n_fr DO BEGIN                                                       $
    tras0    = tr_str.(i).(k)                                                 & $
    IF (SIZE(tras0,/TYPE) NE 8L) THEN GOTO,JUMP_FREE                          & $
    n_tras   = N_TAGS(tras0)                                                  & $
    ms_times = REFORM(ntimes[i,*])                                            & $
    bw_field = unfilbf                                                        & $
    ew_field = unfilef                                                        & $
    yra_bw   = [-1e0*MAX(ABS(bw_field),/NAN),MAX(ABS(bw_field),/NAN)]         & $
    yra_ew   = [-1e0*MAX(ABS(ew_field),/NAN),MAX(ABS(ew_field),/NAN)]         & $
    fname0   = fur_prefx[0]+fn_scet[i]+'_B-GSE_'+fil_str[k]                   & $
    str_element,tpstr,'YRANGE',yra_bw,/ADD_REPLACE                            & $
    FOR p=0L, n_tras - 1L DO BEGIN                                                $
      tras1    = tras0.(p)                                                      & $
      ntrasuff = file_name_times(tras1,prec=4)                                  & $
      ltrasuff = 'TRA-'+ntrasuff.F_TIME[0]+'-'+ntrasuff.F_TIME[1]               & $
      mstraln  = (tras1 - nunix[i])*1d3                                         & $
      popen,fname0+ltrasuff[0],/LAND                                            & $
        FOR j=0L, 2L DO BEGIN                                                     $
          IF (j EQ 0) THEN ttle = 'Magnetic Field [GSE-Coords] at: '+nscets[i]  & $
          IF (j EQ 1) THEN ttle = 'Unfiltered:  '+fang_str[i]                   & $
          IF (j EQ 2) THEN ttle = ' '                                           & $
          str_element,tpstr,'TITLE' ,ttle      ,/ADD_REPLACE                    & $
          str_element,tpstr,'YTITLE',yttlbws[j],/ADD_REPLACE                    & $
          PLOT,ms_times,bw_field[*,j],_EXTRA=tpstr                              & $
            OPLOT,ms_times,bw_field[*,j],COLOR=colors[j]                        & $
            OPLOT,[mstraln[0],mstraln[0]],tpstr.YRANGE,COLOR=50,LINESTYLE=3L    & $
            OPLOT,[mstraln[1],mstraln[1]],tpstr.YRANGE,COLOR=50,LINESTYLE=3L    & $
        ENDFOR                                                                  & $
      pclose                                                                    & $
    ENDFOR                                                                    & $
    fname0   = fur_prefx[0]+fn_scet[i]+'_E-GSE_'+fil_str[k]                   & $
    str_element,tpstr,'YRANGE',yra_ew,/ADD_REPLACE                            & $
    FOR p=0L, n_tras - 1L DO BEGIN                                                $
      tras1    = tras0.(p)                                                      & $
      ntrasuff = file_name_times(tras1,prec=4)                                  & $
      ltrasuff = 'TRA-'+ntrasuff.F_TIME[0]+'-'+ntrasuff.F_TIME[1]               & $
      mstraln  = (tras1 - nunix[i])*1d3                                         & $
      popen,fname0+ltrasuff[0],/LAND                                            & $
        FOR j=0L, 2L DO BEGIN                                                     $
          IF (j EQ 0) THEN ttle = 'Electric Field [GSE-Coords] at: '+nscets[i]  & $
          IF (j EQ 1) THEN ttle = 'Unfiltered:  '+fang_str[i]                   & $
          IF (j EQ 2) THEN ttle = ' '                                           & $
          str_element,tpstr,'TITLE' ,ttle      ,/ADD_REPLACE                    & $
          str_element,tpstr,'YTITLE',yttlews[j],/ADD_REPLACE                    & $
          PLOT,ms_times,ew_field[*,j],_EXTRA=tpstr                              & $
            OPLOT,ms_times,ew_field[*,j],COLOR=colors[j]                        & $
            OPLOT,[mstraln[0],mstraln[0]],tpstr.YRANGE,COLOR=50,LINESTYLE=3L    & $
            OPLOT,[mstraln[1],mstraln[1]],tpstr.YRANGE,COLOR=50,LINESTYLE=3L    & $
        ENDFOR                                                                  & $
      pclose                                                                    & $
    ENDFOR                                                                    & $
  JUMP_FREE:                                                                  & $
  jj += 1L










