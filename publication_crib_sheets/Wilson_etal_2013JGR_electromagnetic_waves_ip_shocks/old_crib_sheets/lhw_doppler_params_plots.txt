f        = !VALUES.F_NAN
d        = !VALUES.D_NAN
c        = 2.99792458d8      ; -Speed of light in vacuum (m/s)

date     = '121097'
test     = tdss_lhw_stats_read(DATE=date)
avg_lfk0 = (test.K_ST_LOWF_MP + test.K_EN_LOWF_MP)/2d0
avg_hfk0 = (test.K_ST_highF_MP + test.K_EN_highF_MP)/2d0
freql0   = test.FREQ_LOW_HIGH[*,0]
freqh0   = test.FREQ_LOW_HIGH[*,1]
thkb0    = test.THETA_KB
thkv0    = test.THETA_KV
pkamp0   = test.PEAK_AMP
thkbav0  = (test.THETA_KB[*,0] + test.THETA_KB[*,1])/2d0   ; => Avg. between start and end
thkvav0  = (test.THETA_KV[*,0] + test.THETA_KV[*,1])/2d0   ; => Avg. between start and end
wce0     = (test.WCE_SE[*,0] + test.WCE_SE[*,1])/2d0
wpe0     = (test.WPE_SE[*,0] + test.WPE_SE[*,1])/2d0
vte0     = (test.VTE_SE[*,0] + test.VTE_SE[*,1])/2d0
thkb0    = (thkb0) < (18d1 - thkb0)
thkv0    = (thkv0) < (18d1 - thkv0)
thkb0    = (thkb0[*,0] + thkb0[*,1])/2d0
thkv0    = (thkv0[*,0] + thkv0[*,1])/2d0
vsw0     = (test.VSW_ST + test.VSW_EN)/2d0

date     = '082698'
test     = tdss_lhw_stats_read(DATE=date)
avg_lfk1 = (test.K_ST_LOWF_MP + test.K_EN_LOWF_MP)/2d0
avg_hfk1 = (test.K_ST_highF_MP + test.K_EN_highF_MP)/2d0
freql1   = test.FREQ_LOW_HIGH[*,0]
freqh1   = test.FREQ_LOW_HIGH[*,1]
thkb1    = test.THETA_KB
thkv1    = test.THETA_KV
pkamp1   = test.PEAK_AMP
thkbav1  = (test.THETA_KB[*,0] + test.THETA_KB[*,1])/2d0   ; => Avg. between start and end
thkvav1  = (test.THETA_KV[*,0] + test.THETA_KV[*,1])/2d0   ; => Avg. between start and end
wce1     = (test.WCE_SE[*,0] + test.WCE_SE[*,1])/2d0
wpe1     = (test.WPE_SE[*,0] + test.WPE_SE[*,1])/2d0
vte1     = (test.VTE_SE[*,0] + test.VTE_SE[*,1])/2d0
thkb1    = (thkb1) < (18d1 - thkb1)
thkv1    = (thkv1) < (18d1 - thkv1)
thkb1    = (thkb1[*,0] + thkb1[*,1])/2d0
thkv1    = (thkv1[*,0] + thkv1[*,1])/2d0
vsw1     = (test.VSW_ST + test.VSW_EN)/2d0

date     = '092498'
test     = tdss_lhw_stats_read(DATE=date)
avg_lfk2 = (test.K_ST_LOWF_MP + test.K_EN_LOWF_MP)/2d0
avg_hfk2 = (test.K_ST_highF_MP + test.K_EN_highF_MP)/2d0
freql2   = test.FREQ_LOW_HIGH[*,0]
freqh2   = test.FREQ_LOW_HIGH[*,1]
thkb2    = test.THETA_KB
thkv2    = test.THETA_KV
pkamp2   = test.PEAK_AMP
thkbav2  = (test.THETA_KB[*,0] + test.THETA_KB[*,1])/2d0   ; => Avg. between start and end
thkvav2  = (test.THETA_KV[*,0] + test.THETA_KV[*,1])/2d0   ; => Avg. between start and end
wce2     = (test.WCE_SE[*,0] + test.WCE_SE[*,1])/2d0
wpe2     = (test.WPE_SE[*,0] + test.WPE_SE[*,1])/2d0
vte2     = (test.VTE_SE[*,0] + test.VTE_SE[*,1])/2d0
thkb2    = (thkb2) < (18d1 - thkb2)
thkv2    = (thkv2) < (18d1 - thkv2)
thkb2    = (thkb2[*,0] + thkb2[*,1])/2d0
thkv2    = (thkv2[*,0] + thkv2[*,1])/2d0
vsw2     = (test.VSW_ST + test.VSW_EN)/2d0

date     = '021100'
test     = tdss_lhw_stats_read(DATE=date)
avg_lfk3 = (test.K_ST_LOWF_MP + test.K_EN_LOWF_MP)/2d0
avg_hfk3 = (test.K_ST_highF_MP + test.K_EN_highF_MP)/2d0
freql3   = test.FREQ_LOW_HIGH[*,0]
freqh3   = test.FREQ_LOW_HIGH[*,1]
thkb3    = test.THETA_KB
thkv3    = test.THETA_KV
pkamp3   = test.PEAK_AMP
thkbav3  = (test.THETA_KB[*,0] + test.THETA_KB[*,1])/2d0   ; => Avg. between start and end
thkvav3  = (test.THETA_KV[*,0] + test.THETA_KV[*,1])/2d0   ; => Avg. between start and end
wce3     = (test.WCE_SE[*,0] + test.WCE_SE[*,1])/2d0
wpe3     = (test.WPE_SE[*,0] + test.WPE_SE[*,1])/2d0
vte3     = (test.VTE_SE[*,0] + test.VTE_SE[*,1])/2d0
thkb3    = (thkb3) < (18d1 - thkb3)
thkv3    = (thkv3) < (18d1 - thkv3)
thkb3    = (thkb3[*,0] + thkb3[*,1])/2d0
thkv3    = (thkv3[*,0] + thkv3[*,1])/2d0
vsw3     = (test.VSW_ST + test.VSW_EN)/2d0

; => Combine arrays
thkb     = [thkb0,thkb1,thkb2,thkb3]
thkv     = [thkv0,thkv1,thkv2,thkv3]
vsw      = [vsw0,vsw1,vsw2,vsw3]
vmag     = SQRT(TOTAL(vsw^2,2L,/NAN))

freql    = [freql0,freql1,freql2,freql3]
freqh    = [freqh0,freqh1,freqh2,freqh3]
wce      = [wce0,wce1,wce2,wce3]
wpe      = [wpe0,wpe1,wpe2,wpe3]
vte      = [vte0,vte1,vte2,vte3]
frat_lf  = (freql*2d0*!DPI)/wce
frat_hf  = (freqh*2d0*!DPI)/wce
avg_lfk  = [avg_lfk0,avg_lfk1,avg_lfk2,avg_lfk3]
avg_hfk  = [avg_hfk0,avg_hfk1,avg_hfk2,avg_hfk3]
kcwpelfm = avg_lfk[*,0]*c*1d-3/wpe
kcwpelfp = avg_lfk[*,1]*c*1d-3/wpe
kcwpehfm = avg_hfk[*,0]*c*1d-3/wpe
kcwpehfp = avg_hfk[*,1]*c*1d-3/wpe
; => Separate by plus and minus sign
avg_lfkm = avg_lfk[*,0]
avg_lfkp = avg_lfk[*,1]
avg_hfkm = avg_hfk[*,0]
avg_hfkp = avg_hfk[*,1]
; => Calculate rest frame frequencies
ckm        = (c*1d-3)
fac0       = ckm^2*wce*COS(thkb*!DPI/18d1)
frest_lfkm = avg_lfkm^2*fac0/(wpe^2 + (avg_lfkm*ckm)^2)
frest_lfkp = avg_lfkp^2*fac0/(wpe^2 + (avg_lfkp*ckm)^2)
frest_hfkm = avg_hfkm^2*fac0/(wpe^2 + (avg_hfkm*ckm)^2)
frest_hfkp = avg_hfkp^2*fac0/(wpe^2 + (avg_hfkp*ckm)^2)
; => Calculate index of refraction
indexlm  = (avg_lfkm*ckm)^2/(frest_lfkm)^2
indexlp  = (avg_lfkp*ckm)^2/(frest_lfkp)^2
indexhm  = (avg_hfkm*ckm)^2/(frest_hfkm)^2
indexhp  = (avg_hfkp*ckm)^2/(frest_hfkp)^2

; => Plot data
wi,0

xran = [0.01,3.50]
yran = [1d4,1d10]
xttl = 'kc/'+'!7x!3'+'!Dpe!N (unitless)'
yttl = 'n!U2!N (unitless)'
xda0 = kcwpelfm
yda0 = indexlm
xda1 = kcwpelfp
yda1 = indexlp
xda2 = kcwpehfm
yda2 = indexhm
xda3 = kcwpehfp
yda3 = indexhp
pstr = {xrange:xran,yrange:yran,xtitle:xttl,ytitle:yttl,nodata:1,ylog:1,$
        ystyle:1,xstyle:1}
PLOT,xda0,yda0,_EXTRA=pstr
  OPLOT,xda0,yda0,PSYM=2,COLOR=250
  OPLOT,xda1,yda1,PSYM=1,COLOR=200
  OPLOT,xda2,yda2,PSYM=2,COLOR=150
  OPLOT,xda3,yda3,PSYM=1,COLOR= 50
  XYOUTS,1.5,1d9,'* = Low  Freq. - Sign',/DATA,COLOR=250
  XYOUTS,1.5,1d8,'* = High Freq. - Sign',/DATA,COLOR=150
  XYOUTS,1.5,1d7,'+ = Low  Freq. + Sign',/DATA,COLOR=200
  XYOUTS,1.5,1d6,'+ = High Freq. + Sign',/DATA,COLOR= 50

popen,'whistler_dispersion_estimates_n2-vs-kc_wpe',/LAND
  PLOT,xda0,yda0,_EXTRA=pstr
  OPLOT,xda0,yda0,PSYM=2,COLOR=250
  OPLOT,xda1,yda1,PSYM=1,COLOR=200
  OPLOT,xda2,yda2,PSYM=2,COLOR=150
  OPLOT,xda3,yda3,PSYM=1,COLOR= 50
  XYOUTS,1.5,1d9,'* = Low  Freq. - Sign',/DATA,COLOR=250
  XYOUTS,1.5,1d8,'* = High Freq. - Sign',/DATA,COLOR=150
  XYOUTS,1.5,1d7,'+ = Low  Freq. + Sign',/DATA,COLOR=200
  XYOUTS,1.5,1d6,'+ = High Freq. + Sign',/DATA,COLOR= 50
pclose

pstr = {xrange:xran,yrange:yran,xtitle:xttl,ytitle:yttl,nodata:1,ylog:1,$
        xlog:1,ystyle:1,xstyle:1}
popen,'whistler_dispersion_estimates_n2-vs-kc_wpe_log',/LAND
  PLOT,xda0,yda0,_EXTRA=pstr
  OPLOT,xda0,yda0,PSYM=2,COLOR=250
  OPLOT,xda1,yda1,PSYM=1,COLOR=200
  OPLOT,xda2,yda2,PSYM=2,COLOR=150
  OPLOT,xda3,yda3,PSYM=1,COLOR= 50
  XYOUTS,0.5,1d9,'* = Low  Freq. - Sign',/DATA,COLOR=250
  XYOUTS,0.5,1d8,'* = High Freq. - Sign',/DATA,COLOR=150
  XYOUTS,0.5,1d7,'+ = Low  Freq. + Sign',/DATA,COLOR=200
  XYOUTS,0.5,1d6,'+ = High Freq. + Sign',/DATA,COLOR= 50
pclose


;xran = [0.0001,0.4]
xran = [0.0001,1.0]
yran = [1d4,1d10]
xttl = '!7x!3'+'!Drest!N'+'/!7X!3'+'!Dce!N (unitless)'
yttl = 'n!U2!N (unitless)'
xda0 = frest_lfkm/wce
yda0 = indexlm
xda1 = frest_lfkp/wce
yda1 = indexlp
xda2 = frest_hfkm/wce
yda2 = indexhm
xda3 = frest_hfkp/wce
yda3 = indexhp
pstr = {xrange:xran,yrange:yran,xtitle:xttl,ytitle:yttl,nodata:1,ylog:1,$
        xlog:1,ystyle:1,xstyle:1}
PLOT,xda0,yda0,_EXTRA=pstr
  OPLOT,xda0,yda0,PSYM=2,COLOR=250
  OPLOT,xda1,yda1,PSYM=1,COLOR=200
  OPLOT,xda2,yda2,PSYM=2,COLOR=150
  OPLOT,xda3,yda3,PSYM=1,COLOR= 50
  XYOUTS,0.1,1d9,'* = Low  Freq. - Sign',/DATA,COLOR=250
  XYOUTS,0.1,1d8,'* = High Freq. - Sign',/DATA,COLOR=150
  XYOUTS,0.1,1d7,'+ = Low  Freq. + Sign',/DATA,COLOR=200
  XYOUTS,0.1,1d6,'+ = High Freq. + Sign',/DATA,COLOR= 50

popen,'whistler_dispersion_estimates_n2-vs-w_wce',/LAND
  PLOT,xda0,yda0,_EXTRA=pstr
  OPLOT,xda0,yda0,PSYM=2,COLOR=250
  OPLOT,xda1,yda1,PSYM=1,COLOR=200
  OPLOT,xda2,yda2,PSYM=2,COLOR=150
  OPLOT,xda3,yda3,PSYM=1,COLOR= 50
  XYOUTS,0.1,1d9,'* = Low  Freq. - Sign',/DATA,COLOR=250
  XYOUTS,0.1,1d8,'* = High Freq. - Sign',/DATA,COLOR=150
  XYOUTS,0.1,1d7,'+ = Low  Freq. + Sign',/DATA,COLOR=200
  XYOUTS,0.1,1d6,'+ = High Freq. + Sign',/DATA,COLOR= 50
pclose



yran = [0.001,1.10]
xran = [0.01,3.]
xttl = 'kc/'+'!7x!3'+'!Dpe!N (unitless)'
yttl = 'f!Dsc!N'+'/!7X!3'+'!Dce!N (unitless)'
pstr = {xrange:xran,yrange:yran,xtitle:xttl,ytitle:yttl,nodata:1,ylog:1,$
        ystyle:1,xstyle:1}
PLOT,avg_lfkm,frat_lf,_EXTRA=pstr
  OPLOT,avg_lfkm,frat_lf,PSYM=2,COLOR=250
  OPLOT,avg_lfkp,frat_lf,PSYM=1,COLOR=250
  OPLOT,avg_hfkm,frat_hf,PSYM=2,COLOR= 50
  OPLOT,avg_hfkp,frat_hf,PSYM=1,COLOR= 50


yran = [0.01,1.0]
xran = [0.01,1.0]
xttl = 'cos(!7h!3'+'!DkV!N'+') (unitless)'
yttl = 'cos(!7h!3'+'!DkB!N'+') (unitless)'
xdat = COS(thkv*!DPI/18d1)
ydat = COS(thkb*!DPI/18d1)
pstr = {xrange:xran,yrange:yran,xtitle:xttl,ytitle:yttl,nodata:1,ylog:0,$
        xlog:0,ystyle:1,xstyle:1}
PLOT,xdat,ydat,_EXTRA=pstr
  OPLOT,xdat,ydat,PSYM=2,COLOR=250

xran = [0.1,100.0]
yran = [0.1,100.0]
xttl = '!7h!3'+'!DkV!N'+' (degrees)'
yttl = '!7h!3'+'!DkB!N'+' (degrees)'
xdat = thkv
ydat = thkb
pstr = {xrange:xran,yrange:yran,xtitle:xttl,ytitle:yttl,nodata:1,ylog:0,$
        xlog:0,ystyle:1,xstyle:1}
PLOT,xdat,ydat,_EXTRA=pstr
  OPLOT,xdat,ydat,PSYM=2,COLOR=250

xran = [0.01,10.0]
yran = [1.0,450.0]
xttl = '!7h!3'+'!DkB!N'+'/!7h!3'+'!DkV!N (unitless)'
yttl = 'f!Dsc!N (Hz)'
xdat = thkb/thkv
ydat = (freql + freqh)/2d0
pstr = {xrange:xran,yrange:yran,xtitle:xttl,ytitle:yttl,nodata:1,ylog:1,$
        xlog:1,ystyle:1,xstyle:1}
PLOT,xdat,ydat,_EXTRA=pstr
  OPLOT,xdat,ydat,PSYM=2,COLOR=250

xran = [0.01,60.0]
yran = [1.0,450.0]
xttl = 'cos('+'!7h!3'+'!DkB!N'+')/cos('+'!7h!3'+'!DkV!N) (unitless)'
yttl = 'f!Dsc!N (Hz)'
xdat = COS(thkb*!DPI/18d1)/COS(thkv*!DPI/18d1)
ydat = (freql + freqh)/2d0
pstr = {xrange:xran,yrange:yran,xtitle:xttl,ytitle:yttl,nodata:1,ylog:0,$
        xlog:1,ystyle:1,xstyle:1}
PLOT,xdat,ydat,_EXTRA=pstr
  OPLOT,xdat,ydat,PSYM=2,COLOR=250


yran = [0.001,1.10]
xran = [0.01,1.0]
xttl = 'cos(!7h!3'+'!DkV!N'+') (unitless)'
yttl = 'f!Dsc!N'+'/!7X!3'+'!Dce!N (unitless)'
xdat = COS(thkv*!DPI/18d1)
yda0 = frat_lf
yda1 = frat_hf
pstr = {xrange:xran,yrange:yran,xtitle:xttl,ytitle:yttl,nodata:1,ylog:1,$
        ystyle:1,xstyle:1}
PLOT,xdat,yda0,_EXTRA=pstr
  OPLOT,xdat,yda0,PSYM=2,COLOR=250
  OPLOT,xdat,yda1,PSYM=2,COLOR= 50


yran = [1.0,450.0]
xran = [1.0,750.0]
xttl = 'V!Dsw!N cos(!7h!3'+'!DkV!N'+') (km/s)'
yttl = 'f!Dsc!N (Hz)'
xdat = vmag*COS(thkv*!DPI/18d1)
yda0 = freql
yda1 = freqh
pstr = {xrange:xran,yrange:yran,xtitle:xttl,ytitle:yttl,nodata:1,ylog:1,$
        ystyle:1,xstyle:1}
PLOT,xdat,yda0,_EXTRA=pstr
  OPLOT,xdat,yda0,PSYM=2,COLOR=250
  OPLOT,xdat,yda1,PSYM=2,COLOR= 50

yran = [1.0,450.0]
xran = [0.01,1.0]
xttl = 'cos(!7h!3'+'!DkB!N'+') (unitless)'
yttl = 'f!Dsc!N (Hz)'
xdat = COS(thkb*!DPI/18d1)
yda0 = freql
yda1 = freqh
pstr = {xrange:xran,yrange:yran,xtitle:xttl,ytitle:yttl,nodata:1,ylog:1,$
        ystyle:1,xstyle:1}
PLOT,xdat,yda0,_EXTRA=pstr
  OPLOT,xdat,yda0,PSYM=2,COLOR=250
  OPLOT,xdat,yda1,PSYM=2,COLOR= 50


yran = [0.001,1.10]
xran = [0.01,1.0]
xttl = 'cos(!7h!3'+'!DkB!N'+') (unitless)'
yttl = 'f!Dsc!N'+'/!7X!3'+'!Dce!N (unitless)'
xdat = COS(thkb*!DPI/18d1)
yda0 = frat_lf
yda1 = frat_hf
pstr = {xrange:xran,yrange:yran,xtitle:xttl,ytitle:yttl,nodata:1,ylog:1,$
        ystyle:1,xstyle:1}
PLOT,xdat,yda0,_EXTRA=pstr
  OPLOT,xdat,yda0,PSYM=2,COLOR=250
  OPLOT,xdat,yda1,PSYM=2,COLOR= 50

yran = [0.001,1.10]
xran = [0.01,90.0]
xttl = '!7h!3'+'!DkV!N'+' (degrees)'
yttl = 'f!Dsc!N'+'/!7X!3'+'!Dce!N (unitless)'
xdat = thkv
yda0 = frat_lf
yda1 = frat_hf
pstr = {xrange:xran,yrange:yran,xtitle:xttl,ytitle:yttl,nodata:1,ylog:1,$
        ystyle:1,xstyle:1}
PLOT,xdat,yda0,_EXTRA=pstr
  OPLOT,xdat,yda0,PSYM=2,COLOR=250
  OPLOT,xdat,yda1,PSYM=2,COLOR= 50


yran = [0.001,1.10]
xran = [0.01,90.0]
xttl = '!7h!3'+'!DkB!N'+' (degrees)'
yttl = 'f!Dsc!N'+'/!7X!3'+'!Dce!N (unitless)'
xdat = thkb
yda0 = frat_lf
yda1 = frat_hf
pstr = {xrange:xran,yrange:yran,xtitle:xttl,ytitle:yttl,nodata:1,ylog:1,$
        ystyle:1,xstyle:1}
PLOT,xdat,yda0,_EXTRA=pstr
  OPLOT,xdat,yda0,PSYM=2,COLOR=250
  OPLOT,xdat,yda1,PSYM=2,COLOR= 50


; => Plot histograms
wi,1
nbins = 9L
dran  = [0.01,2.00]
tttl  = 'k-value (Low Freq., Plus and Minus Sign)'
xttl  = '|k| [km!U-1!N]'
xdat  = [avg_lfkm,avg_lfkp]
  my_histogram_plot,xdat,NBINS=nbins,XTTL=xttl,TTLE=tttl,DRANGE=dran,PREC=2

tttl  = 'k-value (High Freq., Plus and Minus Sign)'
xttl  = '|k| [km!U-1!N]'
xdat  = [avg_hfkm,avg_hfkp]
  my_histogram_plot,xdat,NBINS=nbins,XTTL=xttl,TTLE=tttl,DRANGE=dran,PREC=2




