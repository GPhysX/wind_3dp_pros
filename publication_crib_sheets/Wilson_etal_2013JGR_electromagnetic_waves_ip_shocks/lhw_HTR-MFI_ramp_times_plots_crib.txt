date        = '121097'
date        = '082698'
date        = '092498'
date        = '021100'
date        = '040600'

clean       = 1
temp_lhw_htrmfi_ramp_plots,DATE=date[0],CLEAN=clean




;-----------------------------------------------------------------------
;         c/wpe [km]     VTe/wce [km]      c/wpi [km]     VTi/wci [km]
;=======================================================================
;          1.5893085       1.9853379       68.102431       50.478284   => For  1997-12-10
;          2.0560843       2.5146227       88.103939       106.22204   => For  1998-08-26
;          1.8335362       1.1347050       78.567672       52.315478   => For  1998-09-24
;          2.3061198       2.7538909       98.818049       83.722667   => For  2000-02-11
;          1.8101972       1.5908969       77.567590       57.631633   => For  2000-04-06
;-----------------------------------------------------------------------



;-----------------------------------------------------------------------------------------
; => Constants
;-----------------------------------------------------------------------------------------
f      = !VALUES.F_NAN
d      = !VALUES.D_NAN
epo    = 8.854187817d-12   ; -Permittivity of free space (F/m)
muo    = 4d0*!DPI*1d-7     ; -Permeability of free space (N/A^2 or H/m)
me     = 9.1093897d-31     ; -Electron mass (kg)
mp     = 1.6726231d-27     ; -Proton mass (kg)
ma     = 4d0*(mp + me)     ; -Alpha-Particle mass (kg)
qq     = 1.60217733d-19    ; -Fundamental charge (C)
kB     = 1.380658d-23      ; -Boltzmann Constant (J/K)
K_eV   = 1.160474d4        ; -Conversion = degree Kelvin/eV
c      = 2.99792458d8      ; -Speed of light in vacuum (m/s)
c2     = (c*1d-3)^2        ; -" " squared (km/s)^2
mm     = [-1d0,0d0,1d0]    ; -[Normal Cyclotron, Landau, Anomalous Cyclotron]
me_ev  = 0.5109906d6       ; -Electron mass in eV/c^2
me_3dp = me_ev/c2          ; -Electron mass [eV/(km/s)^2]
mp_ev  = 938.27231d6       ; -Proton mass in eV/c^2
mp_3dp = mp_ev/c2          ; -Proton mass [eV/(km/s)^2]
pressc = 1.60217646d-13    ; => Conversion from eV/cm^3 to J/m^3 (or Pascals)
picops = pressc*1d12       ; => Conversion from eV/cm^3 to pJ/m^3 (or pPa)

fpeden = (2d0*!DPI)^2*epo*me/qq^2*1d-6  ; => Conversion from fpe to density 1/cm^3
; => Define conversion factor from plasma frequency to density
invdenf  = 1d-6*(2d0*!DPI)^2*(me*epo/qq^2)  ; => [cm^(-3) Hz^(-2)]

wpefac = SQRT(1d6*qq^2/me/epo)
wppfac = SQRT(1d6*qq^2/mp/epo)
wcifac = qq*1d-9/mp
wcefac = qq*1d-9/me

betafac = 2d0*muo*1d6*(K_eV*kB)/(1d-9)^2
KE_fac  = 5d-1*mp*1d6*(1d3)^2/(qq*1d6)
;---------------------------------------------------
; => Get shock data
;---------------------------------------------------
date        = '121097'
t           = ['1997-12-10/03:33:00','1997-12-10/05:33:00']
tramp       = '1997-12-10/04:33:14.664'
deltramp    = ['1997-12-10/04:33:14.394','1997-12-10/04:33:14.934']
unc_t       = 0.092d0
gnorm8      = [-0.903, 0.168,-0.397]   ; => Using RH08 from JCK's site
dgnorm8     = [ 0.015, 0.032, 0.374]
gnorm9      = [-0.971, 0.094,-0.218]   ; => Using RH08 from JCK's site
dgnorm9     = [ 0.016, 0.071, 0.214]
ushn        = [132.3, 54.3]           ; => Up/Downstream normal flow speed [shock frame] RHO8
ushn2       = [124.0, 50.4]           ; => Up/Downstream normal flow speed [shock frame] RHO9
v_shn89     = [ 391.2, 403.9]
dv_shn89    = [  12.4,  11.7]
ni_up       = 11.18    ; => Avg. upstream density [cm^(-3)]
; => Vshn [RH08] = 391.2 +/- 12.4 km/s
; => Vshn [RH08] = 403.9 +/- 11.7 km/s

date        = '082698'
t           = ['1998-08-26/05:40:00','1998-08-26/07:40:00']  ; -For moment writing
tramp       = '1998-08-26/06:40:24.972'
deltramp    = ['1998-08-26/06:40:24.829','1998-08-26/06:40:25.116']
unc_t       = 0.092d0
gnorm8      = [-0.655,0.040,-0.754]   ; => Using RH08 from JCK's site
dgnorm8     = [0.010,0.009,0.561]
gnorm9      = [-0.822,0.138,-0.553]   ; => Using RH09 from JCK's site
dgnorm9     = [0.040,0.070,0.488]
ushn        = [401.3,142.3]           ; => Up/Downstream normal flow speed [shock frame] RHO8
ushn2       = [379.6,135.6]           ; => Up/Downstream normal flow speed [shock frame] RHO9
v_shn89     = [ 687.4, 747.2]
dv_shn89    = [  26.8,  25.5]
ni_up       = 6.68     ; => Avg. upstream density [cm^(-3)]
; => Vshn [RH08] = 687.4 +/- 26.8 km/s
; => Vshn [RH09] = 747.2 +/- 25.5 km/s

date        = '092498'
t           = ['1998-09-24/22:20:00','1998-09-25/00:20:00']
tramp       = '1998-09-24/23:20:37.374'
deltramp    = ['1998-09-24/23:20:37.310','1998-09-24/23:20:37.494']
unc_t       = 0.092d0
gnorm8      = [-0.914,-0.220,-0.341]   ; => Using RH08 from JCK's site
dgnorm8     = [ 0.004, 0.009, 0.327]
gnorm9      = [-0.939,-0.175,-0.296]   ; => Using RH09 from JCK's site
dgnorm9     = [ 0.024, 0.070, 0.287]
ushn        = [386.3,174.6]           ; => Up/Downstream normal flow speed [shock frame] RHO8
ushn2       = [381.2,171.3]           ; => Up/Downstream normal flow speed [shock frame] RHO9
v_shn89     = [ 772.4, 780.0]
dv_shn89    = [  95.6,  95.5]
ni_up       = 8.40     ; => Avg. upstream density [cm^(-3)]
; => Vshn [RH08] = 772.4 +/- 95.6 km/s
; => Vshn [RH09] = 780.0 +/- 95.5 km/s

date        = '021100'
t           = ['2000-02-11/22:33:00','2000-02-12/00:33:00']
tramp       = '2000-02-11/23:33:55.319'
deltramp    = ['2000-02-11/23:33:55.183','2000-02-11/23:33:55.458']
unc_t       = 0.092d0
gnorm8      = [-0.865,-0.452,0.218]   ; => Using RH08 from JCK's site
dgnorm8     = [ 0.017, 0.030,0.214]
gnorm9      = [-0.930,-0.367,-0.028]   ; => Using RH09 from JCK's site
dgnorm9     = [ 0.025, 0.063, 0.028]
ushn        = [263.6, 81.7]           ; => Up/Downstream normal flow speed [shock frame] RHO8
ushn2       = [255.3, 79.3]           ; => Up/Downstream normal flow speed [shock frame] RHO9
v_shn89     = [ 641.4, 661.1]
dv_shn89    = [  13.2,  12.3]
ni_up       = 5.31     ; => Avg. upstream density [cm^(-3)]
; => Vshn [RH08] = 641.4 +/- 13.2 km/s
; => Vshn [RH09] = 661.1 +/- 12.3 km/s

date        = '040600'
t           = ['2000-04-06/15:00:00','2000-04-06/18:00:00']  ; -For moment writing
tramp       = '2000-04-06/16:32:09.237'
deltramp    = '2000-04-06/'+['16:32:08.966','16:32:09.519']
unc_t       = 0.092d0
gnorm8      = [-0.984,-0.078,-0.162]   ; => Using RH08 from JCK's site
dgnorm8     = [ 0.002, 0.009, 0.161]
gnorm9      = [-0.988,-0.061,-0.140]   ; => Using RH09 from JCK's site
dgnorm9     = [ 0.011, 0.070, 0.139]
ushn        = [ 278.1, 79.8]           ; => Up/Downstream normal flow speed [shock frame] RHO8
ushn2       = [ 277.4, 79.7]           ; => Up/Downstream normal flow speed [shock frame] RHO9
v_shn89     = [ 646.9, 647.1]
dv_shn89    = [  97.9,  97.6]
ni_up       = 8.618                    ; => Avg. upstream density [cm^(-3)]
; => Vshn [RH08] = 641.4 +/- 13.2 km/s
; => Vshn [RH09] = 661.1 +/- 12.3 km/s

;-----------------------------------------------------------------------------------------
; => MFI and 3DP data [Avg. upstream/downstream]
;     => 10 min. up and down, -30 s from ramp upstream and +180 s from ramp downstream
;-----------------------------------------------------------------------------------------
;  => For 12/10/1997
magf_u  = [  1.917, -6.693, -1.578]
magf_d  = [  2.361,-14.138, -6.626]
bmag_ud = [  7.218, 15.985]
vsw_up  = [-293.129,6.851,-1.439]
vsw_dn  = [-365.250,11.601,-36.620]
tiav_ud = [  6.219, 14.302]
Niav_ud = [ 11.181, 28.816]
teav_ud = [ 17.664, 18.469]

;  => For 08/26/1998
magf_u  = [  0.244,  6.492, -1.289]
magf_d  = [-12.256,  6.196, 12.414]
bmag_ud = [  6.972, 19.726]
vsw_up  = [-484.565,6.580,10.997]
vsw_dn  = [-648.070,10.635,-182.219]
tiav_ud = [ 23.705, 74.272]
Niav_ud = [  6.683, 15.670]
teav_ud = [ 24.393, 55.819]

;  => For 09/24/1998
magf_u  = [ -7.054, 12.116,  2.493]
magf_d  = [-15.425, 33.756, 15.545]
bmag_ud = [ 14.415, 40.594]
vsw_up  = [-449.733,41.122,34.701]
vsw_dn  = [-650.533,-32.149,-60.749]
tiav_ud = [ 26.579, 79.217]
Niav_ud = [  8.397, 18.961]
teav_ud = [ 22.959, 48.983]

;  => For 02/11/2000
magf_u  = [  2.492, -6.318, -1.760]
magf_d  = [ 10.254,-20.441,  0.143]
bmag_ud = [  7.071, 23.128]
vsw_up  = [-446.427,-9.395,-3.779]
vsw_dn  = [-601.957,-98.637,41.182]
tiav_ud = [ 16.525, 36.357]
Niav_ud = [  5.309, 18.329]
teav_ud = [ 32.829, 40.159]

;  => For 2000-04-06
magf_u  = [  3.223, -6.627, -0.586]
magf_d  = [  6.324,-25.725, -6.278]
bmag_ud = [  7.564, 27.720]
vsw_up  = [-383.478,  3.628,-23.375]
vsw_dn  = [-576.468,-20.963,-67.683]
tiav_ud = [  8.693, 57.296]
Niav_ud = [  8.618, 34.037]
teav_ud = [ 12.163, 37.532]
;-----------------------------------------------------------------------------------------
; => B-fields
;-----------------------------------------------------------------------------------------
tr3         = time_double(t)
tura        = time_double(tramp)
mydate      = my_str_date(DATE=date)
date        = mydate.S_DATE[0]  ; -('MMDDYY')
mdate       = mydate.DATE[0]    ; -('YYYYMMDD')
tdate       = mydate.TDATE[0]

mag3        = read_wind_mfi(TRANGE=tr3)
t3x         = mag3.MAG.X
bmag4       = mag3.MAG.Y
magf4       = mag3.BGSE.Y
nt          = N_ELEMENTS(t3x) 
store_data,'wi_B3_MAG(GSE)',DATA={X:mag3.MAG.X,Y:bmag4}
store_data,'wi_B3(GSE)',DATA={X:mag3.MAG.X,Y:magf4}
options,'wi_B3_MAG(GSE)',"YTITLE","|B| (nT)!C[GSE,3s]"
options,'wi_B3(GSE)',"YTITLE","B (nT)!C[GSE,3s]"
options,'wi_B3(GSE)','COLORS',[250,150,50]
nn0         = ['wi_B3_MAG(GSE)','wi_B3(GSE)']

htr_mfi2tplot,DATE=date

; => Check time range
get_data,'WIND_B3_HTR(GSE,nT)',DATA=htr_magf,DLIM=dlim0,LIM=lim0
get_data,'WIND_MAG_HTR(GSE,nT)',DATA=htr_bmag,DLIM=dlim1,LIM=lim1
htr_t       = htr_magf.X
htr_m       = htr_magf.Y
trhtr       = tr3 + [-1d1,1d1]
good        = WHERE(htr_t GE trhtr[0] AND htr_t LE trhtr[1],gd)
PRINT,';', gd, '   => For  ', tdate[0]
;       77759   => For  1997-12-10
;       77936   => For  1998-08-26
;       77247   => For  1998-09-24
;       76402   => For  2000-02-11
htr_t       = htr_t[good]
htr_m       = htr_m[good,*]
bmag0       = SQRT(TOTAL(htr_m^2,2,/NAN))
htr_magf    = {X:htr_t,Y:htr_m}
store_data,'WIND_B3_HTR(GSE,nT)',DATA=htr_magf,DLIM=dlim0,LIM=lim0
htr_bmag    = {X:htr_t,Y:bmag0}
store_data,'WIND_MAG_HTR(GSE,nT)',DATA=htr_bmag,DLIM=dlim1,LIM=lim1


;-----------------------------------------------------------------------------------------
; => Define distances from shock ramp
;-----------------------------------------------------------------------------------------
get_data,'WIND_MAG_HTR(GSE,nT)',DATA=htr_bmag
htr_t       = htr_bmag.X
nhtr_t      = htr_t - tura[0]     ; => normalize to zero
ndist       = v_shn89[0]*nhtr_t   ; => km [SC-Frame] from shock ramp center
; => Define average upstream inertial lengths
einert      = c/(wpefac[0]*SQRT(ni_up[0]))
iinert      = c/(wppfac[0]*SQRT(ni_up[0]))
einert     *= 1d-3  ; => Convert to km
iinert     *= 1d-3  ; => Convert to km
; => Define average upstream gyroradii
vthere      = SQRT(2d0*teav_ud[0]*K_eV*kB/me)*1d-3   ; => Avg. upstream electron thermal speed [km/s]
vtherp      = SQRT(2d0*tiav_ud[0]*K_eV*kB/mp)*1d-3   ; => Avg. upstream proton   thermal speed [km/s]
bmag_u      = SQRT(TOTAL(magf_u^2,/NAN))
wce_u       = qq*(bmag_u[0]*1d-9)/me
wcp_u       = qq*(bmag_u[0]*1d-9)/mp
rhoe_u      = vthere[0]/wce_u[0]                     ; => Avg. upstream electron thermal gyroradii [km]
rhop_u      = vtherp[0]/wcp_u[0]                     ; => Avg. upstream proton   thermal gyroradii [km]

PRINT,';   ',einert[0],rhoe_u[0],iinert[0],rhop_u[0], '   => For  '+tdate[0]
;-----------------------------------------------------------------------
;         c/wpe [km]     VTe/wce [km]      c/wpi [km]     VTi/wci [km]
;=======================================================================
;          1.5893085       1.9853379       68.102431       50.478284   => For  1997-12-10
;          2.0560843       2.5146227       88.103939       106.22204   => For  1998-08-26
;          1.8335362       1.1347050       78.567672       52.315478   => For  1998-09-24
;          2.3061198       2.7538909       98.818049       83.722667   => For  2000-02-11
;          1.8101972       1.5908969       77.567590       57.631633   => For  2000-04-06
;-----------------------------------------------------------------------


; => Send relevant distances to TPLOT
store_data,'normal_distance',DATA={X:htr_t,Y:ndist}
options,'normal_distance','YTITLE','Dist. [Normal, km]'
store_data,'normal_distance_c-wpe',DATA={X:htr_t,Y:ndist/einert[0]}
options,'normal_distance_c-wpe','YTITLE','Dist. [Normal, c/'+'!7x!3'+'!Dpe!N'+']'
store_data,'normal_distance_c-wpi',DATA={X:htr_t,Y:ndist/iinert[0]}
options,'normal_distance_c-wpi','YTITLE','Dist. [Normal, c/'+'!7x!3'+'!Dpi!N'+']'
store_data,'normal_distance_rho-ce',DATA={X:htr_t,Y:ndist/rhoe_u[0]}
store_data,'normal_distance_rho-ci',DATA={X:htr_t,Y:ndist/rhop_u[0]}
options,'normal_distance_rho-ce','YTITLE','Dist. [Normal, V!DTe!N'+'/!7X!3'+'!Dce!N'+']'
options,'normal_distance_rho-ci','YTITLE','Dist. [Normal, V!DTi!N'+'/!7X!3'+'!Dci!N'+']'

nnw         = tnames()
options,nnw,'YSTYLE',1
options,nnw,'PANEL_SIZE',2.
options,nnw,'XMINOR',5
options,nnw,'XTICKLEN',0.04
; => Get orbit data
tds_magneto_orbits,DATE=date
options,'Wind_Radial_Distance','YTITLE','Radial Dist. (R!DE!N)'
labs = ['normal_distance','normal_distance_c-wpe','normal_distance_c-wpi','normal_distance_rho-ci']
tplot_options, var_label=labs
tplot_options,'XMARGIN',[18,18]
tplot_options,'YMARGIN',[5,5]
;-----------------------------------------------------------------------------------------
; => Load 3DP Distributions into TPLOT
;-----------------------------------------------------------------------------------------
default_extension = '/wind_3dp_pros/wind_data_dir/Wind_3DP_DATA/IDL_Save_Files/'
default_location  = default_extension+date+'/'

DEFSYSV,'!wind3dp_umn',EXISTS=exists
IF NOT KEYWORD_SET(exists) THEN mdir  = FILE_EXPAND_PATH('')+default_location
IF     KEYWORD_SET(exists) THEN mdir  = !wind3dp_umn.WIND_3DP_SAVE_FILE_DIR+date+'/'
IF (mdir EQ '')            THEN mdir = default_location

mfiles = FILE_SEARCH(mdir,'*.sav')
RESTORE,mfiles[0]

IF (N_ELEMENTS(aelb) GT 0) THEN tunx_3dp = [ael.TIME,aelb.TIME] ELSE tunx_3dp = ael.TIME
unq      = UNIQ(tunx_3dp,SORT(tunx_3dp))
sp       = SORT(unq)
tunx_3dp = tunx_3dp[sp]
;-----------------------------------------------------------------------------------------
; => Get TDSS Times
;-----------------------------------------------------------------------------------------
test   = tdss_sort_relevant(DATE=date,FIXFILE=1)
scets  = test.SCETS       ; => e.g. '2000-10-03/00:01:11.598'
ntds   = N_ELEMENTS(scets)
tdsst  = test.TIMES*1d-3  ; => convert to seconds
tdssen = test.EVENT_N     ; => Event #
tsunix = time_double(scets)  ; => Unix start time of TDSS samples
tdsevl = DBLARR(ntds)
FOR j=0L, ntds - 1L DO tdsevl[j] = MAX(tdsst[j,*],/NAN) - MIN(tdsst[j,*],/NAN)
teunix = tsunix + tdsevl
;-----------------------------------------------------------------------------------------
; => Get TDSF Times
;-----------------------------------------------------------------------------------------
tesf   = tdsf_sort_relevant(DATE=date,FIXFILE=1)
scetf  = tesf.SCETS       ; => e.g. '2000-10-03/00:01:11.598'
ntdf   = N_ELEMENTS(scetf)
tfunix = time_double(scetf)  ; => Unix start time of TDSF samples
;-----------------------------------------------------------------------------------------
; => Load WAVES Denstiy estimates
;-----------------------------------------------------------------------------------------
test   = waves_fpe_ascii_read(DATE=date)
wunix  = test.UNIX          ; => Unix times
wfuh   = test.F_PE          ; => Upper hybrid frequency [Hz]
; => Use HTR MFI for B-fields
get_data,'WIND_B3_HTR(GSE,nT)',DATA=htr_mfi
; => Determine B-field at times of TNR Data
testx  = interp(htr_mfi.Y[*,0],htr_mfi.X,wunix,/NO_EXTRAP)
testy  = interp(htr_mfi.Y[*,1],htr_mfi.X,wunix,/NO_EXTRAP)
testz  = interp(htr_mfi.Y[*,2],htr_mfi.X,wunix,/NO_EXTRAP)
tbmag  = SQRT(testx^2 + testy^2 + testz^2)
; => Calculate the electron cyclotron frequency at times of associated WAVES f_uh
fce_wv = (wcefac[0]/(2d0*!DPI))*tbmag    ; => Electron cyclotron frequency [Hz]
fpe_2  = (wfuh^2 - fce_wv^2)             ; => Electron plasma frequency [Hz^2]
; => Calculate the electron density at times of associated WAVES f_uh
wdens  = fpe_2*invdenf[0]                ; => Electron density [cm^(-3)]
; => Calculate the electron inertial length at times of associated WAVES f_uh
wine_e = c/(2d0*!DPI*SQRT(ABS(fpe_2)))   ; => Electron inertial length [m]
wine_p = SQRT(mp/me)*wine_e              ; => Proton " "

store_data,'waves_density',DATA={X:wunix,Y:wdens}
options,'waves_density','YTITLE','N!De!N (cm!U-3!N)'
;-----------------------------------------------------------------------------------------
; => Load WAVES data
;-----------------------------------------------------------------------------------------
fl        = 4.
fh        = 13e3
yscl      = 'log'
tr32      = [tr3[0] - 36d2,tr3[1] + 36d2]
wave_tnr_rad_to_tplot,DATE=date,FLOW=fl,FHIGH=fh,YSCL=yscl,TRANGE=tr32,/NODCBLS

pref = ['TNR','RAD1','RAD2']
wnam = tnames(pref[*]+'_'+date[0])
options,wnam,'ZTITLE','!7l!3'+'V/(Hz)!U1/2!N'
options,tnames(pref[0]+'_'+date[0]),'YRANGE',[1e1,2e2]
options,tnames(pref[0]+'_'+date[0]),'ZRANGE',[1e0,5e1]

get_data,tnames(pref[0]+'_'+date[0]),DATA=tnrdat,DLIM=dlim0,LIM=lim0
; => Convert frequencies to densities
freqs       = tnrdat.V                  ; => [kHz]
fpe_dens    = fpeden[0]*(freqs*1d3)^2   ; => Equivalent densities [cm^(-3)]
data        = {X:tnrdat.X,Y:tnrdat.Y,V:fpe_dens,SPEC:1}
store_data,'TNR_'+date[0]+'_density',DATA=data
options,'TNR_'+date[0]+'_density','ZTITLE','!7l!3'+'V/(Hz)!U1/2!N'
options,'TNR_'+date[0]+'_density','YTITLE','N!De!N [cm!U-3!N'+']'
options,'TNR_'+date[0]+'_density','YLOG',1
options,'TNR_'+date[0]+'_density','ZLOG',1
options,'TNR_'+date[0]+'_density','YRANGE',[1e0,5e2]
options,'TNR_'+date[0]+'_density','ZRANGE',[1e0,5e1]

nnw         = tnames()
options,nnw,'YSTYLE',1
options,nnw,'PANEL_SIZE',2.
options,nnw,'XMINOR',5
options,nnw,'XTICKLEN',0.04
;-----------------------------------------------------------------------------------------
; => Zoom in to look at ramp examples [e.g. +/-360 seconds]
;-----------------------------------------------------------------------------------------
fac_tr  = 36d1
n_td    = tura[0] + [-1d0,1d0]*fac_tr
n_t     = time_string(n_td,PREC=3)
stime   = STRMID(n_t[*],0,10)+'_'+STRMID(n_t[*],11,2)+STRMID(n_t[*],14,2)+$
          'x'+STRMID(n_t[*],17,2)+'.'+STRMID(n_t[*],20)
sfname  = stime[0]+'_'+stime[1]
suffx   = sfname[0]+'_shock-stats'
fname   = 'HTR-MFI_Ne-WAVES_TNR_Ramp-Labeled_'+suffx[0]
nn0     = ['WIND_MAG_HTR(GSE,nT)','WIND_B3_HTR(GSE,nT)']
nna     = [nn0,'waves_density','TNR_'+date[0]]
  tplot,nna,TRANGE=n_td
  time_bar,tura  ,VARNAME=nna,COLOR=150L
popen,fname[0],/LAND
  tplot,nna,TRANGE=n_td
  time_bar,tura  ,VARNAME=nna,COLOR=150L
pclose

;-----------------------------------------------------------------------------------------
; => Zoom in to look at ramp examples [e.g. +/-6 seconds]
;-----------------------------------------------------------------------------------------
fac_tr  = 3d0
fac_tr  = 6d0
fac_tr  = 10d0
;fac_tr  = 12d1       ; => for 1998-09-24 event only [since no burst particle data]

n_td    = tura[0] + [-1d0,1d0]*fac_tr
n_t     = time_string(n_td,PREC=3)
stime   = STRMID(n_t[*],0,10)+'_'+STRMID(n_t[*],11,2)+STRMID(n_t[*],14,2)+$
          'x'+STRMID(n_t[*],17,2)+'.'+STRMID(n_t[*],20)
sfname  = stime[0]+'_'+stime[1]
suffx   = sfname[0]+'_shock-stats'
fname   = 'HTR-MFI_Ramp-Green_TDSS-Start-Red_End-Blue_'+suffx[0]

; => Plot the TDSS start and end times
nn0     = ['WIND_MAG_HTR(GSE,nT)','WIND_B3_HTR(GSE,nT)']
nna     = tnames(nn0)
  tplot,nna,TRANGE=n_td
  time_bar,tsunix,VARNAME=nna,COLOR=250L
  time_bar,teunix,VARNAME=nna,COLOR= 30L
  time_bar,tura  ,VARNAME=nna,COLOR=150L

popen,fname[0],/LAND
  tplot,nna,TRANGE=n_td
  time_bar,tsunix,VARNAME=nna,COLOR=250L
  time_bar,teunix,VARNAME=nna,COLOR= 30L
  time_bar,tura  ,VARNAME=nna,COLOR=150L
pclose

; => Plot the TDSF start times
fname   = 'HTR-MFI_Ramp-Green_TDSF-Start-Cyan_'+suffx[0]
  tplot,nna,TRANGE=n_td
  time_bar,tfunix,VARNAME=nna,COLOR=100L
  time_bar,tura  ,VARNAME=nna,COLOR=150L
popen,fname[0],/LAND
  tplot,nna,TRANGE=n_td
  time_bar,tfunix,VARNAME=nna,COLOR=100L
  time_bar,tura  ,VARNAME=nna,COLOR=150L
pclose


; => Plot the 3DP start times
fname   = 'HTR-MFI_3DP-Start-Times-Red_'+suffx[0]
;fname   = 'HTR-MFI_3DP-Start-Times-Red_End-Times-Blue_'+suffx[0]  ; => for 1998-09-24 event only [since no burst particle data]
  tplot,nna,TRANGE=n_td
  time_bar,tunx_3dp,VARNAME=nna,COLOR=250L
;  time_bar,tunx_3dp+3d0,VARNAME=nna,COLOR= 50L
popen,fname[0],/LAND
  tplot,nna,TRANGE=n_td
  time_bar,tunx_3dp,VARNAME=nna,COLOR=250L
;  time_bar,tunx_3dp+3d0,VARNAME=nna,COLOR= 50L
pclose



;-----------------------------------------------------------------------------------------
; => Special Zoom
;-----------------------------------------------------------------------------------------
;fac_tr  = 3d2
;fac_tr  = 15d1
;fac_tr  = 75d0
;fac_tr  = 60d0
;fac_tr  = 30d0
;fac_tr  = 15d0
;fac_tr  = 10d0
fac_tr  = 5d0

n_td    = tura[0] + [-1d0,1d0]*fac_tr
n_t     = time_string(n_td,PREC=3)
stime   = STRMID(n_t[*],0,10)+'_'+STRMID(n_t[*],11,2)+STRMID(n_t[*],14,2)+$
          'x'+STRMID(n_t[*],17,2)+'.'+STRMID(n_t[*],20)
sfname  = stime[0]+'_'+stime[1]
suffx   = sfname[0]+'_shock-stats'

; => Plot the TDSF start times
fname   = 'HTR-MFI_TDSF-Start-Cyan_'+suffx[0]
  tplot,nna,TRANGE=n_td
  time_bar,tfunix,VARNAME=nna,COLOR=100L
popen,fname[0],/LAND
  tplot,nna,TRANGE=n_td
  time_bar,tfunix,VARNAME=nna,COLOR=100L
pclose



fname   = 'HTR-MFI_Ramp-Green_TDSF-Start-Cyan_'+suffx[0]
  tplot,nna,TRANGE=n_td
  time_bar,tfunix,VARNAME=nna,COLOR=100L
  time_bar,tura  ,VARNAME=nna,COLOR=150L
popen,fname[0],/LAND
  tplot,nna,TRANGE=n_td
  time_bar,tfunix,VARNAME=nna,COLOR=100L
  time_bar,tura  ,VARNAME=nna,COLOR=150L
pclose


