;-----------------------------------------------------------------------------------------
; => Constants
;-----------------------------------------------------------------------------------------
f      = !VALUES.F_NAN
d      = !VALUES.D_NAN
epo    = 8.854187817d-12   ; -Permittivity of free space (F/m)
muo    = 4d0*!DPI*1d-7     ; -Permeability of free space (N/A^2 or H/m)
me     = 9.1093897d-31     ; -Electron mass (kg)
mp     = 1.6726231d-27     ; -Proton mass (kg)
ma     = 4d0*(mp + me)     ; -Alpha-Particle mass (kg)
qq     = 1.60217733d-19    ; -Fundamental charge (C)
kB     = 1.380658d-23      ; -Boltzmann Constant (J/K)
K_eV   = 1.160474d4        ; -Conversion = degree Kelvin/eV
c      = 2.99792458d8      ; -Speed of light in vacuum (m/s)
c2     = (c*1d-3)^2        ; -" " squared (km/s)^2
mm     = [-1d0,0d0,1d0]    ; -[Normal Cyclotron, Landau, Anomalous Cyclotron]
me_ev  = 0.5109906d6       ; -Electron mass in eV/c^2
me_3dp = me_ev/c2          ; -Electron mass [eV/(km/s)^2]
mp_ev  = 938.27231d6       ; -Proton mass in eV/c^2
mp_3dp = mp_ev/c2          ; -Proton mass [eV/(km/s)^2]
pressc = 1.60217646d-13    ; => Conversion from eV/cm^3 to J/m^3 (or Pascals)
picops = pressc*1d12       ; => Conversion from eV/cm^3 to pJ/m^3 (or pPa)

fpeden = (2d0*!DPI)^2*epo*me/qq^2*1d-6  ; => Conversion from fpe to density 1/cm^3

wpefac = SQRT(1d6*qq^2/me/epo)
wppfac = SQRT(1d6*qq^2/mp/epo)
wcifac = qq*1d-9/mp
wcefac = qq*1d-9/me

betafac = 2d0*muo*1d6*(K_eV*kB)/(1d-9)^2
KE_fac  = 5d-1*mp*1d6*(1d3)^2/(qq*1d6)
;---------------------------------------------------
; => Get shock data
;---------------------------------------------------
date        = '121097'
t           = ['1997-12-10/03:33:00','1997-12-10/05:33:00']
;tramp       = '1997-12-10/04:33:14.664'
;deltramp    = ['1997-12-10/04:33:14.394','1997-12-10/04:33:14.934']
tramp       = '1997-12-10/04:33:14.806'                               ; => LBW III 2011-08-15
deltramp    = ['1997-12-10/04:33:14.667','1997-12-10/04:33:14.944']   ; => LBW III 2011-08-15
unc_t       = 0.092d0
gnorm8      = [-0.903, 0.168,-0.397]   ; => Using RH08 from JCK's site
dgnorm8     = [ 0.015, 0.032, 0.374]
gnorm9      = [-0.971, 0.094,-0.218]   ; => Using RH08 from JCK's site
dgnorm9     = [ 0.016, 0.071, 0.214]
ushn        = [132.3, 54.3]           ; => Up/Downstream normal flow speed [shock frame] RHO8
ushn2       = [124.0, 50.4]           ; => Up/Downstream normal flow speed [shock frame] RHO9
v_shn89     = [ 391.2, 403.9]
dv_shn89    = [  12.4,  11.7]
ni_up       = 11.18                   ; => Avg. upstream density [cm^(-3)]
; => Vshn [RH08] = 391.2 +/- 12.4 km/s
; => Vshn [RH08] = 403.9 +/- 11.7 km/s
thetaBn89   = [  70.9,  71.9]         ; => Theta_Bn [degrees, (RH08, RH09)]
valf_updn   = [ 48.44, 68.60]         ; => Alfven Speed [km/s, (up,down)stream]
machf_89    = [  2.26,  2.12]         ; => Fast Mode Mach # [RH08, RH09]
compr       = 2.49                    ; => Compression Ratio


date        = '082698'
t           = ['1998-08-26/05:40:00','1998-08-26/07:40:00']  ; -For moment writing
;tramp       = '1998-08-26/06:40:24.972'
;deltramp    = ['1998-08-26/06:40:24.829','1998-08-26/06:40:25.116']
tramp       = '1998-08-26/06:40:24.967'                               ; => LBW III 2011-08-15
deltramp    = ['1998-08-26/06:40:24.830','1998-08-26/06:40:25.104']   ; => LBW III 2011-08-15
unc_t       = 0.092d0
gnorm8      = [-0.655,0.040,-0.754]   ; => Using RH08 from JCK's site
dgnorm8     = [0.010,0.009,0.561]
gnorm9      = [-0.822,0.138,-0.553]   ; => Using RH09 from JCK's site
dgnorm9     = [0.040,0.070,0.488]
ushn        = [401.3,142.3]           ; => Up/Downstream normal flow speed [shock frame] RHO8
ushn2       = [379.6,135.6]           ; => Up/Downstream normal flow speed [shock frame] RHO9
v_shn89     = [ 687.4, 747.2]
dv_shn89    = [  26.8,  25.5]
ni_up       = 6.68     ; => Avg. upstream density [cm^(-3)]
; => Vshn [RH08] = 687.4 +/- 26.8 km/s
; => Vshn [RH09] = 747.2 +/- 25.5 km/s
thetaBn89   = [  82.2,  78.7]         ; => Theta_Bn [degrees, (RH08, RH09)]
valf_updn   = [ 64.75,111.14]         ; => Alfven Speed [km/s, (up,down)stream]
machf_89    = [  4.74,  4.49]         ; => Fast Mode Mach # [RH08, RH09]
compr       = 2.88                    ; => Compression Ratio


date        = '092498'
t           = ['1998-09-24/22:20:00','1998-09-25/00:20:00']
tramp       = '1998-09-24/23:20:37.374'
deltramp    = ['1998-09-24/23:20:37.310','1998-09-24/23:20:37.494']
unc_t       = 0.092d0
gnorm8      = [-0.914,-0.220,-0.341]   ; => Using RH08 from JCK's site
dgnorm8     = [ 0.004, 0.009, 0.327]
gnorm9      = [-0.939,-0.175,-0.296]   ; => Using RH09 from JCK's site
dgnorm9     = [ 0.024, 0.070, 0.287]
ushn        = [386.3,174.6]           ; => Up/Downstream normal flow speed [shock frame] RHO8
ushn2       = [381.2,171.3]           ; => Up/Downstream normal flow speed [shock frame] RHO9
v_shn89     = [ 772.4, 780.0]
dv_shn89    = [  95.6,  95.5]
ni_up       = 8.40     ; => Avg. upstream density [cm^(-3)]
; => Vshn [RH08] = 772.4 +/- 95.6 km/s
; => Vshn [RH09] = 780.0 +/- 95.5 km/s
thetaBn89   = [  82.1,  78.6]         ; => Theta_Bn [degrees, (RH08, RH09)]
valf_updn   = [114.45,213.44]         ; => Alfven Speed [km/s, (up,down)stream]
machf_89    = [  2.91,  2.87]         ; => Fast Mode Mach # [RH08, RH09]
compr       = 2.17                    ; => Compression Ratio


date        = '021100'
t           = ['2000-02-11/22:33:00','2000-02-12/00:33:00']
;tramp       = '2000-02-11/23:33:55.319'
;deltramp    = ['2000-02-11/23:33:55.183','2000-02-11/23:33:55.458']
tramp       = '2000-02-11/23:33:55.322'                               ; => LBW III 2011-08-15
deltramp    = ['2000-02-11/23:33:55.183','2000-02-11/23:33:55.460']   ; => LBW III 2011-08-15
unc_t       = 0.092d0
gnorm8      = [-0.865,-0.452,0.218]   ; => Using RH08 from JCK's site
dgnorm8     = [ 0.017, 0.030,0.214]
gnorm9      = [-0.930,-0.367,-0.028]   ; => Using RH09 from JCK's site
dgnorm9     = [ 0.025, 0.063, 0.028]
ushn        = [263.6, 81.7]           ; => Up/Downstream normal flow speed [shock frame] RHO8
ushn2       = [255.3, 79.3]           ; => Up/Downstream normal flow speed [shock frame] RHO9
v_shn89     = [ 641.4, 661.1]
dv_shn89    = [  13.2,  12.3]
ni_up       = 5.31     ; => Avg. upstream density [cm^(-3)]
; => Vshn [RH08] = 641.4 +/- 13.2 km/s
; => Vshn [RH09] = 661.1 +/- 12.3 km/s
thetaBn89   = [  86.5,  89.9]         ; => Theta_Bn [degrees, (RH08, RH09)]
valf_updn   = [ 66.20,123.23]         ; => Alfven Speed [km/s, (up,down)stream]
machf_89    = [  3.25,  3.15]         ; => Fast Mode Mach # [RH08, RH09]
compr       = 3.27                    ; => Compression Ratio


date        = '040600'
t           = ['2000-04-06/15:00:00','2000-04-06/18:00:00']  ; -For moment writing
;tramp       = '2000-04-06/16:32:09.237'
;deltramp    = '2000-04-06/'+['16:32:08.966','16:32:09.519']
tramp       = '2000-04-06/16:32:09.336'                               ; => LBW III 2011-08-15
deltramp    = '2000-04-06/'+['16:32:09.151','16:32:09.520']           ; => LBW III 2011-08-15
unc_t       = 0.092d0
gnorm8      = [-0.984,-0.078,-0.162]   ; => Using RH08 from JCK's site
dgnorm8     = [ 0.002, 0.009, 0.161]
gnorm9      = [-0.988,-0.061,-0.140]   ; => Using RH09 from JCK's site
dgnorm9     = [ 0.011, 0.070, 0.139]
ushn        = [ 278.1, 79.8]           ; => Up/Downstream normal flow speed [shock frame] RHO8
ushn2       = [ 277.4, 79.7]           ; => Up/Downstream normal flow speed [shock frame] RHO9
v_shn89     = [ 646.9, 647.1]
dv_shn89    = [  97.9,  97.6]
ni_up       = 8.618                    ; => Avg. upstream density [cm^(-3)]
; => Vshn [RH08] = 641.4 +/- 13.2 km/s
; => Vshn [RH09] = 661.1 +/- 12.3 km/s
thetaBn89   = [  69.6,  68.5]         ; => Theta_Bn [degrees, (RH08, RH09)]
valf_updn   = [ 64.81,136.41]         ; => Alfven Speed [km/s, (up,down)stream]
machf_89    = [  3.97,  3.97]         ; => Fast Mode Mach # [RH08, RH09]
compr       = 3.84                    ; => Compression Ratio

;-----------------------------------------------------------------------------------------
; => MFI and 3DP data [Avg. upstream/downstream]
;     => 10 min. up and down, -30 s from ramp upstream and +180 s from ramp downstream
;
;   t_up = (t < (t_ramp - 30 s)) AND (t > (t_ramp - 630 s))
;   t_dn = (t > (t_ramp + 180 s)) AND (t < (t_ramp + 780 s))
;
;-----------------------------------------------------------------------------------------
;  => For 12/10/1997
magf_u  = [  1.917, -6.693, -1.578]
magf_d  = [  2.361,-14.138, -6.626]
bmag_ud = [  7.218, 15.985]
vsw_up  = [-297.539,6.965,-1.467]
vsw_dn  = [-367.948,11.699,-36.893]
tiav_ud = [  6.265, 14.328]
Niav_ud = [ 11.354, 29.252]
teav_ud = [ 17.664, 18.469]

;  => For 08/26/1998
magf_u  = [  0.244,  6.492, -1.289]
magf_d  = [-12.256,  6.196, 12.414]
bmag_ud = [  6.972, 19.726]
vsw_up  = [-487.668,6.639,11.069]
vsw_dn  = [-649.767,10.680,-182.690]
tiav_ud = [ 23.723, 74.268]
Niav_ud = [  6.728, 15.789]
teav_ud = [ 24.393, 55.819]

;  => For 09/24/1998
magf_u  = [ -7.054, 12.116,  2.493]
magf_d  = [-15.425, 33.756, 15.545]
bmag_ud = [ 14.415, 40.594]
vsw_up  = [-452.786,41.428,34.935]
vsw_dn  = [-652.192,-32.203,-60.896]
tiav_ud = [ 26.580, 79.178]
Niav_ud = [  8.458, 19.096]
teav_ud = [ 22.959, 48.983]

;  => For 02/11/2000
magf_u  = [  2.492, -6.318, -1.760]
magf_d  = [ 10.254,-20.441,  0.143]
bmag_ud = [  7.071, 23.128]
vsw_up  = [-450.053,-9.463,-3.815]
vsw_dn  = [-603.772,-98.920,41.306]
tiav_ud = [ 16.569, 36.370]
Niav_ud = [  5.353, 18.478]
teav_ud = [ 32.829, 40.159]

;  => For 2000-04-06
magf_u  = [  3.223, -6.627, -0.586]
magf_d  = [  6.324,-25.725, -6.278]
bmag_ud = [  7.564, 27.720]
vsw_up  = [-387.161,3.690,-23.599]
vsw_dn  = [-578.251,-21.021,-67.893]
tiav_ud = [  8.683, 57.312]
Niav_ud = [  8.702, 34.375]
teav_ud = [ 12.163, 37.532]
;-----------------------------------------------------------------------------------------
; => B-fields
;-----------------------------------------------------------------------------------------
tr3         = time_double(t)
tura        = time_double(tramp)
mydate      = my_str_date(DATE=date)
date        = mydate.S_DATE[0]  ; -('MMDDYY')
mdate       = mydate.DATE[0]    ; -('YYYYMMDD')
tdate       = mydate.TDATE[0]

mag3        = read_wind_mfi(TRANGE=tr3)
t3x         = mag3.MAG.X
bmag4       = mag3.MAG.Y
magf4       = mag3.BGSE.Y
nt          = N_ELEMENTS(t3x) 
store_data,'wi_B3_MAG(GSE)',DATA={X:mag3.MAG.X,Y:bmag4}
store_data,'wi_B3(GSE)',DATA={X:mag3.MAG.X,Y:magf4}
options,'wi_B3_MAG(GSE)',"YTITLE","|B| (nT)!C[GSE,3s]"
options,'wi_B3(GSE)',"YTITLE","B (nT)!C[GSE,3s]"
options,'wi_B3(GSE)','COLORS',[250,150,50]
nn0         = ['wi_B3_MAG(GSE)','wi_B3(GSE)']

htr_mfi2tplot,DATE=date
;-----------------------------------------------------------------------------------------
; => Define distances from shock ramp
;-----------------------------------------------------------------------------------------
get_data,'WIND_MAG_HTR(GSE,nT)',DATA=htr_bmag
htr_t       = htr_bmag.X
nhtr_t      = htr_t - tura[0]     ; => normalize to zero
ndist       = v_shn89[0]*nhtr_t   ; => km [SC-Frame] from shock ramp center
; => Define average upstream inertial lengths
einert      = c/(wpefac[0]*SQRT(ni_up[0]))
iinert      = c/(wppfac[0]*SQRT(ni_up[0]))
einert     *= 1d-3  ; => Convert to km
iinert     *= 1d-3  ; => Convert to km
; => Define average upstream gyroradii
vthere      = SQRT(2d0*teav_ud[0]*K_eV*kB/me)*1d-3   ; => Avg. upstream electron thermal speed [km/s]
vtherp      = SQRT(2d0*tiav_ud[0]*K_eV*kB/mp)*1d-3   ; => Avg. upstream proton   thermal speed [km/s]
bmag_u      = SQRT(TOTAL(magf_u^2,/NAN))
wce_u       = qq*(bmag_u[0]*1d-9)/me
wcp_u       = qq*(bmag_u[0]*1d-9)/mp
rhoe_u      = vthere[0]/wce_u[0]                     ; => Avg. upstream electron thermal gyroradii [km]
rhop_u      = vtherp[0]/wcp_u[0]                     ; => Avg. upstream proton   thermal gyroradii [km]


; => Send relevant distances to TPLOT
store_data,'normal_distance',DATA={X:htr_t,Y:ndist}
options,'normal_distance','YTITLE','Dist. [Normal, km]'
store_data,'normal_distance_c-wpe',DATA={X:htr_t,Y:ndist/einert[0]}
options,'normal_distance_c-wpe','YTITLE','Dist. [Normal, c/'+'!7x!3'+'!Dpe!N'+']'
store_data,'normal_distance_c-wpi',DATA={X:htr_t,Y:ndist/iinert[0]}
options,'normal_distance_c-wpi','YTITLE','Dist. [Normal, c/'+'!7x!3'+'!Dpi!N'+']'
store_data,'normal_distance_rho-ce',DATA={X:htr_t,Y:ndist/rhoe_u[0]}
store_data,'normal_distance_rho-ci',DATA={X:htr_t,Y:ndist/rhop_u[0]}
options,'normal_distance_rho-ce','YTITLE','Dist. [Normal, V!DTe!N'+'/!7X!3'+'!Dce!N'+']'
options,'normal_distance_rho-ci','YTITLE','Dist. [Normal, V!DTi!N'+'/!7X!3'+'!Dci!N'+']'

nnw         = tnames()
options,nnw,'YSTYLE',1
options,nnw,'PANEL_SIZE',2.
options,nnw,'XMINOR',5
options,nnw,'XTICKLEN',0.04
; => Get orbit data
tds_magneto_orbits,DATE=date
options,'Wind_Radial_Distance','YTITLE','Radial Dist. (R!DE!N)'
labs = ['normal_distance','normal_distance_c-wpe','normal_distance_c-wpi','normal_distance_rho-ci']
tplot_options, var_label=labs
tplot_options,'XMARGIN',[18,18]
tplot_options,'YMARGIN',[5,5]
;-----------------------------------------------------------------------------------------
; => Calculate thickness of shock ramp
;-----------------------------------------------------------------------------------------
dateout     = '    => For '+tdate[0]
macha_up89  = [ushn[0],ushn2[0]]/valf_updn[0]    ; => Alfvenic Mach # [RH08, RH09]
costhbn89   = COS(thetaBn89*!DPI/18d1)

t_ramp      = time_double(deltramp)
; => L_shn = (Vshn * delta_t)/2  {Bale et al., [2003] PRL}
rthickkm8   = v_shn89[0]*(t_ramp[1] - t_ramp[0])
rthickkm9   = v_shn89[1]*(t_ramp[1] - t_ramp[0])
; => Calculate phase standing whistler wavelength [km]
lambda_8    = (2d0*!DPI*iinert[0])*(costhbn89[0]/SQRT(macha_up89[0]^2 - 1d0))
lambda_9    = (2d0*!DPI*iinert[0])*(costhbn89[1]/SQRT(macha_up89[1]^2 - 1d0))
;-----------------------------------------------------------------------------------------
; => Calculate whistler Mach numbers and Alfvenic Mach Numbers
;-----------------------------------------------------------------------------------------
tdates        = ['1997-12-10','1998-08-26','1998-09-24','2000-02-11','2000-04-06']
dateout       = '    => For '+tdates

f             = !VALUES.F_NAN
d             = !VALUES.D_NAN
epo           = 8.854187817d-12   ; -Permittivity of free space (F/m)
muo           = 4d0*!DPI*1d-7     ; -Permeability of free space (N/A^2 or H/m)
me            = 9.1093897d-31     ; -Electron mass (kg)
mp            = 1.6726231d-27     ; -Proton mass (kg)
ma            = 4d0*(mp + me)     ; -Alpha-Particle mass (kg)
qq            = 1.60217733d-19    ; -Fundamental charge (C)
kB            = 1.380658d-23      ; -Boltzmann Constant (J/K)
K_eV          = 1.160474d4        ; -Conversion = degree Kelvin/eV
c             = 2.99792458d8      ; -Speed of light in vacuum (m/s)
au            = 149597871464d0    ; => Astronomical Unit [m]
c_km          = c[0]*1d-3         ; => Speed of light [km/s]
mrat          = SQRT(mp[0]/me[0])
mrat2         = SQRT(mp[0]/(2d0*me[0]))
wcefac        = qq[0]*1d-9/me[0]
wcifac        = qq[0]*1d-9/mp[0]
wpefac        = SQRT(1d6*qq^2/me/epo)
wpifac        = SQRT(1d6*qq^2/mp/epo)


; => Shock ramp duration estimates [s]
deltramp      = [0.277d0,0.274d0,0.184d0,0.277d0,0.369d0]
; => Shock compression ratio [N_i2/N_i1 = unitless]
compr_all     = [2.49,2.88,2.17,3.27,3.84]
; => Fast Mode Mach #
machf_8_all   = [2.26,4.74,2.91,3.25,3.97]
machf_9_all   = [2.12,4.49,2.87,3.15,3.97]
; => Upstream shock normal flow speed [km/s, shock frame]
ushn_8_all    = [ 132.3, 401.3, 386.3, 263.6, 278.1]
ushn_9_all    = [ 124.0, 379.6, 381.2, 255.3, 277.4]
; => Upstream shock normal flow speed [km/s, SC-frame]
vshn_8_all    = [ 391.2, 687.4, 772.4, 641.4, 646.9]
vshn_9_all    = [ 403.9, 747.2, 780.0, 661.1, 647.1]
; => Twice the shock thickness [km, SC-frame]
rthickkm8_all = vshn_8_all*deltramp
rthickkm9_all = vshn_9_all*deltramp
; => Upstream/Downstream Alfven speed [km/s]
valf_up_all   = [ 48.44, 64.75,114.45, 66.20, 64.81]
valf_dn_all   = [ 68.60,111.14,213.44,123.23,136.41]
; => Upstream shock normal angle [deg]
thbn_8_all    = [ 70.9, 82.2, 82.1, 86.5, 69.6]
thbn_9_all    = [ 71.9, 78.7, 78.6, 89.9, 68.5]
; => Upstream X-GSE shock normal vector component
shnx_8_all    = [-0.903, -0.655,-0.914,-0.865,-0.984]
shnx_9_all    = [-0.971, -0.822,-0.939,-0.930,-0.988]
; => Upstream Y-GSE shock normal vector component
shny_8_all    = [ 0.168, 0.040,-0.220,-0.452,-0.078]
shny_9_all    = [ 0.094, 0.138,-0.175,-0.367,-0.061]
; => Upstream Z-GSE shock normal vector component
shnz_8_all    = [-0.397,-0.754,-0.341, 0.218,-0.162]
shnz_9_all    = [-0.218,-0.553,-0.296,-0.028,-0.140]


; => Upstream/Downstream X-GSE B-field component [nT]
magfx_up      = [1.917,0.244,-7.054,2.492,3.223]
magfx_dn      = [2.361,-12.256,-15.425,10.254,6.324]
; => Upstream/Downstream Y-GSE B-field component [nT]
magfy_up      = [-6.693,6.492,12.116,-6.318,-6.627]
magfy_dn      = [-14.138,6.196,33.756,-20.441,-25.725]
; => Upstream/Downstream Z-GSE B-field component [nT]
magfz_up      = [-1.578,-1.289,2.493,-1.760,-0.586]
magfz_dn      = [-6.626,12.414,15.545,0.143,-6.278]
; => Upstream/Downstream B-field magnitude [nT]
bmag_up_all   = [  7.218,  6.972, 14.415,  7.071,  7.564]
bmag_dn_all   = [ 15.985, 19.726, 40.594, 23.128, 27.720]
; => Upstream/Downstream X-GSE Vsw component [km/s]
vswx_up_all   = [-297.539,-487.668,-452.786,-450.053,-387.161]
vswx_dn_all   = [-367.948,-649.767,-652.192,-603.772,-578.251]
; => Upstream/Downstream Y-GSE Vsw component [km/s]
vswy_up_all   = [   6.965,   6.639,  41.428,  -9.463,   3.690]
vswy_dn_all   = [  11.699,  10.680, -32.203, -98.920, -21.021]
; => Upstream/Downstream Z-GSE Vsw component [km/s]
vswz_up_all   = [  -1.467,  11.069,  34.935,  -3.815, -23.599]
vswz_dn_all   = [ -36.893,-182.690, -60.896,  41.306, -67.893]
; => Upstream/Downstream Vsw magnitude [km/s]
vmag_up_all   = SQRT(vswx_up_all^2 + vswy_up_all^2 + vswz_up_all^2)
vmag_dn_all   = SQRT(vswx_dn_all^2 + vswy_dn_all^2 + vswz_dn_all^2)
; => Upstream/Downstream density [cm^(-3)]
dens_up_all   = [ 11.354,  6.728,  8.458,  5.353,  8.702]
dens_dn_all   = [ 29.252, 15.789, 19.096, 18.478, 34.375]
; => Upstream/Downstream electron temperature [eV]
tempe_up_all  = [ 17.664, 24.393, 22.959, 32.829, 12.163]
tempe_dn_all  = [ 18.469, 55.819, 48.983, 40.159, 37.532]
; => Upstream/Downstream ion temperature [eV]
tempi_up_all  = [  6.265, 23.723, 26.580, 16.569,  8.683]
tempi_dn_all  = [ 14.328, 74.268, 79.178, 36.370, 57.312]
; => Calculate theta_Vn [radians]
V_dot_n8      = (vswx_up_all*shnx_8_all + vswy_up_all*shny_8_all + vswz_up_all*shnz_8_all)/vmag_up_all
V_dot_n9      = (vswx_up_all*shnx_9_all + vswy_up_all*shny_9_all + vswz_up_all*shnz_9_all)/vmag_up_all
theta_Vn_8    = ACOS(V_dot_n8)
theta_Vn_9    = ACOS(V_dot_n9)
; => Calculate theta_BV [radians]
B_dot_V       = (magfx_up*vswx_up_all + magfy_up*vswy_up_all + magfz_up*vswz_up_all)/(vmag_up_all*bmag_up_all)
theta_BV      = ACOS(B_dot_V)


;--------------------------------------------------
; => Calculate cross-shock current estimates
;--------------------------------------------------
; => B-field difference across shock [T]
B_diffx       = (magfx_dn - magfx_up)*1d-9
B_diffy       = (magfy_dn - magfy_up)*1d-9
B_diffz       = (magfz_dn - magfz_up)*1d-9
dBmag         = SQRT(B_diffx^2 + B_diffy^2 + B_diffz^2)
; => n x [B_2 - B_1]
n_x8_dbx      = (shny_8_all*B_diffz - shnz_8_all*B_diffy)
n_x8_dby      = (shnz_8_all*B_diffx - shnx_8_all*B_diffz)
n_x8_dbz      = (shnx_8_all*B_diffy - shny_8_all*B_diffx)
; => (2 pi) {n x [B_2 - B_1]}/(muo Lsh/2) = j
j_8_x         = (4d0*!DPI)*n_x8_dbx/(muo*rthickkm8_all*1d3)
j_8_y         = (4d0*!DPI)*n_x8_dby/(muo*rthickkm8_all*1d3)
j_8_z         = (4d0*!DPI)*n_x8_dbz/(muo*rthickkm8_all*1d3)
j8mag         = SQRT(j_8_x^2 + j_8_y^2 + j_8_z^2)*1d6   ; [µA m^(-2)]


; => Calculate ion and electron cyclotron frequencies [avg., rad/s]
wce_up_all    = wcefac[0]*bmag_up_all
wce_dn_all    = wcefac[0]*bmag_dn_all
wci_up_all    = wcifac[0]*bmag_up_all
wci_dn_all    = wcifac[0]*bmag_dn_all
; => Calculate ion and electron plasma frequencies [avg., rad/s]
wpe_up_all    = wpefac[0]*SQRT(dens_up_all)
wpi_up_all    = wpifac[0]*SQRT(dens_up_all)
wpe_dn_all    = wpefac[0]*SQRT(dens_dn_all)
wpi_dn_all    = wpifac[0]*SQRT(dens_dn_all)
; => Calculate ion and electron thermal speeds [avg., km/s]
vte_up_all    = SQRT(2d0*tempe_up_all*kB*K_eV/me)*1d-3
vte_dn_all    = SQRT(2d0*tempe_dn_all*kB*K_eV/me)*1d-3
vti_up_all    = SQRT(2d0*tempi_up_all*kB*K_eV/mp)*1d-3
vti_dn_all    = SQRT(2d0*tempi_dn_all*kB*K_eV/mp)*1d-3
; => Calculate ion and electron plasma betas [avg., unitless]
betae_up_all  = (1d6*dens_up_all)*(2d0*muo*tempe_up_all*kB*K_eV)/(1d-9*bmag_up_all)^2
betae_dn_all  = (1d6*dens_dn_all)*(2d0*muo*tempe_dn_all*kB*K_eV)/(1d-9*bmag_dn_all)^2
betai_up_all  = (1d6*dens_up_all)*(2d0*muo*tempi_up_all*kB*K_eV)/(1d-9*bmag_up_all)^2
betai_dn_all  = (1d6*dens_dn_all)*(2d0*muo*tempi_dn_all*kB*K_eV)/(1d-9*bmag_dn_all)^2
; => Calculate ion and electron thermal gyroradii [avg., km]
rhoe_up_all   = vte_up_all/wce_up_all
rhoe_dn_all   = vte_dn_all/wce_dn_all
rhoi_up_all   = vti_up_all/wci_up_all
rhoi_dn_all   = vti_dn_all/wci_dn_all
; => Calculate ion and electron inflow gyroradii [avg., km]
rhoeUn_up_8   = ushn_8_all/wce_up_all
rhoeUn_up_8   = ushn_8_all/wce_up_all
rhoiUn_up_8   = ushn_8_all/wci_up_all
rhoiUn_up_9   = ushn_9_all/wci_up_all
; => Calculate convected ion and electron gyroradii [avg., km]
rhoe_conv_8   = ushn_8_all/wce_dn_all
rhoe_conv_9   = ushn_9_all/wce_dn_all
rhoi_conv_8   = ushn_8_all/wci_dn_all
rhoi_conv_9   = ushn_9_all/wci_dn_all
; => Calculate ion and electron inertial lengths [avg., km]
inere_up_all  = c_km[0]/wpe_up_all
ineri_up_all  = c_km[0]/wpi_up_all
inere_dn_all  = c_km[0]/wpe_dn_all
ineri_dn_all  = c_km[0]/wpi_dn_all


; => Alfvenic Mach #
mach_A8_all   = ushn_8_all/valf_up_all
mach_A9_all   = ushn_9_all/valf_up_all
; => 1st whistler critical Mach # [Krasnosel'skikh et al., 2002]
mach_w8_all   = mrat[0]*ABS(COS(thbn_8_all*!DPI/18d1))/2d0
mach_w9_all   = mrat[0]*ABS(COS(thbn_9_all*!DPI/18d1))/2d0
; => Non-linear whistler critical Mach # [Krasnosel'skikh et al., 2002]
mach_nl8_all  = mrat2[0]*ABS(COS(thbn_8_all*!DPI/18d1))
mach_nl9_all  = mrat2[0]*ABS(COS(thbn_9_all*!DPI/18d1))
; => Whistler group velocity critical Mach # [Krasnosel'skikh et al., 2002]
mach_wgr8_all = mrat[0]*ABS(COS(thbn_8_all*!DPI/18d1))*SQRT(27d0/64d0)
mach_wgr9_all = mrat[0]*ABS(COS(thbn_9_all*!DPI/18d1))*SQRT(27d0/64d0)


; => Calculate parallel phase speed of oblique magnetosonic wave [km/s]
vph_pa8_all   = valf_up_all*mach_A8_all/COS(thbn_8_all*!DPI/18d1)
vph_pa9_all   = valf_up_all*mach_A9_all/COS(thbn_9_all*!DPI/18d1)
; => Calculate ratio of parallel phase speed of oblique magnetosonic wave to electron thermal speed
vph8_vte_all  = vph_pa8_all/vte_up_all
vph9_vte_all  = vph_pa9_all/vte_up_all
; => Calculate parameter RHS {Eq. 5 in Section 4 of Liewer et al., [1991]}
parm_8_all    = (2d0*me/mp)*(mach_A8_all/COS(thbn_8_all*!DPI/18d1))^2
parm_9_all    = (2d0*me/mp)*(mach_A9_all/COS(thbn_9_all*!DPI/18d1))^2
; => Calculate ratio of parameter RHS and electron beta {Eq. 5 in Section 4 of Liewer et al., [1991]}
ratio_8_all   = betae_up_all/parm_8_all
ratio_9_all   = betae_up_all/parm_9_all


; => Calculate Cos[psi] {Eq. 13 of  Gosling and Thomsen, [1985]}
cos_psi_8     = (1 - 2d0*COS(thbn_8_all*!DPI/18d1)^2)/(2d0*SIN(thbn_8_all*!DPI/18d1)^2)
cos_psi_9     = (1 - 2d0*COS(thbn_9_all*!DPI/18d1)^2)/(2d0*SIN(thbn_9_all*!DPI/18d1)^2)
; => Invert this to find psi
psi_8_all     = ACOS(cos_psi_8)
psi_9_all     = ACOS(cos_psi_9)
; => Calculate f(theta_Bn) {Eq. 15 of  Gosling and Thomsen, [1985]}
func_Bn_8     = psi_8_all*(2d0*COS(thbn_8_all*!DPI/18d1)^2 - 1d0) + $
                2d0*SIN(thbn_8_all*!DPI/18d1)^2*SIN(psi_8_all)
func_Bn_9     = psi_9_all*(2d0*COS(thbn_9_all*!DPI/18d1)^2 - 1d0) + $
                2d0*SIN(thbn_9_all*!DPI/18d1)^2*SIN(psi_9_all)
; => Calculate foot thickness [km] {Eq. 14 of  Gosling and Thomsen, [1985]}
v_in_8_wci    = vmag_up_all*COS(theta_Vn_8)/wci_up_all
v_in_9_wci    = vmag_up_all*COS(theta_Vn_9)/wci_up_all
foot_thick_8  = v_in_8_wci*func_Bn_8
foot_thick_9  = v_in_9_wci*func_Bn_9

; => Calculate resistive scale length for IAWs {L_G from Balikhin et al., [1995]}
len_res8_all  = (me/mp)^(1d0/4d0)*ineri_up_all*SIN(thbn_8_all*!DPI/18d1)/SQRT(betae_up_all)
len_res9_all  = (me/mp)^(1d0/4d0)*ineri_up_all*SIN(thbn_9_all*!DPI/18d1)/SQRT(betae_up_all)
; => Calculate shock thickness in resistive scale lengths for IAWs {L_G from Balikhin et al., [1995]}
Lsh8_reslen   = rthickkm8_all/(len_res8_all*2d0)
Lsh9_reslen   = rthickkm9_all/(len_res9_all*2d0)
; => Calculate phase standing whistler wavelength [km]
lambda_8      = (2d0*!DPI*ineri_up_all)*(COS(thbn_8_all*!DPI/18d1)/SQRT(mach_A8_all^2 - 1d0))
lambda_9      = (2d0*!DPI*ineri_up_all)*(COS(thbn_9_all*!DPI/18d1)/SQRT(mach_A9_all^2 - 1d0))

; => Calculate necessary anomalous collision frequency necessary for resistive dissipation
;      to maintain shock structure {Eq. 36 w/o alpha from Treumann, [2009]}
nu_anom_8     = ushn_8_all*rthickkm8_all/(2d0*inere_up_all^2)
nu_anom_9     = ushn_9_all*rthickkm9_all/(2d0*inere_up_all^2)


FOR j=0L, 4L DO BEGIN $
  PRINT,'; ', nu_anom_8[j], nu_anom_9[j], dateout[j]
;-----------------------------------------------------------------------------------------
;        Eq. 36 in Treumann, [2009]
;           RH08            RH09
;=========================================================================================
;        2882.0343       2788.9194    => For 1997-12-10
;        9003.8243       9257.8769    => For 1998-08-26
;        8221.7497       8193.0345    => For 1998-09-24
;        4438.7753       4431.0508    => For 2000-02-11
;        10228.109       10205.517    => For 2000-04-06
;-----------------------------------------------------------------------------------------

; => Print realistic values for quasi-linear anomalous collision freq.
;      assuming dE = 30 mV/m
quasianom_f = wpe_up_all*epo*(30d-3)^2/(2d6*dens_up_all*tempe_up_all*kB*K_eV)
PRINT,'; ', quasianom_f
;        23.570446       22.172930       21.010892       18.470346       39.100386
PRINT,'; ', quasianom_f/nu_anom_8
;     0.0081784060    0.0024626125    0.0025555256    0.0041611356    0.0038228364


FOR j=0L, 4L DO BEGIN $
  PRINT,'; ', ratio_8_all[j], ratio_9_all[j], dateout[j]
;-----------------------------------------------------------------------------------------
; Ratio Eq. 5 in Section 4 of Liewer et al., [1991]
;           RH08            RH09
;=========================================================================================
;        20.427111       20.961668    => For 1997-12-10
;       0.59851849       1.3943681    => For 1998-08-26
;       0.57288697       1.2166995    => For 1998-09-24
;       0.30542817   0.00026612689    => For 2000-02-11
;        4.5129874       5.0143989    => For 2000-04-06
;-----------------------------------------------------------------------------------------

FOR j=0L, 4L DO BEGIN $
  PRINT,'; ', len_res8_all[j], len_res9_all[j], dateout[j]
;-----------------------------------------------------------------------------------------
;                L_res (km)
;           RH08            RH09
;=========================================================================================
;        7.8353323       7.8814912    => For 1997-12-10
;        11.395347       11.278797    => For 1998-08-26
;        19.313222       19.113593    => For 1998-09-24
;        12.614487       12.638041    => For 2000-02-11
;        12.805838       12.712052    => For 2000-04-06
;-----------------------------------------------------------------------------------------

FOR j=0L, 4L DO BEGIN $
  PRINT,'; ', Lsh8_reslen[j], Lsh9_reslen[j], dateout[j]
;-----------------------------------------------------------------------------------------
;                L_sh/L_res
;           RH08            RH09
;=========================================================================================
;        6.9149846       7.0976605    => For 1997-12-10
;        8.2642332       9.0760033    => For 1998-08-26
;        3.6793862       3.7543962    => For 1998-09-24
;        7.0422128       7.2449796    => For 2000-02-11
;        9.3202062       9.3918707    => For 2000-04-06
;-----------------------------------------------------------------------------------------



FOR j=0L, 4L DO BEGIN $
  PRINT,'; ', foot_thick_8[j], foot_thick_9[j], dateout[j]
;-----------------------------------------------------------------------------------------
;                d_foot [km]
;           RH08            RH09
;=========================================================================================
;        284.47574       303.03736    => For 1997-12-10
;        322.43314       414.24319    => For 1998-08-26
;        196.81049       206.46547    => For 1998-09-24
;        397.89551       426.82529    => For 2000-02-11
;        389.34020       393.52461    => For 2000-04-06
;-----------------------------------------------------------------------------------------

FOR j=0L, 4L DO BEGIN $
  PRINT,'; ', foot_thick_8[j]/rhoi_up_all[j], foot_thick_9[j]/rhoi_up_all[j], dateout[j]
;-----------------------------------------------------------------------------------------
;                d_foot/rho_ci
;           RH08            RH09
;=========================================================================================
;        5.6772413       6.0476729    => For 1997-12-10
;        3.1940965       4.1035879    => For 1998-08-26
;        3.8082126       3.9950330    => For 1998-09-24
;        4.7834088       5.1311960    => For 2000-02-11
;        6.9164249       6.9907587    => For 2000-04-06
;-----------------------------------------------------------------------------------------

FOR j=0L, 4L DO BEGIN $
  PRINT,'; ', foot_thick_8[j]/rhoiUn_up_8[j], foot_thick_9[j]/rhoiUn_up_9[j], dateout[j]
;-----------------------------------------------------------------------------------------
;              d_foot/rhoi_Un
;           RH08            RH09
;=========================================================================================
;        1.4866706       1.6896777    => For 1997-12-10
;       0.53658731      0.72878436    => For 1998-08-26
;       0.70347828      0.74786234    => For 1998-09-24
;        1.0223909       1.1323812    => For 2000-02-11
;        1.0143604       1.0278494    => For 2000-04-06
;-----------------------------------------------------------------------------------------

FOR j=0L, 4L DO BEGIN $
  PRINT,'; ', foot_thick_8[j]/rhoi_conv_8[j], foot_thick_9[j]/rhoi_conv_9[j], dateout[j]
;-----------------------------------------------------------------------------------------
;              d_foot/rho_conv
;           RH08            RH09
;=========================================================================================
;        3.2923842       3.7419641    => For 1997-12-10
;        1.5181757       2.0619621    => For 1998-08-26
;        1.9810613       2.1060510    => For 1998-09-24
;        3.3440610       3.7038202    => For 2000-02-11
;        3.7173543       3.7667879    => For 2000-04-06
;-----------------------------------------------------------------------------------------

FOR j=0L, 4L DO BEGIN $
  PRINT,'; ', foot_thick_8[j]/vshn_8_all[j], foot_thick_9[j]/vshn_9_all[j], dateout[j]
;-----------------------------------------------------------------------------------------
;          d_foot/Vshn [seconds]
;           RH08            RH09
;=========================================================================================
;       0.72718746      0.75027821    => For 1997-12-10
;       0.46906186      0.55439398    => For 1998-08-26
;       0.25480384      0.26469932    => For 1998-09-24
;       0.62035468      0.64562895    => For 2000-02-11
;       0.60185529      0.60813573    => For 2000-04-06
;-----------------------------------------------------------------------------------------



FOR j=0L, 4L DO BEGIN $
  PRINT,'; ', rthickkm8_all[j]/2d0, rthickkm9_all[j]/2d0, dateout[j]
;-----------------------------------------------------------------------------------------
;                 L_sh (km)
;           RH08            RH09
;=========================================================================================
;        54.181202       55.940149    => For 1997-12-10
;        94.173803       102.36640    => For 1998-08-26
;        71.060802       71.760000    => For 1998-09-24
;        88.833903       91.562347    => For 2000-02-11
;        119.35305       119.38995    => For 2000-04-06
;-----------------------------------------------------------------------------------------

FOR j=0L, 4L DO BEGIN $
  PRINT,'; ', lambda_8[j], lambda_9[j], dateout[j]
;-----------------------------------------------------------------------------------------
;                 L_wh (km)
;           RH08            RH09
;=========================================================================================
;        54.667031       55.980447    => For 1997-12-10
;        12.239086       18.710378    => For 1998-08-26
;        20.974799       30.606845    => For 1998-09-24
;        9.7948799      0.28977239    => For 2000-02-11
;        40.514747       42.712358    => For 2000-04-06
;-----------------------------------------------------------------------------------------

FOR j=0L, 4L DO BEGIN $
  PRINT,'; ', rthickkm8_all[j]/(2d0*lambda_8[j]), rthickkm9_all[j]/(2d0*lambda_9[j]), dateout[j]
;-----------------------------------------------------------------------------------------
;                L_sh/L_wh
;           RH08            RH09
;=========================================================================================
;       0.99111293      0.99928014    => For 1997-12-10
;        7.6945129       5.4711028    => For 1998-08-26
;        3.3879134       2.3445736    => For 1998-09-24
;        9.0694224       315.98023    => For 2000-02-11
;        2.9459163       2.7952085    => For 2000-04-06
;-----------------------------------------------------------------------------------------

FOR j=0L, 4L DO BEGIN $
  PRINT,'; ', rthickkm8_all[j]/(2d0*rhoi_conv_8[j]), rthickkm9_all[j]/(2d0*rhoi_conv_9[j]), dateout[j]
;-----------------------------------------------------------------------------------------
;               L_sh/rho_conv
;           RH08            RH09
;=========================================================================================
;       0.62706694      0.69075980    => For 1997-12-10
;       0.44341714      0.50954523    => For 1998-08-26
;       0.71528607      0.73198787    => For 1998-09-24
;       0.74659299      0.79454165    => For 2000-02-11
;        1.1395628       1.1427915    => For 2000-04-06
;-----------------------------------------------------------------------------------------

FOR j=0L, 4L DO BEGIN $
  PRINT,'; ', rthickkm8_all[j]/(2d0*rhoiUn_up_8[j]), rthickkm9_all[j]/(2d0*rhoiUn_up_8[j]), dateout[j]
;-----------------------------------------------------------------------------------------
;               L_sh/rhoi_Un
;           RH08            RH09
;=========================================================================================
;       0.28315103      0.29234329    => For 1997-12-10
;       0.15672232      0.17035629    => For 1998-08-26
;       0.25399932      0.25649853    => For 1998-09-24
;       0.22825835      0.23526907    => For 2000-02-11
;       0.31095429      0.31105041    => For 2000-04-06
;-----------------------------------------------------------------------------------------

FOR j=0L, 4L DO BEGIN $
  PRINT,'; ', rthickkm8_all[j]/(2d0*inere_up_all[j]), rthickkm9_all[j]/(2d0*inere_up_all[j]), dateout[j]
;-----------------------------------------------------------------------------------------
;               L_sh/(c/wpe)
;           RH08            RH09
;=========================================================================================
;        34.355317       35.470634    => For 1997-12-10
;        45.966770       49.965624    => For 1998-08-26
;        38.889721       39.272374    => For 1998-09-24
;        38.676596       39.864508    => For 2000-02-11
;        66.254280       66.274759    => For 2000-04-06
;-----------------------------------------------------------------------------------------

FOR j=0L, 4L DO BEGIN $
  PRINT,'; ', rthickkm8_all[j]/(2d0*rhoe_up_all[j]), rthickkm9_all[j]/(2d0*rhoe_up_all[j]), dateout[j]
;-----------------------------------------------------------------------------------------
;                L_sh/rho_ce
;           RH08            RH09
;=========================================================================================
;        27.593778       28.489587    => For 1997-12-10
;        39.422583       42.852128    => For 1998-08-26
;        63.395503       64.019278    => For 1998-09-24
;        32.510298       33.508819    => For 2000-02-11
;        76.763522       76.787248    => For 2000-04-06
;-----------------------------------------------------------------------------------------

FOR j=0L, 4L DO BEGIN $
  PRINT,'; ', rthickkm8_all[j]/(2d0*ineri_up_all[j]), rthickkm9_all[j]/(2d0*ineri_up_all[j]), dateout[j]
;-----------------------------------------------------------------------------------------
;               L_sh/(c/wpi)
;           RH08            RH09
;=========================================================================================
;       0.80175109      0.82777927    => For 1997-12-10
;        1.0727279       1.1660493    => For 1998-08-26
;       0.90757062      0.91650059    => For 1998-09-24
;       0.90259691      0.93031925    => For 2000-02-11
;        1.5461782       1.5466561    => For 2000-04-06
;-----------------------------------------------------------------------------------------

FOR j=0L, 4L DO BEGIN $
  PRINT,'; ', rthickkm8_all[j]/(2d0*rhoi_up_all[j]), rthickkm9_all[j]/(2d0*rhoi_up_all[j]), dateout[j]
;-----------------------------------------------------------------------------------------
;                L_sh/rho_ci
;           RH08            RH09
;=========================================================================================
;        1.0812864       1.1163895    => For 1997-12-10
;       0.93290726       1.0140650    => For 1998-08-26
;        1.3750011       1.3885303    => For 1998-09-24
;        1.0679409       1.1007416    => For 2000-02-11
;        2.1202445       2.1208999    => For 2000-04-06
;-----------------------------------------------------------------------------------------



FOR j=0L, 4L DO BEGIN $
  PRINT,'; ', mach_A8_all[j], mach_w8_all[j], mach_wgr8_all[j], mach_nl8_all[j], dateout[j]
;-----------------------------------------------------------------------------------------
;      Alfvenic        Whistler        Whistler        Whistler
;        Mach            Phase           Group        Non-Linear
;                        Mach            Mach            Mach
;=========================================================================================
;       2.73121       7.0107007       9.1071674       9.9146280    => For 1997-12-10
;       6.19768       2.9077312       3.7772537       4.1121529    => For 1998-08-26
;       3.37527       2.9447742       3.8253739       4.1645396    => For 1998-09-24
;       3.98187       1.3079757       1.6991103       1.8497570    => For 2000-02-11
;       4.29100       7.4682182       9.7015000       10.561655    => For 2000-04-06
;-----------------------------------------------------------------------------------------


FOR j=0L, 4L DO BEGIN $
  PRINT,'; ', mach_A9_all[j], mach_w9_all[j], mach_wgr9_all[j], mach_nl9_all[j], dateout[j]
;-----------------------------------------------------------------------------------------
;      Alfvenic        Whistler        Whistler        Whistler
;        Mach            Phase           Group        Non-Linear
;                        Mach            Mach            Mach
;=========================================================================================
;       2.55987       6.6562968       8.6467832       9.4134252    => For 1997-12-10
;       5.86255       4.1981818       5.4535982       5.9371257    => For 1998-08-26
;       3.33071       4.2348440       5.5012237       5.9889738    => For 1998-09-24
;       3.85650     0.037393398     0.048575449     0.052882250    => For 2000-02-11
;       4.28020       7.8523535       10.200506       11.104905    => For 2000-04-06
;-----------------------------------------------------------------------------------------

FOR j=0L, 4L DO BEGIN $
  PRINT,'; ', machf_8_all[j]/mach_A8_all[j], machf_8_all[j]/mach_w8_all[j], $
              machf_8_all[j]/mach_wgr8_all[j], machf_8_all[j]/mach_nl8_all[j], dateout[j]
;-----------------------------------------------------------------------------------------
;       M_f/M_A       M_f/M_wph       M_f/M_wgr       M_f/M_wnl
;=========================================================================================
;      0.827471      0.32236435      0.24815619      0.22794602    => For 1997-12-10
;      0.764802       1.6301368       1.2548799       1.1526808    => For 1998-08-26
;      0.862153      0.98819124      0.76070997      0.69875673    => For 1998-09-24
;      0.816199       2.4847556       1.9127657       1.7569875    => For 2000-02-11
;      0.925191      0.53158597      0.40921507      0.37588805    => For 2000-04-06
;-----------------------------------------------------------------------------------------

FOR j=0L, 4L DO BEGIN $
  PRINT,'; ', machf_9_all[j]/mach_A9_all[j], machf_9_all[j]/mach_w9_all[j], $
              machf_9_all[j]/mach_wgr9_all[j], machf_9_all[j]/mach_nl9_all[j], dateout[j]
;-----------------------------------------------------------------------------------------
;       M_f/M_A       M_f/M_wph       M_f/M_wgr       M_f/M_wnl
;=========================================================================================
;      0.828168      0.31849540      0.24517787      0.22521025    => For 1997-12-10
;      0.765878       1.0695105      0.82330960      0.75625816    => For 1998-08-26
;      0.861678      0.67771089      0.52170209      0.47921397    => For 1998-09-24
;      0.816804       84.239472       64.847576       59.566302    => For 2000-02-11
;      0.927526      0.50558091      0.38919637      0.35749969    => For 2000-04-06
;-----------------------------------------------------------------------------------------

FOR j=0L, 4L DO BEGIN $
  PRINT,'; ', mach_A8_all[j]/mach_w8_all[j], mach_A8_all[j]/mach_wgr8_all[j], $
              mach_A8_all[j]/mach_nl8_all[j], dateout[j]
;-----------------------------------------------------------------------------------------
;        M_A/M_wph       M_A/M_wgr       M_A/M_wnl
;=========================================================================================
;       0.38957790      0.29989721      0.27547317    => For 1997-12-10
;        2.1314499       1.6407909       1.5071627    => For 1998-08-26
;        1.1461908      0.88233805      0.81047925    => For 1998-09-24
;        3.0443021       2.3435048       2.1526467    => For 2000-02-11
;       0.57456873      0.44230322      0.40628145    => For 2000-04-06
;-----------------------------------------------------------------------------------------



FOR j=0L, 4L DO BEGIN $
  PRINT,'; ', mach_A9_all[j]/mach_w9_all[j], mach_A9_all[j]/mach_wgr9_all[j], $
              mach_A9_all[j]/mach_nl9_all[j], dateout[j]
;-----------------------------------------------------------------------------------------
;        M_A/M_wph       M_A/M_wgr       M_A/M_wnl
;=========================================================================================
;       0.38457838      0.29604858      0.27193798    => For 1997-12-10
;        1.3964494       1.0749872      0.98743881    => For 1998-08-26
;       0.78650178      0.60544935      0.55614074    => For 1998-09-24
;        103.13306       79.391868       72.926088    => For 2000-02-11
;       0.54508547      0.41960699      0.38543364    => For 2000-04-06
;-----------------------------------------------------------------------------------------






