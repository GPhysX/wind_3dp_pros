;-----------------------------------------------------------------------------------------
; => Constants
;-----------------------------------------------------------------------------------------
f      = !VALUES.F_NAN
d      = !VALUES.D_NAN
epo    = 8.854187817d-12   ; => Permittivity of free space (F/m)
muo    = 4d0*!DPI*1d-7     ; => Permeability of free space (N/A^2 or H/m)
me     = 9.10938291d-31    ; => Electron mass (kg) [2010 value]
mp     = 1.672621777d-27   ; => Proton mass (kg) [2010 value]
ma     = 6.64465675d-27    ; => Alpha-Particle mass (kg) [2010 value]
qq     = 1.602176565d-19   ; => Fundamental charge (C) [2010 value]
kB     = 1.3806488d-23     ; => Boltzmann Constant (J/K) [2010 value]
K_eV   = 1.1604519d4       ; => Factor [Kelvin/eV] [2010 value]
c      = 2.99792458d8      ; => Speed of light in vacuum (m/s)
; => Multiplication factors for plasma frequency calculations [to angular frequency]
wpefac = SQRT(1d6*qq^2/me/epo)
wppfac = SQRT(1d6*qq^2/mp/epo)


;---------------------------------------------------
;  1997-12-10
;---------------------------------------------------
date        = '121097'
t           = ['1997-12-10/03:33:00','1997-12-10/05:33:00']
tramp       = '1997-12-10/04:33:14.664'
gnorm8      = [-0.903, 0.168,-0.397]   ; => Using RH08 from JCK's site
dgnorm8     = [ 0.015, 0.032, 0.374]
gnorm9      = [-0.971, 0.094,-0.218]   ; => Using RH08 from JCK's site
dgnorm9     = [ 0.016, 0.071, 0.214]
ushn        = [ 132.3,  54.3]          ; => Up/Downstream normal flow speed [shock frame] RHO8
ushn2       = [ 124.0,  50.4]          ; => Up/Downstream normal flow speed [shock frame] RHO9
v_shn89     = [ 391.2, 403.9]          ; => Shock normal speed [SC-Frame, km/s] {RHO8, RHO9}
dv_shn89    = [  12.4,  11.7]
thetaBn89   = [  70.9,  71.9]          ; => Theta_Bn [degrees, (RH08, RH09)]
sound_updn  = [ 34.04, 43.73]          ; => Sound Speed [km/s, (up,down)stream]
valf_updn   = [ 48.44, 68.60]          ; => Alfven Speed [km/s, (up,down)stream]
machf_89    = [  2.26,  2.12]          ; => Fast Mode Mach # [RH08, RH09]
compr       = [  2.49,  0.35]          ; => Compression Ratio [value, uncertainty]
ni_up       = 11.18                    ; => Avg. upstream density [cm^(-3)]

;---------------------------------------------------
;  1998-08-26
;---------------------------------------------------
date        = '082698'
t           = ['1998-08-26/05:40:00','1998-08-26/07:40:00']  ; -For moment writing
tramp       = '1998-08-26/06:40:24.972'
gnorm8      = [-0.655, 0.040,-0.754]   ; => Using RH08 from JCK's site
dgnorm8     = [ 0.010, 0.009, 0.561]
gnorm9      = [-0.822, 0.138,-0.553]   ; => Using RH09 from JCK's site
dgnorm9     = [ 0.040, 0.070, 0.488]
ushn        = [ 401.3, 142.3]          ; => Up/Downstream normal flow speed [shock frame] RHO8
ushn2       = [ 379.6, 135.6]          ; => Up/Downstream normal flow speed [shock frame] RHO9
v_shn89     = [ 687.4, 747.2]          ; => Shock normal speed [SC-Frame, km/s] {RHO8, RHO9}
dv_shn89    = [  26.8,  25.5]
thetaBn89   = [  82.2,  78.7]          ; => Theta_Bn [degrees, (RH08, RH09)]
sound_updn  = [ 54.98,163.47]          ; => Sound Speed [km/s, (up,down)stream]
valf_updn   = [ 64.75,111.14]          ; => Alfven Speed [km/s, (up,down)stream]
machf_89    = [  4.74,  4.49]          ; => Fast Mode Mach # [RH08, RH09]
compr       = [  2.88,  0.31]          ; => Compression Ratio [value, uncertainty]
ni_up       =  6.68                    ; => Avg. upstream density [cm^(-3)]

;---------------------------------------------------
;  1998-09-24
;---------------------------------------------------
date        = '092498'
t           = ['1998-09-24/22:20:00','1998-09-25/00:30:00']
tramp       = '1998-09-24/23:20:37.374'
gnorm8      = [-0.914,-0.220,-0.341]   ; => Using RH08 from JCK's site
dgnorm8     = [ 0.004, 0.009, 0.327]
gnorm9      = [-0.939,-0.175,-0.296]   ; => Using RH09 from JCK's site
dgnorm9     = [ 0.024, 0.070, 0.287]
ushn        = [ 386.3, 174.6]          ; => Up/Downstream normal flow speed [shock frame] RHO8
ushn2       = [ 381.2, 171.3]          ; => Up/Downstream normal flow speed [shock frame] RHO9
v_shn89     = [ 772.4, 780.0]          ; => Shock normal speed [SC-Frame, km/s] {RHO8, RHO9}
dv_shn89    = [  95.6,  95.5]
thetaBn89   = [  82.1,  78.6]          ; => Theta_Bn [degrees, (RH08, RH09)]
sound_updn  = [ 68.20,133.24]          ; => Sound Speed [km/s, (up,down)stream]
valf_updn   = [114.45,213.44]          ; => Alfven Speed [km/s, (up,down)stream]
machf_89    = [  2.91,  2.87]          ; => Fast Mode Mach # [RH08, RH09]
compr       = [  2.17,  0.38]          ; => Compression Ratio [value, uncertainty]
ni_up       =  8.40                    ; => Avg. upstream density [cm^(-3)]

;---------------------------------------------------
;  2000-02-11 [B]
;---------------------------------------------------
date        = '021100'
t           = ['2000-02-11/22:33:00','2000-02-12/00:33:00']
tramp       = '2000-02-11/23:33:55.319'
gnorm8      = [-0.865,-0.452, 0.218]   ; => Using RH08 from JCK's site
dgnorm8     = [ 0.017, 0.030, 0.214]
gnorm9      = [-0.930,-0.367,-0.028]   ; => Using RH09 from JCK's site
dgnorm9     = [ 0.025, 0.063, 0.028]
ushn        = [ 263.6,  81.7]          ; => Up/Downstream normal flow speed [shock frame] RHO8
ushn2       = [ 255.3,  79.3]          ; => Up/Downstream normal flow speed [shock frame] RHO9
v_shn89     = [ 641.4, 661.1]          ; => Shock normal speed [SC-Frame, km/s] {RHO8, RHO9}
dv_shn89    = [  13.2,  12.3]
thetaBn89   = [  86.5,  89.9]          ; => Theta_Bn [degrees, (RH08, RH09)]
sound_updn  = [ 46.87, 77.54]          ; => Sound Speed [km/s, (up,down)stream]
valf_updn   = [ 66.20,123.23]          ; => Alfven Speed [km/s, (up,down)stream]
machf_89    = [  3.25,  3.15]          ; => Fast Mode Mach # [RH08, RH09]
compr       = [  3.27,  0.50]          ; => Compression Ratio [value, uncertainty]
ni_up       =  5.31                    ; => Avg. upstream density [cm^(-3)]

;---------------------------------------------------
;  2000-04-06
;---------------------------------------------------
date        = '040600'
t           = ['2000-04-06/15:00:00','2000-04-06/19:00:00']
tramp       = '2000-04-06/16:32:09.237'
gnorm8      = [-0.984,-0.078,-0.162]   ; => Using RH08 from JCK's site
dgnorm8     = [ 0.002, 0.009, 0.161]
gnorm9      = [-0.988,-0.061,-0.140]   ; => Using RH09 from JCK's site
dgnorm9     = [ 0.011, 0.070, 0.139]
ushn        = [ 278.1, 79.8]           ; => Up/Downstream normal flow speed [shock frame] RHO8
ushn2       = [ 277.4, 79.7]           ; => Up/Downstream normal flow speed [shock frame] RHO9
v_shn89     = [ 646.9, 647.1]          ; => Shock normal speed [SC-Frame, km/s] {RHO8, RHO9}
dv_shn89    = [  97.9,  97.6]
thetaBn89   = [  69.6,  68.5]          ; => Theta_Bn [degrees, (RH08, RH09)]
sound_updn  = [ 29.87, 92.08]          ; => Sound Speed [km/s, (up,down)stream]
valf_updn   = [ 64.81,136.41]          ; => Alfven Speed [km/s, (up,down)stream]
machf_89    = [  3.97,  3.97]          ; => Fast Mode Mach # [RH08, RH09]
compr       = [  3.84,  1.25]          ; => Compression Ratio [value, uncertainty]
ni_up       =  8.62                    ; => Avg. upstream density [cm^(-3)]

;-----------------------------------------------------------------------------------------
; => B-fields
;-----------------------------------------------------------------------------------------
tr3         = time_double(t)
tura        = time_double(tramp)
mydate      = my_str_date(DATE=date)
date        = mydate.S_DATE[0]  ; -('MMDDYY')
mdate       = mydate.DATE[0]    ; -('YYYYMMDD')
tdate       = mydate.TDATE[0]

mfi3s       = read_wind_mfi(TRANGE=tr3)
bgse        = mfi3s.BGSE
bgsm        = mfi3s.BGSM
bmags       = mfi3s.MAG
t3x         = bgse.X
nt          = N_ELEMENTS(t3x)

store_data,'wi_B3_MAG',DATA=bmags
store_data,'wi_B3_GSE',DATA=bgse
store_data,'wi_B3_GSM',DATA=bgsm
nn0    = ['wi_B3_MAG','wi_B3_GSE']
options,'wi_B3_MAG','YTITLE','|B| [3s, nT]'
options,'wi_B3_GSE','YTITLE','B (nT)!C[GSE, 3s]'
options,'wi_B3_GSM','YTITLE','B (nT)!C[GSM, 3s]'
options,['wi_B3_GSE','wi_B3_GSM'],'COLORS',[250,150,50]
WINDOW,0,RETAIN=2,XSIZE=1700,YSIZE=1100
tplot,nn0,TRANGE=tr3


mfihtr   = read_wind_htr_mfi(TRANGE=tr3)
bgse_htr = mfihtr.BGSE
bgsm_htr = mfihtr.BGSM
bmag_htr = mfihtr.BMAG
t3x_htr  = bgse_htr.X
store_data,'wi_BHTR_MAG',DATA=bmag_htr
store_data,'wi_BHTR_GSE',DATA=bgse_htr
store_data,'wi_BHTR_GSM',DATA=bgsm_htr

options,'wi_BHTR_MAG','YTITLE','|B| [HTR, nT]'
options,'wi_BHTR_GSE','YTITLE','B (nT)!C[GSE, HTR]'
options,'wi_BHTR_GSM','YTITLE','B (nT)!C[GSM, HTR]'
options,['wi_BHTR_GSE','wi_BHTR_GSM'],'COLORS',[250,150,50]
nnh      = ['wi_BHTR_MAG','wi_BHTR_GSE']
;-----------------------------------------
; => Special 1998-08-26 case
;-----------------------------------------
mdir   = FILE_EXPAND_PATH('IDL_stuff/cribs/wind_htr_mfi_files/')
mfiles = FILE_SEARCH(mdir,'wi_h2_mfi_*_sine_and_spline.cdf')
; => Read CDF file with splined and sine-wave fits
bnm_epoch = STRLOWCASE('Epoch')   ; => " " HTR Epoch times
bnm_gse   = STRLOWCASE('BGSE')    ; => CDF tag for HTR GSE B-field data
bnm_gsm   = STRLOWCASE('BGSM')    ; => CDF tag for HTR GSM B-field data
tyfile    = mfiles[0]
; => Read CDF file with GSE/GSM data ("fixed" saturated)
windmm    = read_cdf(tyfile[0],data_gse,var_gse,/NOTIME)
!QUIET    = 0

var_lw    = STRLOWCASE(REFORM(var_gse[*,0]))
g_bgse    = WHERE(var_lw EQ bnm_gse  ,ggse)   ; => Elements of Pointer for HTR GSE data
g_bgsm    = WHERE(var_lw EQ bnm_gsm  ,ggsm)   ; => Elements of Pointer for HTR GSM data
g_epo3    = WHERE(var_lw EQ bnm_epoch,gep3)   ; => Element for Epoch times
; => Define dummy variables
IF (ggse GT 0) THEN tgsemag = *data_gse[g_bgse[0]]
IF (ggsm GT 0) THEN tgsmmag = *data_gse[g_bgsm[0]]
IF (gep3 GT 0) THEN tempepo = *data_gse[g_epo3[0]]
; => Convert Epoch times to Unix
unx_gse = epoch2unix(tempepo)
mag_gse = tgsemag
mag_gsm = tgsmmag
; => Release pointer and increment index markers
PTR_FREE,data_gse
DELVAR,tgsemag,tgsmmag,tempepo,var_cnts,var_lw

; => keep only between time range
good     = WHERE(unx_gse GE tr3[0] AND unx_gse LE tr3[1],gd)
t3x_htr  = unx_gse[good]
nhtr     = N_ELEMENTS(t3x_htr)
mag_gse  = mag_gse[good,*]
mag_gsm  = mag_gsm[good,*]
bmag     = SQRT(TOTAL(mag_gse^2,2L,/NAN))
; => Send to TPLOT
bgse_htr = {X:t3x_htr,Y:mag_gse}
bgsm_htr = {X:t3x_htr,Y:mag_gsm}
bmag_htr = {X:t3x_htr,Y:bmag}

store_data,'wi_BHTR_MAG',DATA=bmag_htr
store_data,'wi_BHTR_GSE',DATA=bgse_htr
store_data,'wi_BHTR_GSM',DATA=bgsm_htr
nnh      = ['wi_BHTR_MAG','wi_BHTR_GSE']

options,'wi_BHTR_MAG','YTITLE','|B| [HTR, nT]'
options,'wi_BHTR_GSE','YTITLE','B (nT)!C[GSE, HTR]'
options,'wi_BHTR_GSM','YTITLE','B (nT)!C[GSM, HTR]'
options,['wi_BHTR_GSE','wi_BHTR_GSM'],'COLORS',[250,150,50]
;-----------------------------------------------------------------------------------------
; => Load WAVES Denstiy estimates
;-----------------------------------------------------------------------------------------
test   = waves_fpe_ascii_read(DATE=date)
wunix  = test.UNIX          ; => Unix times
wfuh   = test.F_PE          ; => Upper hybrid frequency [Hz]
; => Use HTR MFI for B-fields
get_data,'wi_B3_GSE',DATA=htr_mfi
; => Determine B-field at times of TNR Data
testx  = interp(htr_mfi.Y[*,0],htr_mfi.X,wunix,/NO_EXTRAP)
testy  = interp(htr_mfi.Y[*,1],htr_mfi.X,wunix,/NO_EXTRAP)
testz  = interp(htr_mfi.Y[*,2],htr_mfi.X,wunix,/NO_EXTRAP)
tbmag  = SQRT(testx^2 + testy^2 + testz^2)
; => Calculate the electron cyclotron frequency at times of associated WAVES f_uh
invden = 1d-6*(2d0*!DPI)^2*(me*epo/qq^2)  ; => [cm^(-3) s^2]
wcefac = qq[0]*1d-9/me[0]
fce_wv = (wcefac[0]/(2d0*!DPI))*tbmag    ; => Electron cyclotron frequency [Hz]
fpe_2  = (wfuh^2 - fce_wv^2)             ; => Electron plasma frequency [Hz^2]
; => Calculate the electron density at times of associated WAVES f_uh
wdens  = fpe_2*invden[0]                 ; => Electron density [cm^(-3)]
; => Calculate the electron inertial length at times of associated WAVES f_uh
wine_e = c/(2d0*!DPI*SQRT(ABS(fpe_2)))   ; => Electron inertial length [m]
wine_p = SQRT(mp/me)*wine_e              ; => Proton " "

store_data,'waves_density',DATA={X:wunix,Y:wdens}
options,'waves_density','YTITLE','N!De!N (cm!U-3!N)'+'!C'+'[from TNR]'

nnw = tnames()
options,nnw,'YSTYLE',1
options,nnw,'PANEL_SIZE',2.
options,nnw,'XMINOR',5
options,nnw,'XTICKLEN',0.04
;-----------------------------------------------------------------------------------------
; => Load TNR data
;-----------------------------------------------------------------------------------------
fl        = 4.
fh        = 13e3
yscl      = 'log'
wave_tnr_rad_to_tplot,DATE=date,FLOW=fl,FHIGH=fh,YSCL=yscl,TRANGE=tr3,/NODCBLS

pref = ['TNR','RAD1','RAD2']
wnam = tnames(pref[*]+'_'+date[0])
options,wnam,'ZTITLE','!7l!3'+'V/(Hz)!U1/2!N'
options,tnames(pref[0]+'_'+date[0]),'YRANGE',[4.00000,245.148]

options,'TNR_'+date[0],'ZTICKS',5
options,'TNR_'+date[0],'ZRANGE',[1e0,7e1]
options,'TNR_'+date[0],'YLOG',0
options,'TNR_'+date[0],'YTICKNAME'
options,'TNR_'+date[0],'YTICKV'
options,'TNR_'+date[0],'YTICKS'

nnw = tnames()
options,nnw,'YSTYLE',1
options,nnw,'PANEL_SIZE',2.
options,nnw,'XMINOR',5
options,nnw,'XTICKLEN',0.04
;-----------------------------------------------------------------------------------------
; => Get TDSS times
;-----------------------------------------------------------------------------------------
mdir0    = FILE_EXPAND_PATH('../TDS_WAVES_PLOTS/TDS_DAILY_FILES/'+date[0]+'/TDSS/')
mdir1    = FILE_EXPAND_PATH('IDL_stuff/WI_TDS/'+date[0]+'/TDSS/')
IF (date NE '040600') THEN mdir = mdir1 ELSE mdir = mdir0
waves0   = tdss_sort_relevant(DATE=date,/FIXFILE,DIRECT=mdir[0])
sceta0   = waves0.SCETS                  ; => e.g. '1998-08-26/06:40:24.472'
evns0    = waves0.EVENT_N                ; => Event #'s
tt0      = REFORM(waves0.TIMES)          ; => Times (ms)
ntds     = 2048L
unixs0   = time_double(sceta0)
unixa0   = (unixs0 # REPLICATE(1d0,ntds)) + tt0*1d-3
unixe0   = unixa0[*,(ntds - 1L)]
scete0   = time_string(unixe0,PREC=3)

; => Whistler Event #'s
evns_whi   = [00010807L,00010832L,00010868L,00010881L,00010888L,00010895L,$
              00010923L,00010937L,23145603L,23145610L,23153276L,23154909L,$
              23155087L]
good_whi   = array_where(evns0,evns_whi,/N_UNIQ)
good_whi   = good_whi[*,0]
; => Lower Hybrid Event #'s
evns_lhw   = [00010618L,00010684L,02013066L,02014864L,02015635L,02015691L,$
              02017428L,02018091L,27126767L,27127153L,27127228L,27127757L,$
              27128778L,27128936L,27128950L,27128986L,27128990L,27129174L,$
              27129566L,27129583L,27130144L,27133978L,27133987L]
good_lhw   = array_where(evns0,evns_lhw,/N_UNIQ)
good_lhw   = good_lhw[*,0]
; => MIXED Event #'s
evns_mix   = [02011723L,02011820L,02013165L,02015299L,02015304L,02015650L,$
              02017555L,23145474L,23145484L,27126638L,27134252L]
good_mix   = array_where(evns0,evns_mix,/N_UNIQ)
good_mix   = good_mix[*,0]


IF (good_whi[0] LT 0) THEN unix_whi = d ELSE unix_whi = unixs0[good_whi]
IF (good_lhw[0] LT 0) THEN unix_lhw = d ELSE unix_lhw = unixs0[good_lhw]
IF (good_mix[0] LT 0) THEN unix_mix = d ELSE unix_mix = unixs0[good_mix]

IF (good_whi[0] LT 0) THEN unex_whi = d ELSE unex_whi = unixe0[good_whi]
IF (good_lhw[0] LT 0) THEN unex_lhw = d ELSE unex_lhw = unixe0[good_lhw]
IF (good_mix[0] LT 0) THEN unex_mix = d ELSE unex_mix = unixe0[good_mix]


trr      = tura[0] + [-1d0,1d0]*36d2
nna      = nnh
  tplot,nna,TRANGE=trr
  time_bar,unix_whi,VARNAME=nna,COLOR=200
  time_bar,unix_lhw,VARNAME=nna,COLOR=100
  time_bar,unix_mix,VARNAME=nna,COLOR= 30

;-----------------------------------------------------------------------------------------
; => Load orbit data
;-----------------------------------------------------------------------------------------
wind_orbit_to_tplot,BNAME='wi_B3_GSE',TRANGE=tr3
options,'Wind_Radial_Distance','YTITLE','Radial Dist. (R!DE!N)'
options,'Wind_GSE_Latitude','YTITLE','GSE Lat. [deg]'
options,'Wind_GSE_Longitude','YTITLE','GSE Lon. [deg]'
gnames = ['Wind_Radial_Distance','Wind_GSE_Latitude','Wind_GSE_Longitude','Wind_MLT']
tplot_options, var_label=gnames

htr_t  = t3x_htr
nhtr_t = htr_t - tura[0]   ; => normalize to zero
ndist  = v_shn89[0]*nhtr_t   ; => km
; => Compute estimates of upstream inertial lengths
IF (FINITE(ni_up[0])) THEN einert = c/(wpefac[0]*SQRT(ni_up[0])) ELSE einert = f
IF (FINITE(ni_up[0])) THEN iinert = c/(wppfac[0]*SQRT(ni_up[0])) ELSE iinert = f
einert *= 1d-3  ; => Convert to km
iinert *= 1d-3  ; => Convert to km

store_data,'normal_distance',DATA={X:htr_t,Y:ndist}
options,'normal_distance','YTITLE','Dist. [Normal, km]'
store_data,'normal_distance_c-wpe',DATA={X:htr_t,Y:ndist/einert[0]}
options,'normal_distance_c-wpe','YTITLE','Dist. [Normal, c/'+'!7x!3'+'!Dpe!N'+']'
store_data,'normal_distance_c-wpi',DATA={X:htr_t,Y:ndist/iinert[0]}
options,'normal_distance_c-wpi','YTITLE','Dist. [Normal, c/'+'!7x!3'+'!Dpi!N'+']'

gnames = ['Wind_Radial_Distance','normal_distance','normal_distance_c-wpe','normal_distance_c-wpi']
tplot_options, VAR_LABEL=gnames

nnw = tnames()
options,nnw,'YSTYLE',1
options,nnw,'PANEL_SIZE',2.
options,nnw,'XMINOR',5
options,nnw,'XTICKLEN',0.04
;-----------------------------------------------------------------------------------------
; => Load 3DP Distributions into TPLOT
;-----------------------------------------------------------------------------------------
eesa    = 1
pesa    = 1
sstf    = 0
ssto    = 0
test    = wind_3dp_save_file_get(TRANGE=tr3,EESA=eesa,PESA=pesa,SSTF=sstf,SSTO=ssto)

; => Define EESA structures
ael     = eesa.EL
aelb    = eesa.ELB
aeh     = eesa.EH
aehb    = eesa.EHB
IF (SIZE(aelb[0],/TYPE) NE 8) THEN nelb = 0 ELSE nelb = N_ELEMENTS(aelb)
; => Define PESA structures
apl     = pesa.PL
aplb    = pesa.PLB
aph     = pesa.PH
aphb    = pesa.PHB
;-----------------------------------------------------------------------------------------
; => Calc Density, temp, etc... for ions
;-----------------------------------------------------------------------------------------
;pesa_low_moment_calibrate,DATE=date,/NOLOAD,PLM=apl,PLBM=aplb,TRANGE=tr3,$
;                          BNAME='wi_B3_GSE',COMPRESS=compr[0],MIDRA=tura[0]
eesa_pesa_low_to_tplot,DATE=date,TRANGE=tr3,/G_MAGF,PLM=apl,PLBM=aplb, $
                       ELM=ael,ELBM=aelb,/TO_TPLOT,BNAME='wi_B3_GSE'
;-----------------------------------------------------------------------------------------
; => Calculate the heat flux vectors
;-----------------------------------------------------------------------------------------
;  del     = convert_vframe(dat,/INTERP)       & $
IF (nelb GT 0) THEN all_el = [ael,aelb] ELSE all_el = ael
nall   = N_ELEMENTS(all_el)
elunix = all_el.TIME
spe    = SORT(elunix)
all_el = all_el[spe]

aqvec  = DBLARR(nall,3L)
aqmag  = DBLARR(nall)
FOR j=0L, nall - 1L DO BEGIN                    $
  del     = all_el[j]                         & $
  transform_vframe_3d,del,/EASY_TRAN,/INTERP  & $
  sum     = mom_sum(del,SC_POT=del.SC_POT)    & $
  sumt    = mom_translate(sum)                & $
  charge  = sumt.CHARGE                       & $
  mass    = sumt.MASS                         & $
  nnorm   = SQRT(ABS(2*charge/mass))          & $          ; -[(km/s) eV^(-1/2)]
  i3      = [[0,4,8],[9,13,17],[18,22,26]]    & $
  qtens   = (mass*nnorm^2)*sumt.NVVV          & $          ; => Heat flux tensor
  qqqs    = (sumt.NVVV[sumt.MAP_R3])[i3]      & $ 
  qvec    = TOTAL(qqqs,1L,/NAN)               & $          ; => Q_vec [eV km/s cm^(-3), GSE]
  qmag    = SQRT(TOTAL(qvec^2,/NAN))          & $          ; => Magnitude of Heat flux [eV km/s cm^(-3)]
  qvec    = qvec/qmag[0]                      & $
  aqvec[j,*] = qvec                           & $
  aqmag[j]   = qmag

elqvecs = aqvec
elqmag  = aqmag
store_data,'q_mag',DATA={X:all_el.TIME,Y:elqmag*1d-3}
options,'q_mag','YTITLE','|q!De!N'+'| [keV km/s cm!U-3!N'+']'
; => normalize heat flux by "saturation" level [Eq. 3 in Salem et al., 2003]
get_data,'T_avg_el_sw',DATA=temp0
get_data,'waves_density',DATA=temp1
get_data,'V_Therm_el_sw',DATA=temp2
xx      = temp0.X
temp_ne = interp(temp1.Y,temp1.X,xx,/NO_EXTRAP)
q_sat0  = 3d0/2d0*temp_ne*temp0.Y*temp2.Y
store_data,'qmag_qo',DATA={X:xx,Y:elqmag/q_sat0}
xttl    = '|q!De!N'+'|/(3/2  n!De!N k!DB!N T!De!N V!DTe!N'+')'+'!C'+'[Normalized]'
options,'qmag_qo','YTITLE',xttl[0]

; => calculate energy densities
get_data,'wi_BHTR_MAG',DATA=temp0
get_data,'waves_density',DATA=temp1
get_data,'T_avg_el_sw',DATA=temp2

temp_bm = interp(temp0.Y,temp0.X,temp1.X,/NO_EXTRAP)
temp_Te = interp(temp2.Y,temp2.X,temp1.X,/NO_EXTRAP)
; => |Bo|^2/(2 µo N_e) [eV per particle]
fac0    = (1d-9)^2/(2d0*muo[0]*1d6*qq[0])
evpart  = fac0[0]*temp_bm/temp1.Y
; => ( |Bo|^2/(2 µo N_e) )/T_e [#^(-1)]
te_evp  = evpart/temp_Te

store_data,'MagEnergy_per_Particle',DATA={X:temp1.X,Y:evpart}
store_data,'NkTe_MagEnergy',DATA={X:temp1.X,Y:te_evp}

xttl    = '|B!Do!N'+'|!U2!N'+'/(2 !7l!3'+'!Do!N n!De!N'+') [eV #!U-1!N'+']'
options,'MagEnergy_per_Particle','YTITLE',xttl[0]
xttl    = '|B!Do!N'+'|!U2!N'+'/(2 !7l!3'+'!Do!N n!De!N'+' T!De!N'+') [#!U-1!N'+']'
options,'NkTe_MagEnergy','YTITLE',xttl[0]

get_data,'Tanisotropy_el_sw',DATA=temp0
get_data,'Tanisotropy_ce_sw',DATA=temp1
get_data,'Tanisotropy_he_sw',DATA=temp2
xx      = temp0.X
oneline = REPLICATE(1d0,N_ELEMENTS(xx))
yy      = [[temp0.Y],[temp1.Y],[temp2.Y],[oneline]]
xttl    = '(T!D!9x!3'+'!N'+'/T!D!9#!3'+'!N'+')'+'!C'+' [e:red, ce:orange, he:cyan]'
store_data,'Tanisotropy_el-ce-he_sw',DATA={X:xx,Y:yy}
options,'Tanisotropy_el-ce-he_sw','YTITLE',xttl[0]
options,'Tanisotropy_el-ce-he_sw','COLORS',[250,200,100,30]
options,'Tanisotropy_el-ce-he_sw','LABELS',['e','ce','he',' ']

nnw = tnames()
options,nnw,'YSTYLE',1
options,nnw,'PANEL_SIZE',2.
options,nnw,'XMINOR',5
options,nnw,'XTICKLEN',0.04
;-----------------------------------------------------------------------------------------
; => Plot Bo and Density to look for mirror mode structures
;-----------------------------------------------------------------------------------------
;tramp       = '1997-12-10/04:33:14.664'
;tramp       = '1998-08-26/06:40:24.972'
;tramp       = '1998-09-24/23:20:37.374'
;tramp       = '2000-02-11/23:33:55.319'

IF (date EQ '082698') THEN trr = tura[0] + [2d-2,1d0]*13d1
IF (date EQ '092498') THEN trr = tura[0] + [1d-2,1d0]*36d2
;IF (date EQ '021100') THEN delt = 6d1
IF (date EQ '021100') THEN trr = tura[0] + [-6d1,336d1]
IF (date EQ '040600') THEN trr = tura[0] + [ 1d1,72d2]
tup      = tura[0] + [-6d2,-3d1]

nna      = [nnh,'Ti_anisotropy','Tanisotropy_el_sw','Tanisotropy_ce_sw','Tanisotropy_he_sw']
  tplot,nna,TRANGE=trr,/NOM
  time_bar,unix_whi,VARNAME=nna,COLOR=200
  time_bar,unix_lhw,VARNAME=nna,COLOR=100
  time_bar,unix_mix,VARNAME=nna,COLOR= 30


nna      = [nnh,'Ti_para','Tpara_el_sw','Tpara_ce_sw','Tpara_he_sw']
  tplot,nna,TRANGE=trr,/NOM
  time_bar,unix_whi,VARNAME=nna,COLOR=200
  time_bar,unix_lhw,VARNAME=nna,COLOR=100
  time_bar,unix_mix,VARNAME=nna,COLOR= 30


nna      = [nnh,'Ti_perp','Tperp_el_sw','Tperp_ce_sw','Tperp_he_sw']
  tplot,nna,TRANGE=trr,/NOM
  time_bar,unix_whi,VARNAME=nna,COLOR=200
  time_bar,unix_lhw,VARNAME=nna,COLOR=100
  time_bar,unix_mix,VARNAME=nna,COLOR= 30


nna      = [nnh,'N_i3','N_el_sw','N_ce_sw','N_he_sw']
  tplot,nna,TRANGE=trr,/NOM
  time_bar,unix_whi,VARNAME=nna,COLOR=200
  time_bar,unix_lhw,VARNAME=nna,COLOR=100
  time_bar,unix_mix,VARNAME=nna,COLOR= 30


nna      = [nnh,'Tpara_Core-Halo_sw','Tperp_Core-Halo_sw','q_mag']
  tplot,nna,TRANGE=trr,/NOM
  time_bar,unix_whi,VARNAME=nna,COLOR=200
  time_bar,unix_lhw,VARNAME=nna,COLOR=100
  time_bar,unix_mix,VARNAME=nna,COLOR= 30


nna      = [nnh,'MagEnergy_per_Particle','NkTe_MagEnergy','q_mag']
  tplot,nna,TRANGE=trr,/NOM
  time_bar,unix_whi,VARNAME=nna,COLOR=200
  time_bar,unix_lhw,VARNAME=nna,COLOR=100
  time_bar,unix_mix,VARNAME=nna,COLOR= 30

;---------------------------------------------------
; => Save Example plot
;---------------------------------------------------
IF (date EQ '082698') THEN options,'Tanisotropy_el-ce-he_sw','YRANGE',[0.75,1.45]
IF (date EQ '092498') THEN options,'Tanisotropy_el-ce-he_sw','YRANGE',[0.50,1.80]
IF (date EQ '021100') THEN trr = tura[0] + [-6d1,336d1]
IF (date EQ '021100') THEN options,'Tanisotropy_el-ce-he_sw','YRANGE',[0.40,2.00]
;IF (date EQ '021100') THEN trr = tura[0] + [-5d0,4d1]
;IF (date EQ '021100') THEN options,'Tanisotropy_el-ce-he_sw','YRANGE',[0.40,1.80]
;IF (date EQ '021100') THEN trr = tura[0] + [16d2,336d1]
;IF (date EQ '021100') THEN options,'Tanisotropy_el-ce-he_sw','YRANGE',[0.70,1.20]
IF (date EQ '040600') THEN trr = tura[0] + [ 1d1,18d2]
IF (date EQ '040600') THEN options,'Tanisotropy_el-ce-he_sw','YRANGE',[0.80,1.80]
IF (date EQ '040600') THEN trr = tura[0] + [60d2,72d2]
IF (date EQ '040600') THEN options,'Tanisotropy_el-ce-he_sw','YRANGE',[0.90,1.50]


fnm     = file_name_times(trr,PREC=3)
sfname  = fnm.F_TIME[0]+'-'+STRMID(fnm.F_TIME[1],11)
pref    = 'MFIHTR-GSE_Tanis-e-ce-he_Qmag_Qmag-Qo_'
suffx   = '_WW-Orange_LHW-Cyan_MIXED-Purple'
nna     = [nnh,'Tanisotropy_el-ce-he_sw','q_mag','qmag_qo']
fname   = pref[0]+sfname[0]+suffx[0]

  tplot,nna,TRANGE=trr,/NOM
  time_bar,unix_whi,VARNAME=nna,COLOR=200
  time_bar,unix_lhw,VARNAME=nna,COLOR=100
  time_bar,unix_mix,VARNAME=nna,COLOR= 30
popen,fname[0],/LAND
  tplot,nna,TRANGE=trr,/NOM
  time_bar,unix_whi,VARNAME=nna,COLOR=200
  time_bar,unix_lhw,VARNAME=nna,COLOR=100
  time_bar,unix_mix,VARNAME=nna,COLOR= 30
pclose

;---------------------------------------------------
; => Print out Te_per and Te_par
;---------------------------------------------------
get_data,'Tpara_el_sw',DATA=te_par
get_data,'Tperp_el_sw',DATA=te_per

n_whi = TOTAL(FINITE(unix_whi))
n_lhw = TOTAL(FINITE(unix_lhw))
n_mix = TOTAL(FINITE(unix_mix))
IF (n_whi GT 0) THEN g_whi = 1 ELSE g_whi = 0
IF (n_lhw GT 0) THEN g_lhw = 1 ELSE g_lhw = 0
IF (n_mix GT 0) THEN g_mix = 1 ELSE g_mix = 0

xx = te_par.X
yy = te_par.Y
; => at start
IF (g_whi) THEN tpars_whi = interp(yy,xx,unix_whi,/NO_EXTRAP) ELSE tpars_whi = d
IF (g_lhw) THEN tpars_lhw = interp(yy,xx,unix_lhw,/NO_EXTRAP) ELSE tpars_lhw = d
IF (g_mix) THEN tpars_mix = interp(yy,xx,unix_mix,/NO_EXTRAP) ELSE tpars_mix = d
xx = te_per.X
yy = te_per.Y
; => at start
IF (g_whi) THEN tpers_whi = interp(yy,xx,unix_whi,/NO_EXTRAP) ELSE tpers_whi = d
IF (g_lhw) THEN tpers_lhw = interp(yy,xx,unix_lhw,/NO_EXTRAP) ELSE tpers_lhw = d
IF (g_mix) THEN tpers_mix = interp(yy,xx,unix_mix,/NO_EXTRAP) ELSE tpers_mix = d


gels  = good_whi
mform = '(";   ",a23,"   ",I9.9,2f15.3)'
FOR j=0L, n_whi - 1L DO BEGIN     $
  k = gels[j]                   & $
  PRINT,FORMAT=mform,sceta0[k],evns0[k],tpars_whi[j],tpers_whi[j]
;---------------------------------------------------------------------
;   Whistlers
;====================================================================
;   1998-08-26/06:41:35.975   000010807         58.919         64.598
;   1998-08-26/06:41:42.365   000010832         60.074         63.134
;   1998-08-26/06:41:51.600   000010868         60.345         64.159
;   1998-08-26/06:41:54.666   000010881         61.023         64.187
;   1998-08-26/06:41:56.261   000010888         61.138         63.904
;   1998-08-26/06:41:57.584   000010895         61.253         63.606
;   1998-08-26/06:42:04.115   000010923         63.279         59.984
;   1998-08-26/06:42:07.483   000010937         63.230         57.440
;---------------------------------------------------------------------
;   2000-02-11/23:34:25.854   023145603         36.773         44.592
;   2000-02-11/23:34:27.416   023145610         36.341         44.843
;   2000-02-12/00:14:20.060   023153276         27.463         25.264
;   2000-02-12/00:26:15.569   023154909         31.800         26.660
;   2000-02-12/00:27:17.494   023155087         35.180         28.600
;---------------------------------------------------------------------

gels  = good_lhw
mform = '(";   ",a23,"   ",I9.9,2f15.3)'
FOR j=0L, n_lhw - 1L DO BEGIN     $
  k = gels[j]                   & $
  PRINT,FORMAT=mform,sceta0[k],evns0[k],tpars_lhw[j],tpers_lhw[j]
;---------------------------------------------------------------------
;   Lower Hybrid
;====================================================================
;   1998-08-26/06:40:53.292   000010618         55.883         54.979
;   1998-08-26/06:41:08.353   000010684         60.891         55.818
;---------------------------------------------------------------------
;   1998-09-24/23:29:58.817   002013066         50.916         49.437
;   1998-09-24/23:43:17.303   002014864         51.078         41.100
;   1998-09-24/23:48:37.371   002015635         57.694         44.005
;   1998-09-24/23:48:49.973   002015691         59.444         44.933
;   1998-09-25/00:04:02.897   002017428         59.256         57.201
;   1998-09-25/00:14:48.955   002018091         53.764         56.843
;---------------------------------------------------------------------

gels  = good_mix
mform = '(";   ",a23,"   ",I9.9,2f15.3)'
FOR j=0L, n_mix - 1L DO BEGIN     $
  k = gels[j]                   & $
  PRINT,FORMAT=mform,sceta0[k],evns0[k],tpars_mix[j],tpers_mix[j]
;---------------------------------------------------------------------
;   MIXED
;====================================================================
;   1998-09-24/23:22:24.983   002011723         48.649         50.976
;   1998-09-24/23:22:46.502   002011820         48.493         50.691
;   1998-09-24/23:30:46.893   002013165         50.464         50.007
;   1998-09-24/23:45:50.535   002015299         53.966         40.983
;   1998-09-24/23:45:51.730   002015304         53.850         40.937
;   1998-09-24/23:48:40.482   002015650         58.126         44.234
;   1998-09-25/00:05:21.783   002017555         59.343         56.882
;---------------------------------------------------------------------
;   2000-02-11/23:33:56.703   023145474         54.097         50.806
;   2000-02-11/23:33:59.082   023145484         51.539         49.215
;---------------------------------------------------------------------


xx = te_par.X
yy = te_par.Y
; => at end
IF (g_whi) THEN tpare_whi = interp(yy,xx,unex_whi,/NO_EXTRAP) ELSE tpare_whi = d
IF (g_lhw) THEN tpare_lhw = interp(yy,xx,unex_lhw,/NO_EXTRAP) ELSE tpare_lhw = d
IF (g_mix) THEN tpare_mix = interp(yy,xx,unex_mix,/NO_EXTRAP) ELSE tpare_mix = d
xx = te_per.X
yy = te_per.Y
; => at end
IF (g_whi) THEN tpere_whi = interp(yy,xx,unex_whi,/NO_EXTRAP) ELSE tpere_whi = d
IF (g_lhw) THEN tpere_lhw = interp(yy,xx,unex_lhw,/NO_EXTRAP) ELSE tpere_lhw = d
IF (g_mix) THEN tpere_mix = interp(yy,xx,unex_mix,/NO_EXTRAP) ELSE tpere_mix = d


gels  = good_whi
FOR j=0L, n_whi - 1L DO BEGIN     $
  k = gels[j]                   & $
  PRINT,FORMAT=mform,scete0[k],evns0[k],tpare_whi[j],tpere_whi[j]
;---------------------------------------------------------------------
;   Whistlers
;====================================================================
;   1998-08-26/06:41:37.066   000010807         59.055         64.435
;   1998-08-26/06:41:43.456   000010832         60.410         63.545
;   1998-08-26/06:41:52.691   000010868         60.603         64.191
;   1998-08-26/06:41:55.757   000010881         61.101         63.994
;   1998-08-26/06:41:57.352   000010888         61.217         63.711
;   1998-08-26/06:41:58.675   000010895         61.526         62.775
;   1998-08-26/06:42:05.206   000010923         63.210         59.295
;   1998-08-26/06:42:08.574   000010937         63.419         56.103
;---------------------------------------------------------------------
;   2000-02-11/23:34:26.945   023145603         36.455         44.826
;   2000-02-11/23:34:28.507   023145610         36.082         44.857
;   2000-02-12/00:14:21.151   023153276         27.459         25.258
;   2000-02-12/00:26:16.660   023154909         31.865         26.693
;   2000-02-12/00:27:18.585   023155087         35.178         28.646
;---------------------------------------------------------------------

gels  = good_lhw
mform = '(";   ",a23,"   ",I9.9,2f15.3)'
FOR j=0L, n_lhw - 1L DO BEGIN     $
  k = gels[j]                   & $
  PRINT,FORMAT=mform,scete0[k],evns0[k],tpare_lhw[j],tpere_lhw[j]
;---------------------------------------------------------------------
;   Lower Hybrid
;====================================================================
;   1998-08-26/06:40:54.383   000010618         55.146         57.801
;   1998-08-26/06:41:09.444   000010684         59.133         56.352
;---------------------------------------------------------------------
;   1998-09-24/23:29:59.908   002013066         50.909         49.472
;   1998-09-24/23:43:18.394   002014864         51.118         41.047
;   1998-09-24/23:48:38.462   002015635         57.846         44.085
;   1998-09-24/23:48:51.064   002015691         59.596         45.013
;   1998-09-25/00:04:03.988   002017428         59.257         57.196
;   1998-09-25/00:14:50.046   002018091         53.728         56.822
;---------------------------------------------------------------------

gels  = good_mix
mform = '(";   ",a23,"   ",I9.9,2f15.3)'
FOR j=0L, n_mix - 1L DO BEGIN     $
  k = gels[j]                   & $
  PRINT,FORMAT=mform,scete0[k],evns0[k],tpare_mix[j],tpere_mix[j]
;---------------------------------------------------------------------
;   MIXED
;====================================================================
;   1998-09-24/23:22:26.074   002011723         48.641         50.961
;   1998-09-24/23:22:47.593   002011820         48.485         50.677
;   1998-09-24/23:30:47.984   002013165         50.446         49.969
;   1998-09-24/23:45:51.626   002015299         53.860         40.941
;   1998-09-24/23:45:52.821   002015304         53.744         40.894
;   1998-09-24/23:48:41.573   002015650         58.278         44.314
;   1998-09-25/00:05:22.874   002017555         59.344         56.877
;---------------------------------------------------------------------
;   2000-02-11/23:33:57.794   023145474         52.923         50.076
;   2000-02-11/23:34:00.173   023145484         49.407         48.347
;---------------------------------------------------------------------


;-----------------------------------------------------------------------------------------
; => Estimate gradients
;-----------------------------------------------------------------------------------------

;---------------------------------------------------
; => normalize each by an average upstream value
;---------------------------------------------------

; => ∆|Bo|/∆Ln [nT/km]
;suffx   = '|'+'!C'+'[nT/km, Mag. Diff.]'
suffx   = '|'+'!C'+'[Normalized]'
xttl    = '|'+'!7D!3'+'|B!Do!N'+'|/!7D!3'+'L!Dn!N'+suffx[0]
get_data,'wi_BHTR_MAG',DATA=temp
dx      = v_shn89[0]*(temp.X - MIN(temp.X,/NAN))
db_dLn  = SMOOTH(ABS(dfdx(dx, temp.Y, /LINEND)),5L,/EDGE_TRUNCATE,/NAN)
good    = WHERE(temp.X GE tup[0] AND temp.X LE tup[1],gd)
avgup   = MEAN(db_dLn[good],/NAN)
store_data,'dBo_dLn',DATA={X:temp.X,Y:db_dLn/avgup[0]}
options,'dBo_dLn','YTITLE',xttl[0]

; => ∆ni/∆Ln [cm^(-3)/km]
;suffx   = '|'+'!C'+'[cm!U-3!N km!U-1!N'+']'
suffx   = '|'+'!C'+'[Normalized]'
xttl    = '|'+'!7D!3'+'n!Di!N'+'/!7D!3'+'L!Dn!N'+suffx[0]
get_data,'N_i3',DATA=temp
dx      = v_shn89[0]*(temp.X - MIN(temp.X,/NAN))
dn_dLn  = ABS(dfdx(dx, temp.Y, /LINEND))
good    = WHERE(temp.X GE tup[0] AND temp.X LE tup[1],gd)
avgup   = MEAN(dn_dLn[good],/NAN)
store_data,'dni_dLn',DATA={X:temp.X,Y:dn_dLn/avgup[0]}
options,'dni_dLn','YTITLE',xttl[0]

; => ∆Ti/∆Ln [eV/km]
;suffx   = '|'+'!C'+'[eV km!U-1!N'+']'
suffx   = '|'+'!C'+'[All Ions, Normalized]'
xttl    = '|'+'('+'!7D!3'+'T!Di!N'+')/!7D!3'+'L!Dn!N'+suffx[0]
get_data,'T_i2',DATA=temp
dx      = v_shn89[0]*(temp.X - MIN(temp.X,/NAN))
dTi_dLn = ABS(dfdx(dx, temp.Y, /LINEND))
good    = WHERE(temp.X GE tup[0] AND temp.X LE tup[1],gd)
avgup   = MEAN(dTi_dLn[good],/NAN)
store_data,'dTi_dLn',DATA={X:temp.X,Y:dTi_dLn/avgup[0]}
options,'dTi_dLn','YTITLE',xttl[0]

; => ∆(Teh/Tec)/∆Ln [km^(-1)]
;suffx      = '|'+'!C'+'[km!U-1!N'+']'
suffx      = '|'+'!C'+'[Normalized]'
xttl       = '|'+'!7D!3'+'(T!Deh!N'+'/T!Dec!N'+')/!7D!3'+'L!Dn!N'+suffx[0]
get_data,'T_avg_he_sw',DATA=temp
get_data,'T_avg_ce_sw',DATA=temp1
dx         = v_shn89[0]*(temp.X - MIN(temp.X,/NAN))
Teh_Tec    = temp.Y/temp1.Y
store_data,'Teh_Tec',DATA={X:temp.X,Y:Teh_Tec}
options,'Teh_Tec','YTITLE','(T!Deh!N'+'/T!Dec!N'+')'
dTeh_c_dLn = ABS(dfdx(dx, Teh_Tec, /LINEND))
good       = WHERE(temp.X GE tup[0] AND temp.X LE tup[1],gd)
avgup      = MEAN(dTeh_c_dLn[good],/NAN)
store_data,'dTeh_c_dLn',DATA={X:temp.X,Y:dTeh_c_dLn/avgup[0]}
options,'dTeh_c_dLn','YTITLE',xttl[0]

; => ∆|qe|/∆Ln [keV s^(-1) cm^(-3)]
;suffx   = '|'+'!C'+'[keV s!U-1!N cm!U-3!N'+']'
suffx   = '|'+'!C'+'[Normalized]'
xttl    = '|'+'!7D!3'+'|q!De!N'+'|/!7D!3'+'L!Dn!N'+suffx[0]
get_data,'q_mag',DATA=temp
dx      = v_shn89[0]*(temp.X - MIN(temp.X,/NAN))
dq_dLn  = ABS(dfdx(dx, temp.Y, /LINEND))
good    = WHERE(temp.X GE tup[0] AND temp.X LE tup[1],gd)
avgup   = MEAN(dq_dLn[good],/NAN)
store_data,'dqmg_dLn',DATA={X:temp.X,Y:dq_dLn/avgup[0]}
options,'dqmg_dLn','YTITLE',xttl[0]

; => ∆n_eh/∆Ln [cm^(-3)/km]
;suffx    = '|'+'!C'+'[cm!U-3!N km!U-1!N'+']'
suffx    = '|'+'!C'+'[Normalized]'
xttl     = '|'+'!7D!3'+'n!Deh!N'+'/!7D!3'+'L!Dn!N'+suffx[0]
get_data,'N_he_sw',DATA=temp
dx       = v_shn89[0]*(temp.X - MIN(temp.X,/NAN))
dneh_dLn = ABS(dfdx(dx, temp.Y, /LINEND))
good     = WHERE(temp.X GE tup[0] AND temp.X LE tup[1],gd)
avgup    = MEAN(dneh_dLn[good],/NAN)
store_data,'dn_eh_dLn',DATA={X:temp.X,Y:dneh_dLn/avgup[0]}
options,'dn_eh_dLn','YTITLE',xttl[0]

; => ∆(Tperp/Tpara)_i/∆Ln [km^(-1)]
;suffx        = '|'+'!C'+'[All Ions, km!U-1!N'+']'
suffx        = '|'+'!C'+'[All Ions, Normalized]'
xttl         = '|'+'!7D!3'+'(T!D!9x!3'+'!N'+'/T!D!9#!3'+'!N'+')/!7D!3'+'L!Dn!N'+suffx[0]
get_data,'Ti_anisotropy',DATA=temp
dx           = v_shn89[0]*(temp.X - MIN(temp.X,/NAN))
dTani_i_dLn  = ABS(dfdx(dx, temp.Y, /LINEND))
good         = WHERE(temp.X GE tup[0] AND temp.X LE tup[1],gd)
avgup        = MEAN(dTani_i_dLn[good],/NAN)
store_data,'dTani_i_dLn',DATA={X:temp.X,Y:dTani_i_dLn/avgup[0]}
options,'dTani_i_dLn','YTITLE',xttl[0]

; => ∆(Tperp/Tpara)_e/∆Ln [km^(-1)]
;suffx        = '|'+'!C'+'[All Electrons, km!U-1!N'+']'
suffx        = '|'+'!C'+'[All Electrons, Normalized]'
xttl         = '|'+'!7D!3'+'(T!D!9x!3'+'!N'+'/T!D!9#!3'+'!N'+')/!7D!3'+'L!Dn!N'+suffx[0]
get_data,'Tanisotropy_el_sw',DATA=temp
dx           = v_shn89[0]*(temp.X - MIN(temp.X,/NAN))
dTani_e_dLn  = ABS(dfdx(dx, temp.Y, /LINEND))
good         = WHERE(temp.X GE tup[0] AND temp.X LE tup[1],gd)
avgup        = MEAN(dTani_e_dLn[good],/NAN)
store_data,'dTani_e_dLn',DATA={X:temp.X,Y:dTani_e_dLn/avgup[0]}
options,'dTani_e_dLn','YTITLE',xttl[0]

; => ∆(Tperp/Tpara)_ce/∆Ln [km^(-1)]
;suffx        = '|'+'!C'+'[Core Electrons, km!U-1!N'+']'
suffx        = '|'+'!C'+'[Core Electrons, Normalized]'
xttl         = '|'+'!7D!3'+'(T!D!9x!3'+'!N'+'/T!D!9#!3'+'!N'+')/!7D!3'+'L!Dn!N'+suffx[0]
get_data,'Tanisotropy_ce_sw',DATA=temp
dx           = v_shn89[0]*(temp.X - MIN(temp.X,/NAN))
dTani_ec_dLn = ABS(dfdx(dx, temp.Y, /LINEND))
good         = WHERE(temp.X GE tup[0] AND temp.X LE tup[1],gd)
avgup        = MEAN(dTani_ec_dLn[good],/NAN)
store_data,'dTani_ec_dLn',DATA={X:temp.X,Y:dTani_ec_dLn/avgup[0]}
options,'dTani_ec_dLn','YTITLE',xttl[0]

; => ∆(Tperp/Tpara)_he/∆Ln [km^(-1)]
;suffx        = '|'+'!C'+'[Halo Electrons, km!U-1!N'+']'
suffx        = '|'+'!C'+'[Halo Electrons, Normalized]'
xttl         = '|'+'!7D!3'+'(T!D!9x!3'+'!N'+'/T!D!9#!3'+'!N'+')/!7D!3'+'L!Dn!N'+suffx[0]
get_data,'Tanisotropy_he_sw',DATA=temp
dx           = v_shn89[0]*(temp.X - MIN(temp.X,/NAN))
dTani_eh_dLn = ABS(dfdx(dx, temp.Y, /LINEND))
good         = WHERE(temp.X GE tup[0] AND temp.X LE tup[1],gd)
avgup        = MEAN(dTani_eh_dLn[good],/NAN)
store_data,'dTani_eh_dLn',DATA={X:temp.X,Y:dTani_eh_dLn/avgup[0]}
options,'dTani_eh_dLn','YTITLE',xttl[0]

; => (∆Tpara)_i/∆Ln [eV/km]
;suffx        = '|'+'!C'+'[All Ions, eV km!U-1!N'+']'
suffx        = '|'+'!C'+'[All Ions, Normalized]'
xttl         = '|'+'!7D!3'+'(T!D!9#!3'+'!N'+')/!7D!3'+'L!Dn!N'+suffx[0]
get_data,'Ti_para',DATA=temp
dx           = v_shn89[0]*(temp.X - MIN(temp.X,/NAN))
dTpar_i_dLn  = ABS(dfdx(dx, temp.Y, /LINEND))
good         = WHERE(temp.X GE tup[0] AND temp.X LE tup[1],gd)
avgup        = MEAN(dTpar_i_dLn[good],/NAN)
store_data,'dTpar_i_dLn',DATA={X:temp.X,Y:dTpar_i_dLn/avgup[0]}
options,'dTpar_i_dLn','YTITLE',xttl[0]

; => (∆Tperp)_i/∆Ln [eV/km]
;suffx        = '|'+'!C'+'[All Ions, eV km!U-1!N'+']'
suffx        = '|'+'!C'+'[All Ions, Normalized]'
xttl         = '|'+'!7D!3'+'(T!D!9x!3'+'!N'+')/!7D!3'+'L!Dn!N'+suffx[0]
get_data,'Ti_perp',DATA=temp
dx           = v_shn89[0]*(temp.X - MIN(temp.X,/NAN))
dTper_i_dLn  = ABS(dfdx(dx, temp.Y, /LINEND))
good         = WHERE(temp.X GE tup[0] AND temp.X LE tup[1],gd)
avgup        = MEAN(dTper_i_dLn[good],/NAN)
store_data,'dTper_i_dLn',DATA={X:temp.X,Y:dTper_i_dLn/avgup[0]}
options,'dTper_i_dLn','YTITLE',xttl[0]

; => (∆Tpara)_ce/∆Ln [eV/km]
;suffx        = '|'+'!C'+'[Core Electrons, eV km!U-1!N'+']'
suffx        = '|'+'!C'+'[Core Electrons, Normalized]'
xttl         = '|'+'!7D!3'+'(T!D!9#!3'+'!N'+')/!7D!3'+'L!Dn!N'+suffx[0]
get_data,'Tpara_ce_sw',DATA=temp
dx           = v_shn89[0]*(temp.X - MIN(temp.X,/NAN))
dTpar_ec_dLn = ABS(dfdx(dx, temp.Y, /LINEND))
good         = WHERE(temp.X GE tup[0] AND temp.X LE tup[1],gd)
avgup        = MEAN(dTpar_ec_dLn[good],/NAN)
store_data,'dTpar_ec_dLn',DATA={X:temp.X,Y:dTpar_ec_dLn/avgup[0]}
options,'dTpar_ec_dLn','YTITLE',xttl[0]

; => (∆Tpara)_he/∆Ln [eV/km]
;suffx        = '|'+'!C'+'[Halo Electrons, eV km!U-1!N'+']'
suffx        = '|'+'!C'+'[Halo Electrons, Normalized]'
xttl         = '|'+'!7D!3'+'(T!D!9#!3'+'!N'+')/!7D!3'+'L!Dn!N'+suffx[0]
get_data,'Tpara_he_sw',DATA=temp
dx           = v_shn89[0]*(temp.X - MIN(temp.X,/NAN))
dTpar_eh_dLn = ABS(dfdx(dx, temp.Y, /LINEND))
good         = WHERE(temp.X GE tup[0] AND temp.X LE tup[1],gd)
avgup        = MEAN(dTpar_eh_dLn[good],/NAN)
store_data,'dTpar_eh_dLn',DATA={X:temp.X,Y:dTpar_eh_dLn/avgup[0]}
options,'dTpar_eh_dLn','YTITLE',xttl[0]

; => (∆Tperp)_ce/∆Ln [eV/km]
;suffx        = '|'+'!C'+'[Core Electrons, eV km!U-1!N'+']'
suffx        = '|'+'!C'+'[Core Electrons, Normalized]'
xttl         = '|'+'!7D!3'+'(T!D!9x!3'+'!N'+')/!7D!3'+'L!Dn!N'+suffx[0]
get_data,'Tperp_ce_sw',DATA=temp
dx           = v_shn89[0]*(temp.X - MIN(temp.X,/NAN))
dTper_ec_dLn = ABS(dfdx(dx, temp.Y, /LINEND))
good         = WHERE(temp.X GE tup[0] AND temp.X LE tup[1],gd)
avgup        = MEAN(dTper_ec_dLn[good],/NAN)
store_data,'dTper_ec_dLn',DATA={X:temp.X,Y:dTper_ec_dLn/avgup[0]}
options,'dTper_ec_dLn','YTITLE',xttl[0]

; => (∆Tperp)_he/∆Ln [eV/km]
;suffx        = '|'+'!C'+'[Halo Electrons, eV km!U-1!N'+']'
suffx        = '|'+'!C'+'[Halo Electrons, Normalized]'
xttl         = '|'+'!7D!3'+'(T!D!9x!3'+'!N'+')/!7D!3'+'L!Dn!N'+suffx[0]
get_data,'Tperp_he_sw',DATA=temp
dx           = v_shn89[0]*(temp.X - MIN(temp.X,/NAN))
dTper_eh_dLn = ABS(dfdx(dx, temp.Y, /LINEND))
good         = WHERE(temp.X GE tup[0] AND temp.X LE tup[1],gd)
avgup        = MEAN(dTper_eh_dLn[good],/NAN)
store_data,'dTper_eh_dLn',DATA={X:temp.X,Y:dTper_eh_dLn/avgup[0]}
options,'dTper_eh_dLn','YTITLE',xttl[0]

; => |∆Vec|/∆Ln [km^(-1)]
;suffx        = '|'+'!C'+'[Core Electrons, s!U-1!N'+']'
suffx        = '|'+'!C'+'[Core Electrons, Normalized]'
xttl         = '|'+'!7D!3'+'V!Dce!N'+'|/!7D!3'+'L!Dn!N'+suffx[0]
get_data,'Velocity_ce_sw',DATA=temp
dx           = v_shn89[0]*(temp.X - MIN(temp.X,/NAN))
dvx_dLn      = dfdx(dx, temp.Y[*,0], /LINEND)
dvy_dLn      = dfdx(dx, temp.Y[*,1], /LINEND)
dvz_dLn      = dfdx(dx, temp.Y[*,2], /LINEND)
dvdL         = [[dvx_dLn],[dvy_dLn],[dvz_dLn]]
dv_dLn       = SQRT(TOTAL(dvdL^2,2,/NAN))
good         = WHERE(temp.X GE tup[0] AND temp.X LE tup[1],gd)
avgup        = MEAN(dv_dLn[good],/NAN)
store_data,'dVce_dLn',DATA={X:temp.X,Y:dv_dLn/avgup[0]}
options,'dVce_dLn','YTITLE',xttl[0]

; => |∆Veh|/∆Ln [km^(-1)]
;suffx        = '|'+'!C'+'[Halo Electrons, s!U-1!N'+']'
suffx        = '|'+'!C'+'[Halo Electrons, Normalized]'
xttl         = '|'+'!7D!3'+'V!Dhe!N'+'|/!7D!3'+'L!Dn!N'+suffx[0]
get_data,'Velocity_he_sw',DATA=temp
dx           = v_shn89[0]*(temp.X - MIN(temp.X,/NAN))
dvx_dLn      = dfdx(dx, temp.Y[*,0], /LINEND)
dvy_dLn      = dfdx(dx, temp.Y[*,1], /LINEND)
dvz_dLn      = dfdx(dx, temp.Y[*,2], /LINEND)
dvdL         = [[dvx_dLn],[dvy_dLn],[dvz_dLn]]
dv_dLn       = SQRT(TOTAL(dvdL^2,2,/NAN))
good         = WHERE(temp.X GE tup[0] AND temp.X LE tup[1],gd)
avgup        = MEAN(dv_dLn[good],/NAN)
store_data,'dVhe_dLn',DATA={X:temp.X,Y:dv_dLn/avgup[0]}
options,'dVhe_dLn','YTITLE',xttl[0]


options,['dTi_dLn','dTeh_c_dLn','dVce_dLn','dVhe_dLn'],'COLORS', 50L
options,['dBo_dLn','dni_dLn','dn_eh_dLn','dqmg_dLn'],'COLORS', 50L
options,['dTani_i_dLn','dTani_e_dLn','dTani_ec_dLn','dTani_eh_dLn'],'COLORS', 50L
options,['dTpar_i_dLn','dTper_i_dLn','dTpar_ec_dLn','dTpar_eh_dLn','dTper_ec_dLn','dTper_eh_dLn'],'COLORS', 50L

options,['dTi_dLn','dTeh_c_dLn','dTpar_i_dLn','dTpar_eh_dLn'],'YLOG',0
options,['dTani_i_dLn','dTani_e_dLn','dTani_ec_dLn','dTani_eh_dLn'],'YLOG',1
options,['dTpar_i_dLn','dTper_i_dLn'],'YLOG',1
options,['dTpar_ec_dLn','dTpar_eh_dLn','dTper_ec_dLn','dTper_eh_dLn'],'YLOG',1

;store_data,'',DATA={X:temp.X,Y:}
nnw = tnames()
options,nnw,'YSTYLE',1
options,nnw,'PANEL_SIZE',2.
options,nnw,'XMINOR',5
options,nnw,'XTICKLEN',0.04


nna      = [nnh,'dTi_dLn','dTeh_c_dLn','dVce_dLn','dVhe_dLn']
  tplot,nna,TRANGE=trr,/NOM
  time_bar,unix_whi,VARNAME=nna,COLOR=200
  time_bar,unix_lhw,VARNAME=nna,COLOR=100
  time_bar,unix_mix,VARNAME=nna,COLOR= 30
; => Kill values near ramp to fix Y-Range
kill_data_tr,NAME=tnames(['dTi_dLn','dTeh_c_dLn','dVce_dLn','dVhe_dLn'])


nna      = [nnh,'dTpar_i_dLn','dTper_i_dLn']
  tplot,nna,TRANGE=trr,/NOM
  time_bar,unix_whi,VARNAME=nna,COLOR=200
  time_bar,unix_lhw,VARNAME=nna,COLOR=100
  time_bar,unix_mix,VARNAME=nna,COLOR= 30
; => Kill values near ramp to fix Y-Range
kill_data_tr,NAME=tnames(['dTpar_i_dLn','dTper_i_dLn'])


nna      = [nnh,'dTpar_ec_dLn','dTpar_eh_dLn','dTper_ec_dLn','dTper_eh_dLn']
  tplot,nna,TRANGE=trr,/NOM
  time_bar,unix_whi,VARNAME=nna,COLOR=200
  time_bar,unix_lhw,VARNAME=nna,COLOR=100
  time_bar,unix_mix,VARNAME=nna,COLOR= 30
; => Kill values near ramp to fix Y-Range
kill_data_tr,NAME=tnames(['dTpar_ec_dLn','dTpar_eh_dLn','dTper_ec_dLn','dTper_eh_dLn'])


nna      = [nnh,'dBo_dLn']
  tplot,nna,TRANGE=trr,/NOM
  time_bar,unix_whi,VARNAME=nna,COLOR=200
  time_bar,unix_lhw,VARNAME=nna,COLOR=100
  time_bar,unix_mix,VARNAME=nna,COLOR= 30
; => Kill values near ramp to fix Y-Range
kill_data_tr,NAME=tnames(['dBo_dLn'])


nna      = [nnh,'dni_dLn','dn_eh_dLn','dqmg_dLn']
  tplot,nna,TRANGE=trr,/NOM
  time_bar,unix_whi,VARNAME=nna,COLOR=200
  time_bar,unix_lhw,VARNAME=nna,COLOR=100
  time_bar,unix_mix,VARNAME=nna,COLOR= 30
; => Kill values near ramp to fix Y-Range
kill_data_tr,NAME=tnames(['dni_dLn','dn_eh_dLn','dqmg_dLn'])


nna      = [nnh,'dTani_i_dLn','dTani_e_dLn','dTani_ec_dLn','dTani_eh_dLn']
  tplot,nna,TRANGE=trr,/NOM
  time_bar,unix_whi,VARNAME=nna,COLOR=200
  time_bar,unix_lhw,VARNAME=nna,COLOR=100
  time_bar,unix_mix,VARNAME=nna,COLOR= 30
; => Kill values near ramp to fix Y-Range
kill_data_tr,NAME=tnames(['dTani_i_dLn','dTani_e_dLn','dTani_ec_dLn','dTani_eh_dLn'])



















