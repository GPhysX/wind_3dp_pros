
days   = LINDGEN(31L) + 1L
months = LINDGEN(12L) + 1L
years  = LINDGEN(10L) + 1996L

dstr   = STRING(FORMAT='(I2.2)',days)
mstr   = STRING(FORMAT='(I2.2)',months)
ystr   = STRING(FORMAT='(I4.4)',years)
pref0  = 'wi_h0_mfi_'
suff0  = '_v04.cdf'
tsuff  = '/00:00:00'
fpref  = '/home/lbwilson/overflow/wind_3dp/MFI_CDF/'


d_string = STRARR(10,12,31)
dfstring = STRARR(10,12,31)
FOR i=0L, 9L DO BEGIN $
  FOR j=0L, 11L DO BEGIN $
    FOR k=0L, 30L DO BEGIN $
      d_string[i,j,k] = ystr[i]+'-'+mstr[j]+'-'+dstr[k]+tsuff  & $
      dfstring[i,j,k] = ystr[i]+mstr[j]+dstr[k]

FOR i=0L, 9L DO BEGIN                $
  FOR j=0L, 11L DO BEGIN             $
    FOR k=0L, 29L DO BEGIN           $
      m = k + 1L                   & $
      PRINT,d_string[i,j,k]+' '+d_string[i,j,m]+' '+fpref+pref0+dfstring[i,j,k]+suff0

fpref  = '/data1/wind/3dp/lz/'
pref0  = 'wi_lz_3dp_'
suff0  = '_v01.dat'

FOR i=0L, 9L DO BEGIN                $
  FOR j=0L, 11L DO BEGIN             $
    FOR k=0L, 29L DO BEGIN           $
      m = k + 1L                   & $
      PRINT,d_string[i,j,k]+' '+d_string[i,j,m]+' '+fpref+ystr[i]+'/'+pref0+dfstring[i,j,k]+suff0
;-----------------------------------------------------------------------------------------
;    Date and Time                    Frequency Peak Range              |B| (nT)
;-----------------------------------------------------------------------------------------
2000/04/10 02:45:38.951 UT              800 Hz - 2.0 kHz                 181.00
2000/04/10 02:49:27.111 UT              600 Hz - 1.5 kHz                 180.48
2000/04/10 02:50:55.063 UT              600 Hz - 1.2 kHz                 181.93
2000/04/10 02:50:56.903 UT              600 Hz - 1.2 kHz                 181.97
2000/04/10 02:52:28.535 UT              700 Hz - 1.2 kHz                 179.91
2000/04/10 02:52:47.303 UT              500 Hz - 2.0 kHz                 180.78
2000/04/10 02:55:37.319 UT              700 Hz - 1.2 kHz                 177.55
2000/04/10 02:55:52.775 UT              500 Hz - 1.6 kHz                 177.89
2000/04/10 02:56:31.415 UT              500 Hz - 1.3 kHz                 174.84
2000/04/10 02:56:33.991 UT              600 Hz - 1.6 kHz                 174.68
2000/04/10 02:56:43.191 UT              520 Hz - 1.2 kHz                 173.03
2000/04/10 03:11:02.103 UT              800 Hz - 1.8 kHz                 167.26
2000/04/10 03:11:02.471 UT              900 Hz - 1.8 kHz                 167.31
2000/04/10 03:11:03.943 UT              800 Hz - 1.9 kHz                 167.50
2000/04/10 03:11:06.887 UT              800 Hz - 1.8 kHz                 167.85
2000/04/10 03:11:08.359 UT              790 Hz - 1.5 kHz                 167.97
2000/04/10 03:11:10.567 UT              700 Hz - 1.7 kHz                 168.08
2000/04/10 03:20:48.695 UT              900 Hz - 2.1 kHz                 162.97
2000/04/10 03:44:20.343 UT             1.2 kHz - 2.1 kHz                 168.58
2000/04/10 03:47:52.311 UT             1.5 kHz - 2.1 kHz                 164.71
2000/04/10 04:00:14.567 UT              550 Hz - 1.1 kHz                 164.69
2000/04/10 04:14:44.887 UT              260 Hz - 790 Hz                  168.59
2000/04/10 04:14:48.567 UT              330 Hz - 790 Hz                  168.64  [Only Ex]
2000/04/10 04:14:59.239 UT              370 Hz - 700 Hz                  169.21
2000/04/10 04:25:44.343 UT              400 Hz - 810 Hz                  170.71  [Only Ey]
2000/04/10 04:32:44.231 UT              280 Hz - 590 Hz                  167.22
2000/04/10 04:57:31.319 UT              160 Hz - 390 Hz                  152.07

2000/05/25 20:53:26.266 UT             2.8 kHz - 3.5 kHz                 124.55
2000/05/25 20:53:26.634 UT             2.8 kHz - 3.5 kHz                 124.55
2000/05/25 20:54:42.810 UT             2.4 kHz - 3.3 kHz                 125.34
2000/05/25 20:58:41.642 UT             2.2 kHz - 3.5 kHz                 126.66
2000/05/25 21:11:37.754 UT             1.5 kHz - 2.1 kHz                 131.34
2000/05/25 22:31:45.674 UT              900 Hz - 1.6 kHz                 118.66
2000/05/25 22:38:52.186 UT             1.0 kHz - 1.6 kHz                 120.72  [Only Ex]
2000/05/25 22:43:01.322 UT             1.5 kHz - 1.8 kHz                 126.75
2000/05/25 22:44:48.042 UT              700 Hz - 1.9 kHz                 125.66
2000/05/25 22:51:17.386 UT             1.7 kHz - 2.3 kHz                 124.32
2000/05/25 23:08:40.298 UT             1.0 kHz - 1.6 kHz                 125.10
2000/05/25 23:13:53.466 UT             1.7 kHz - 2.6 kHz                 129.54
2000/05/25 23:30:49.881 UT              850 Hz - 1.7 kHz                 131.98
2000/05/25 23:31:07.177 UT             1.0 kHz - 1.6 kHz                 131.89
2000/05/25 23:31:10.489 UT             1.0 kHz - 1.6 kHz                 131.94
2000/05/25 23:32:52.425 UT              890 Hz - 1.8 kHz                 132.73
2000/05/25 23:33:49.833 UT              990 Hz - 1.6 kHz                 133.43
2000/05/25 23:35:10.425 UT             1.0 kHz - 1.7 kHz                 133.45  [Only Ex]
2000/05/25 23:35:27.354 UT              910 Hz - 1.7 kHz                 133.69
2000/05/25 23:35:53.481 UT              880 Hz - 1.6 kHz                 133.78
2000/05/25 23:36:01.577 UT              940 Hz - 1.5 kHz                 134.00
2000/05/25 23:36:21.818 UT              780 Hz - 1.5 kHz                 133.64
2000/05/25 23:36:29.545 UT              800 Hz - 1.6 kHz                 133.42
2000/05/25 23:37:29.529 UT              750 Hz - 1.9 kHz                 134.21
2000/05/25 23:38:51.961 UT              700 Hz - 1.7 kHz                 133.99
2000/05/25 23:38:57.849 UT              770 Hz - 1.8 kHz                 133.83
2000/05/25 23:39:01.161 UT              730 Hz - 1.9 kHz                 133.79
2000/05/25 23:39:01.529 UT              650 Hz - 1.8 kHz                 133.80  [Only Ey]
2000/05/25 23:39:02.633 UT              830 Hz - 1.7 kHz                 133.80
2000/05/25 23:54:20.425 UT              590 Hz - 1.1 kHz                 136.96
2000/05/25 23:56:04.201 UT              510 Hz - 1.1 kHz                 137.02
2000/05/26 00:05:07.001 UT             1.9 kHz - 2.3 kHz                 138.55
2000/05/26 00:40:41.401 UT             2.0 kHz - 3.0 kHz                 137.05
2000/05/26 02:18:14.073 UT             1.5 kHz - 1.7 kHz                 102.66
2000/05/26 02:18:14.441 UT             1.5 kHz - 1.7 kHz                 102.66


;-----------------------------------------------------------------------------------------
; => Load data
;-----------------------------------------------------------------------------------------
;LOADCT,39
;DEVICE,DECOMPOSED=0
date = '102698'
date = '111398'
date = '121498'
date = '040900'
date = '050300'
date = '052600'
date = '061000'
date = '062600'
date = '071000'
date = '072300'
date = '080400'
date = '081500'
date = '100301'
date = '102401'
date = '101002'
mydate = my_str_date(DATE=date)
date   = mydate.S_DATE[0]  ; -('MMDDYY')
mdate  = mydate.DATE[0]    ; -('YYYYMMDD')
ldate  = STRMID(mdate,4L,4L)+STRMID(mdate,0L,4L)
tdate  = mydate.TDATE[0]

;-----------------------------------------------------------------------------------------
; => Find Wind/3DP IDL Save Files
;-----------------------------------------------------------------------------------------
default_extension = '/wind_3dp_pros/wind_data_dir/Wind_3DP_DATA/IDL_Save_Files/'
default_location  = default_extension+date+'/'

DEFSYSV,'!wind3dp_umn',EXISTS=exists
IF NOT KEYWORD_SET(exists) THEN mdir  = FILE_EXPAND_PATH('')+default_location
IF     KEYWORD_SET(exists) THEN mdir  = !wind3dp_umn.WIND_3DP_SAVE_FILE_DIR+date+'/'
IF (mdir EQ '')            THEN mdir = default_location
mfiles = FILE_SEARCH(mdir,'*.sav')


RESTORE,mfiles[0]
RESTORE,mfiles[1]
;-----------------------------------------------------------------------------------------
; => Load mag data
;-----------------------------------------------------------------------------------------
t = ['1998-10-26/00:00:00','1998-10-26/20:45:00']
t = ['1998-11-13/13:00:00','1998-11-14/05:00:00'] 
t = ['1998-12-14/04:30:00','1998-12-15/16:00:00']
t = ['2000-04-09/00:00:00','2000-04-10/20:00:00']
t = ['2000-05-02/20:00:00','2000-05-03/10:00:00']
t = ['2000-05-25/10:00:00','2000-05-26/20:00:00']
t = ['2000-06-09/23:00:00','2000-06-11/03:00:00']
t = ['2000-06-26/10:00:00','2000-06-27/02:00:00']
t = ['2000-07-09/23:00:00','2000-07-10/12:00:00']
t = ['2000-07-23/04:30:00','2000-07-25/00:00:00']
t = ['2000-08-03/15:00:00','2000-08-05/00:00:00']
t = ['2000-08-15/11:30:00','2000-08-18/00:00:00']
t = ['2001-10-03/00:00:00','2001-10-04/14:00:00']
t = ['2001-10-23/06:00:00','2001-10-25/10:00:00']
t = ['2002-10-09/20:00:00','2002-10-10/04:00:00']
tr3 = time_double(t)
mag3  = read_wind_mfi(TRANGE=tr3)
t3x   = mag3.MAG.X
bmag4 = mag3.MAG.Y
magf4 = mag3.BGSE.Y
nt    = N_ELEMENTS(t3x) 
store_data,'wi_B3_MAG(GSE)',DATA={X:mag3.MAG.X,Y:bmag4}
store_data,'wi_B3(GSE)',DATA={X:mag3.MAG.X,Y:magf4}
nn0 =['wi_B3_MAG(GSE)','wi_B3(GSE)']
tplot,nn0
options,'wi_B3_MAG(GSE)',"YTITLE","|B| (nT)!C[GSE,3s]"
options,'wi_B3(GSE)',"YTITLE","B (nT)!C[GSE,3s]"
options,'wi_B3(GSE)','COLORS',[250,150,50]
; => fix bad b-fields on 11/13/1998
tbadx = time_double(['1998-11-13/16:20:00','1998-11-13/17:19:00'])
tbady = time_double(['1998-11-13/15:20:00','1998-11-13/16:40:00'])
tbadz = time_double(['1998-11-13/16:21:00','1998-11-13/19:05:00'])
; => fix bad b-fields on 06/26/2000
tbadx = time_double(['2000-06-26/18:12:00','2000-06-26/20:22:00'])
tbady = time_double(['2000-06-26/17:48:00','2000-06-26/20:36:00'])
tbadz = time_double(['2000-06-26/18:13:00','2000-06-26/20:46:00'])
; => fix bad b-fields on 07/10/2000
tbadx = time_double(['2000-07-10/02:04:00','2000-07-10/03:32:00'])
tbady = time_double(['2000-07-10/02:04:00','2000-07-10/03:32:00'])
tbadz = time_double(['2000-07-10/02:04:00','2000-07-10/03:32:00'])
; => fix bad b-fields on 07/23/2000
tbadx = time_double(['2000-07-23/09:35:00','2000-07-23/12:00:00'])
tbady = time_double(['2000-07-23/09:35:00','2000-07-23/12:00:00'])
tbadz = time_double(['2000-07-23/09:35:00','2000-07-23/12:00:00'])

badx  = WHERE(t3x LE tbadx[1] AND t3x GE tbadx[0],bdx,COMPLEMENT=goodx,NCOMPLEMENT=gdx)
bady  = WHERE(t3x LE tbady[1] AND t3x GE tbady[0],bdy,COMPLEMENT=goody,NCOMPLEMENT=gdy)
badz  = WHERE(t3x LE tbadz[1] AND t3x GE tbadz[0],bdz,COMPLEMENT=goodz,NCOMPLEMENT=gdz)
print, bdx, bdy, bdz
; => bad b-fields on 11/13/1998
;        1180        1600        3280
; => bad b-fields on 06/26/2000
;        2600        3360        3060
; => bad b-fields on 07/10/2000
;        1760        1760        1760
; => bad b-fields on 07/23/2000
;        2900        2900        2900
f     = !VALUES.F_NAN
d     = !VALUES.D_NAN
IF (bdx GT 0) THEN magf4[badx,0] = f
IF (bdy GT 0) THEN magf4[bady,1] = f
IF (bdz GT 0) THEN magf4[badz,2] = f
IF (bdx GT 0) THEN testx = INTERPOL(magf4[goodx,0],t3x[goodx],t3x,/SPLINE)
IF (bdy GT 0) THEN testy = INTERPOL(magf4[goody,1],t3x[goody],t3x,/SPLINE)
IF (bdz GT 0) THEN testz = INTERPOL(magf4[goodz,2],t3x[goodz],t3x,/SPLINE)
; => bad b-fields on 11/13/1998
tbadx = time_double(['1998-11-13/18:00:00','1998-11-13/18:40:00'])
; => bad b-fields on 06/26/2000
tbadx = time_double(['2000-06-26/20:34:00','2000-06-26/21:14:00'])
badx  = WHERE(t3x LE tbadx[1] AND t3x GE tbadx[0],bdx,COMPLEMENT=goodx,NCOMPLEMENT=gdx)
IF (bdx GT 0) THEN testx[badx] = f
IF (bdx GT 0) THEN testx2 = INTERPOL(testx[goodx],t3x[goodx],t3x,/SPLINE) ELSE testx2 = testx
IF (bdx GT 0) THEN magf4 = [[testx2],[testy],[testz]]
IF (bdx GT 0) THEN bmag  = SQRT(TOTAL(magf4^2,2,/NAN))
IF (bdx GT 0) THEN store_data,'wi_B3_MAG(GSE)',DATA={X:mag3.MAG.X,Y:bmag}
IF (bdx GT 0) THEN store_data,'wi_B3(GSE)',DATA={X:mag3.MAG.X,Y:magf4}

DELVAR,tbadx,tbady,tbadz,bdx,bdy,bdz,goodx,goody,goodz,gdx,gdy,gdz
DELVAR,testx,testy,testz,testx2,badx,bady,badz
;-----------------------------------------------------------------------------------------
; => Load orbit data
;-----------------------------------------------------------------------------------------
read_wind_orbit,DATE=date,DATA=windloc
gseloc = windloc.GSE_POSITION     ; => GSE Cartesian position (km)
gsmloc = windloc.GSM_POSITION     ; => GSM Cartesian position (km)
gseunx = windloc.UNIX             ; => Unix times for positions
radial = windloc.RADIAL_DISTANCE  ; => Radial distance from Earth (km)
lshell = windloc.LSHELL           ; => Magnetic L-Shell
invlat = windloc.INVAR_LAT        ; => Invariant Latitude (deg)
gselat = windloc.GSE_LAT          ; => GSE Latitude (deg)
gselon = windloc.GSE_LONG         ; => GSE Longitude (deg)
gsmlat = windloc.GSM_LAT          ; => GSM Latitude (deg)
gsmlon = windloc.GSM_LONG         ; => GSM Longitude (deg)
R_e    = 6.37814d3                ; => Earth's Equitorial Radius (km)
radial *= 1d0/R_e


get_data,nn0[0],DATA=bmagstr
bmagt   = bmagstr.X
tempx   = INTERPOL(gseloc[*,0],gseunx,bmagt,/SPLINE)
tempy   = INTERPOL(gseloc[*,1],gseunx,bmagt,/SPLINE)
tempz   = INTERPOL(gseloc[*,2],gseunx,bmagt,/SPLINE)
testpos = [[tempx],[tempy],[tempz]]  ; => Interpolated GSE positions (km)
tempx   = INTERPOL(gsmloc[*,0],gseunx,bmagt,/SPLINE)
tempy   = INTERPOL(gsmloc[*,1],gseunx,bmagt,/SPLINE)
tempz   = INTERPOL(gsmloc[*,2],gseunx,bmagt,/SPLINE)
testgsm = [[tempx],[tempy],[tempz]]  ; => Interpolated GSE positions (km)


tempx   = INTERPOL(radial,gseunx,bmagt,/SPLINE)
testrad = tempx                      ; => " " radial distance (km)
tempx   = INTERPOL(lshell,gseunx,bmagt,/SPLINE)
testlsh = tempx                      ; => " " L-Shell
tempx   = INTERPOL(invlat,gseunx,bmagt,/SPLINE)
testinl = tempx                      ; => " " Invariant Latitude (deg)
tempx   = INTERPOL(gselat,gseunx,bmagt,/SPLINE)
testlat = tempx
tempx   = INTERPOL(gselon,gseunx,bmagt,/SPLINE)
testlon = tempx
tempx   = INTERPOL(gsmlat,gseunx,bmagt,/SPLINE)
tgsmlat = tempx
tempx   = INTERPOL(gsmlon,gseunx,bmagt,/SPLINE)
tgsmlon = tempx

store_data,'Wind_Radial_Distance',DATA={X:bmagt,Y:testrad}
store_data,'Wind_GSE_Location',DATA={X:bmagt,Y:testpos}
store_data,'Wind_GSM_Location',DATA={X:bmagt,Y:testgsm}
store_data,'Wind_GSE_Latitude',DATA={X:bmagt,Y:testlat}
store_data,'Wind_GSE_Longitude',DATA={X:bmagt,Y:testlon}
store_data,'Wind_GSM_Latitude',DATA={X:bmagt,Y:tgsmlat}
store_data,'Wind_GSM_Longitude',DATA={X:bmagt,Y:tgsmlon}
store_data,'Wind_L-Shell',DATA={X:bmagt,Y:testlsh}
store_data,'Wind_Invariant_Latitude',DATA={X:bmagt,Y:testinl}

DELVAR,gseloc,gsmloc,gseunx,radial,lshell,invlat,gselat,gselon,gsmlat,gsmlon
DELVAR,R_e,bmagt,tempx,tempy,tempz,testpos,testgsm,testrad,testlsh,testinl
DELVAR,testlat,testlon,tgsmlat,tgsmlon,windloc

options,'Wind_Radial_Distance','YTITLE','Radial Distance'+'!C'+'(R!DE!N)'
options,'Wind_GSE_Location','COLORS',[250,150,50]
options,'Wind_GSE_Location','YTITLE','Wind Location'+'!C'+'GSE (km)'
options,'Wind_GSM_Location','COLORS',[250,150,50]
options,'Wind_GSM_Location','YTITLE','Wind Location'+'!C'+'GSM (km)'
options,'Wind_GSE_Latitude','YTITLE','GSE Latitude'+'!C'+'(deg)'
options,'Wind_GSE_Longitude','YTITLE','GSE Longitude'+'!C'+'(deg)'
options,'Wind_GSM_Latitude','YTITLE','GSM Latitude'+'!C'+'(deg)'
options,'Wind_GSM_Longitude','YTITLE','GSM Longitude'+'!C'+'(deg)'
options,'Wind_L-Shell','YTITLE','L-Shell'
options,'Wind_Invariant_Latitude','YTITLE','Invariant Latitude'+'!C'+'(deg)'
;options,,'YTITLE',''
nnw = tnames()
options,nnw,"YSTYLE",1
options,nnw,"PANEL_SIZE",2.
options,nnw,'XMINOR',5
options,nnw,'XTICKLEN',0.04
;-----------------------------------------------------------------------------------------
; => Calc Density, temp, etc... for ions
;-----------------------------------------------------------------------------------------
npl        = N_ELEMENTS(apl)
nplb       = N_ELEMENTS(aplb)
nph        = N_ELEMENTS(aph)
nphb       = N_ELEMENTS(aphb)
pesa_low_moment_calibrate,DATE=date,/NOLOAD,PLM=apl,PLBM=aplb,TRANGE=tr3

nnw = tnames()
options,nnw,"YSTYLE",1
options,nnw,"PANEL_SIZE",2.
options,nnw,'XMINOR',5
options,nnw,'XTICKLEN',0.04
tplot,nn0


tlimit,['2000-04-09/08:00:00','2000-04-10/20:34:00']
tbad = ['2000-04-09/23:40:00','2000-04-10/00:50:00']
trbad = time_double(tbad)                           
time_bar,trbad,VARNAME=nn0,COLOR=250L            
popen,'MFI3s_04-09-2000_0800_04-10-2000_2034_BAD_04-09-2000_2340_04-10-2000_0050',/land
  tplot,nn0
  time_bar,trbad,VARNAME=nn0,COLOR=250L  ; => Mark times when B-field was interpolated
pclose

nna = [nn0,'Wind_Radial_Distance','Wind_L-Shell','Wind_Invariant_Latitude']
popen,'MFI3s-RadialDistance-Lshell-InvLat_04-09-2000_0800_04-10-2000_2034_BAD_04-09-2000_2340_04-10-2000_0050',/land
  tplot,nna
  time_bar,trbad,VARNAME=nna,COLOR=250L  ; => Mark times when B-field was interpolated
pclose


;-----------------------------------------------------------------------------------------
; => TDS data
;-----------------------------------------------------------------------------------------
; => For 04/09/2000 Event
my_tds         = get_wind_tds_data(DATE=date,/TDSF)
ascets         = my_tds.SCET

eind           = [2L,4L,6L,8L,10L,12L,14L,16L,18L,20L,22L,24L,32L,34L,36L,38L,40L,42L,44L,46L,$
                  48L,50L,56L,58L,60L,62L,64L,66L,68L,70L,128L]
wind           = [72L,74L,76L,78L,80L,82L,84L,86L,88L,90L,92L,94L,96L,98L,104L,106L,$
                  110L,112L,114L,116L,118L,120L,122L,123L,125L,126L,130L]

whistler_times = ascets[wind+210L]
eholes_times   = ascets[eind+210L]

nwhist = N_ELEMENTS(wind)
prefx0 = 'whistler_times = ['
prefx  = REPLICATE('                  ',nwhist-2L)
PRINT,prefx0,ymdb_whist[0:1],FORMAT='(a18,"`",a26,"`,`",a26,"`,$")'
cc = 0L
bb = 0L
FOR j=2L, nwhist - 1L DO BEGIN     $
  cc += 2                        & $
  bb  = cc + 1L                  & $
  PRINT,prefx[j],ymdb_whist[cc:bb],FORMAT='(a18,"`",a26,"`,`",a26,"`,$")'

nehole = N_ELEMENTS(eind)
prefx0 = 'eholes_times   = ['
prefx  = REPLICATE('                  ',nehole-2L)
PRINT,prefx0,ymdb_ehole[0:1],FORMAT='(a18,"`",a26,"`,`",a26,"`,$")'
cc = 0L
bb = 0L
FOR j=2L, nehole - 1L DO BEGIN     $
  cc += 2                        & $
  bb  = cc + 1L                  & $
  PRINT,prefx[j],ymdb_ehole[cc:bb],FORMAT='(a18,"`",a26,"`,`",a26,"`,$")'


; => For 11/13/1998 Event
whistler_times = ['1998/11/13 16:24:42.701 UT','1998/11/13 16:37:50.221 UT',$
                  '1998/11/13 16:44:38.333 UT','1998/11/13 18:10:06.775 UT',$
                  '1998/11/13 18:10:09.352 UT','1998/11/13 18:10:54.989 UT',$
                  '1998/11/13 18:15:07.431 UT','1998/11/13 18:15:36.141 UT',$
                  '1998/11/13 18:17:41.629 UT','1998/11/13 18:18:53.754 UT',$
                  '1998/11/13 18:19:09.946 UT','1998/11/13 18:20:50.774 UT',$
                  '1998/11/13 18:20:50.777 UT','1998/11/13 18:20:57.398 UT',$
                  '1998/11/13 18:20:57.401 UT','1998/11/13 18:20:58.506 UT',$
                  '1998/11/13 18:20:58.872 UT','1998/11/13 18:20:58.877 UT',$
                  '1998/11/13 18:21:06.233 UT','1998/11/13 18:21:06.971 UT',$
                  '1998/11/13 18:21:07.336 UT','1998/11/13 18:21:07.341 UT',$
                  '1998/11/13 18:21:17.275 UT','1998/11/13 19:03:48.989 UT']

eholes_times   = ['1998/11/13 15:05:00.542 UT','1998/11/13 15:06:41.733 UT',$
                  '1998/11/13 15:07:49.817 UT','1998/11/13 15:07:55.342 UT',$
                  '1998/11/13 15:09:26.594 UT','1998/11/13 15:09:26.971 UT',$
                  '1998/11/13 15:10:08.190 UT','1998/11/13 15:45:01.741 UT',$
                  '1998/11/13 18:24:13.549 UT','1998/11/13 18:37:18.125 UT',$
                  '1998/11/13 18:40:21.757 UT','1998/11/13 18:44:10.653 UT',$
                  '1998/11/13 19:23:33.948 UT','1998/11/13 21:55:39.612 UT',$
                  '1998/11/13 22:02:01.964 UT','1998/11/13 22:08:47.500 UT']

; => For 01/02/1999 Event
whistler_times = ['1999/01/01 07:44:55.575 UT','1999/01/01 16:37:50.221 UT',$
                  '1999/01/01 18:31:01.060 UT','1999/01/02 01:29:53.374 UT',$
                  '1999/01/02 03:36:53.550 UT','1999/01/02 03:42:03.038 UT',$
                  '1999/01/02 03:49:48.926 UT','1999/01/02 04:10:14.734 UT',$
                  '1999/01/02 04:17:01.742 UT','1999/01/02 22:57:30.055 UT',$
                  '1999/01/03 00:54:19.724 UT','1999/01/03 00:54:24.133 UT',$
                  '1999/01/03 00:58:04.934 UT','1999/01/03 01:14:32.274 UT',$
                  '1999/01/03 01:28:12.177 UT','1999/01/03 01:33:47.430 UT',$
                  '1999/01/03 01:35:13.171 UT','1999/01/03 03:02:01.852 UT',$
                  '1999/01/03 03:36:09.393 UT','1999/01/03 10:31:21.530 UT',$
                  '1999/01/03 10:44:07.706 UT']

eholes_times   = ['1999/01/01 23:17:08.751 UT','1999/01/02 09:22:42.860 UT',$
                  '1999/01/02 22:02:25.177 UT','1999/01/03 08:18:10.535 UT' ]


; => For 04/09/2000 Event
whistler_times = ['2000/04/10 02:45:38.951 UT','2000/04/10 02:49:27.111 UT',$
                  '2000/04/10 02:50:55.063 UT','2000/04/10 02:50:56.903 UT',$
                  '2000/04/10 02:52:28.535 UT','2000/04/10 02:52:47.303 UT',$
                  '2000/04/10 02:55:37.319 UT','2000/04/10 02:55:52.775 UT',$
                  '2000/04/10 02:56:31.415 UT','2000/04/10 02:56:33.991 UT',$
                  '2000/04/10 02:56:43.191 UT','2000/04/10 03:11:02.103 UT',$
                  '2000/04/10 03:11:02.471 UT','2000/04/10 03:11:03.943 UT',$
                  '2000/04/10 03:11:06.887 UT','2000/04/10 03:11:08.359 UT',$
                  '2000/04/10 03:11:10.567 UT','2000/04/10 03:20:48.695 UT',$
                  '2000/04/10 03:44:20.343 UT','2000/04/10 03:47:52.311 UT',$
                  '2000/04/10 04:00:14.567 UT','2000/04/10 04:14:44.887 UT',$
                  '2000/04/10 04:14:48.567 UT','2000/04/10 04:14:59.239 UT',$
                  '2000/04/10 04:25:44.343 UT','2000/04/10 04:32:44.231 UT']

eholes_times   = ['2000/04/09 20:28:05.609 UT','2000/04/09 20:28:18.121 UT',$
                  '2000/04/09 20:28:18.857 UT','2000/04/09 20:28:20.697 UT',$
                  '2000/04/09 20:28:21.433 UT','2000/04/09 20:29:21.417 UT',$
                  '2000/04/09 20:29:21.785 UT','2000/04/09 20:30:18.825 UT',$
                  '2000/04/09 20:46:10.105 UT','2000/04/09 20:46:11.577 UT',$
                  '2000/04/09 20:46:42.857 UT','2000/04/09 20:46:48.745 UT',$
                  '2000/04/09 23:24:44.744 UT','2000/04/09 23:24:45.848 UT',$
                  '2000/04/09 23:24:53.576 UT','2000/04/09 23:24:53.944 UT',$
                  '2000/04/09 23:24:56.520 UT','2000/04/09 23:25:06.824 UT',$
                  '2000/04/09 23:25:07.192 UT','2000/04/09 23:25:07.560 UT',$
                  '2000/04/09 23:25:07.928 UT','2000/04/09 23:25:09.400 UT',$
                  '2000/04/10 01:23:46.520 UT','2000/04/10 01:36:23.496 UT',$
                  '2000/04/10 01:36:36.376 UT','2000/04/10 01:50:40.200 UT',$
                  '2000/04/10 01:50:40.568 UT','2000/04/10 01:50:40.936 UT',$
                  '2000/04/10 01:50:42.040 UT','2000/04/10 01:51:02.648 UT']


; => For 05/03/2000 Event
whistler_times = ['2000/05/03 02:45:38.071 UT','2000/05/03 03:08:43.223 UT',$
                  '2000/05/03 03:09:55.719 UT','2000/05/03 03:09:56.087 UT',$
                  '2000/05/03 03:18:44.167 UT','2000/05/03 09:23:34.521 UT',$
                  '2000/05/03 09:23:35.625 UT','2000/05/03 09:32:55.353 UT',$
                  '2000/05/03 09:37:39.449 UT']
                  
eholes_times   = ['2000/05/02 21:33:32.023 UT','2000/05/02 21:42:32.983 UT',$
                  '2000/05/02 21:42:34.824 UT','2000/05/02 21:42:44.023 UT',$
                  '2000/05/02 21:42:44.759 UT','2000/05/02 21:42:45.496 UT',$
                  '2000/05/02 21:42:46.232 UT','2000/05/02 21:42:46.968 UT',$
                  '2000/05/02 21:42:54.696 UT','2000/05/02 21:42:56.536 UT',$
                  '2000/05/02 21:42:57.271 UT','2000/05/02 21:42:57.640 UT',$
                  '2000/05/02 21:49:50.536 UT','2000/05/02 21:50:10.776 UT',$
                  '2000/05/02 21:50:11.144 UT','2000/05/02 22:08:11.224 UT',$
                  '2000/05/02 23:04:26.887 UT']


; => For 05/26/2000 Event
whistler_times = ['2000/05/25 20:53:26.266 UT','2000/05/25 20:53:26.634 UT',$
                  '2000/05/25 20:54:42.810 UT','2000/05/25 20:58:41.642 UT',$
                  '2000/05/25 21:11:37.754 UT','2000/05/25 22:31:45.674 UT',$
                  '2000/05/25 22:38:52.186 UT','2000/05/25 22:43:01.322 UT',$
                  '2000/05/25 22:44:48.042 UT','2000/05/25 22:51:17.386 UT',$
                  '2000/05/25 23:08:40.298 UT','2000/05/25 23:13:53.466 UT',$
                  '2000/05/25 23:30:49.881 UT','2000/05/25 23:31:07.177 UT',$
                  '2000/05/25 23:31:10.489 UT','2000/05/25 23:32:52.425 UT',$
                  '2000/05/25 23:33:49.833 UT','2000/05/25 23:35:10.425 UT',$
                  '2000/05/25 23:35:27.354 UT','2000/05/25 23:35:53.481 UT',$
                  '2000/05/25 23:36:01.577 UT','2000/05/25 23:36:21.818 UT',$
                  '2000/05/25 23:36:29.545 UT','2000/05/25 23:37:29.529 UT',$
                  '2000/05/25 23:38:51.961 UT','2000/05/25 23:38:57.849 UT',$
                  '2000/05/25 23:39:01.161 UT','2000/05/25 23:39:01.529 UT',$
                  '2000/05/25 23:39:02.633 UT','2000/05/25 23:54:20.425 UT',$
                  '2000/05/25 23:56:04.201 UT','2000/05/26 00:05:07.001 UT',$
                  '2000/05/26 00:40:41.401 UT','2000/05/26 02:18:14.073 UT',$
                  '2000/05/26 02:18:14.441 UT']

eholes_times   = ['2000/05/26 01:30:52.377 UT','2000/05/26 02:15:28.841 UT',$
                  '2000/05/26 02:15:29.577 UT','2000/05/26 02:15:30.681 UT',$
                  '2000/05/26 02:15:31.049 UT','2000/05/26 02:17:00.473 UT',$
                  '2000/05/26 02:25:41.561 UT','2000/05/26 02:34:31.849 UT',$
                  '2000/05/26 02:41:34.681 UT','2000/05/26 02:43:17.353 UT',$
                  '2000/05/26 02:47:09.561 UT','2000/05/26 03:21:24.841 UT',$
                  '2000/05/26 03:21:26.313 UT','2000/05/26 03:21:26.681 UT',$
                  '2000/05/26 03:59:43.368 UT','2000/05/26 04:11:15.944 UT']


; => For 06/10/2000 Event
whistler_times = ['2000/06/10 01:51:51.039 UT','2000/06/10 12:48:06.424 UT',$
                  '2000/06/10 12:48:14.888 UT','2000/06/10 12:48:20.402 UT',$
                  '2000/06/10 12:48:33.282 UT','2000/06/10 13:06:56.920 UT',$
                  '2000/06/10 13:07:03.906 UT','2000/06/10 13:07:06.488 UT',$
                  '2000/06/10 13:07:08.696 UT','2000/06/10 13:07:09.064 UT',$
                  '2000/06/10 13:07:16.792 UT','2000/06/10 13:07:20.469 UT',$
                  '2000/06/10 13:07:30.405 UT','2000/06/10 13:07:31.877 UT',$
                  '2000/06/10 13:07:32.616 UT','2000/06/10 13:07:38.504 UT',$
                  '2000/06/10 13:07:39.976 UT','2000/06/10 13:08:34.434 UT',$
                  '2000/06/10 23:42:38.886 UT','2000/06/10 23:47:19.658 UT',$
                  '2000/06/11 00:00:42.281 UT','2000/06/11 00:00:48.522 UT',$
                  '2000/06/11 00:07:33.337 UT','2000/06/11 00:09:20.425 UT',$
                  '2000/06/11 00:09:42.137 UT','2000/06/11 02:41:44.120 UT']

eholes_times   = ['2000/06/10 13:03:01.032 UT','2000/06/10 13:06:17.176 UT',$
                  '2000/06/10 13:11:07.160 UT','2000/06/10 13:32:28.904 UT',$
                  '2000/06/10 13:32:53.928 UT','2000/06/10 13:32:56.872 UT',$
                  '2000/06/10 13:32:57.240 UT','2000/06/10 13:34:39.544 UT',$
                  '2000/06/10 13:35:03.832 UT','2000/06/10 13:57:57.944 UT',$
                  '2000/06/10 13:58:20.760 UT','2000/06/10 14:13:35.607 UT',$
                  '2000/06/10 14:13:36.711 UT','2000/06/10 14:36:25.303 UT',$
                  '2000/06/10 16:00:00.775 UT','2000/06/10 16:00:01.879 UT',$
                  '2000/06/10 16:01:44.919 UT','2000/06/10 16:31:58.423 UT',$
                  '2000/06/10 16:32:21.239 UT','2000/06/10 16:32:21.607 UT',$
                  '2000/06/10 16:32:21.975 UT','2000/06/10 16:33:08.343 UT',$
                  '2000/06/10 16:33:09.079 UT','2000/06/10 16:33:09.445 UT',$
                  '2000/06/10 16:33:13.127 UT','2000/06/10 16:33:14.231 UT',$
                  '2000/06/10 16:33:14.599 UT','2000/06/10 16:41:47.959 UT',$
                  '2000/06/10 18:41:02.246 UT','2000/06/10 19:22:56.422 UT']


; => For 06/26/2000 Event
whistler_times = ['2000/06/26 13:17:08.778 UT','2000/06/26 13:17:57.351 UT',$
                  '2000/06/26 13:18:02.134 UT','2000/06/26 13:51:00.503 UT',$
                  '2000/06/26 14:27:27.162 UT','2000/06/26 14:58:19.671 UT',$
                  '2000/06/26 15:01:19.990 UT','2000/06/26 15:01:26.250 UT',$
                  '2000/06/26 15:01:27.719 UT','2000/06/26 15:08:18.775 UT',$
                  '2000/06/26 15:08:20.614 UT','2000/06/26 15:14:36.343 UT',$
                  '2000/06/26 15:14:37.814 UT','2000/06/26 20:26:34.419 UT',$
                  '2000/06/26 20:26:35.154 UT','2000/06/26 20:26:36.628 UT',$
                  '2000/06/26 20:27:12.690 UT','2000/06/26 20:27:13.060 UT',$
                  '2000/06/26 20:27:14.162 UT','2000/06/26 20:27:22.258 UT',$
                  '2000/06/26 20:27:28.514 UT']

eholes_times   = ['2000/06/26 17:22:36.261 UT','2000/06/26 17:27:47.589 UT',$
                  '2000/06/26 17:28:01.205 UT','2000/06/26 18:02:55.861 UT',$
                  '2000/06/26 18:03:06.533 UT','2000/06/26 18:03:10.581 UT',$
                  '2000/06/26 18:05:29.317 UT','2000/06/26 18:05:31.525 UT',$
                  '2000/06/26 18:06:46.965 UT','2000/06/26 18:06:47.701 UT',$
                  '2000/06/26 18:06:48.069 UT','2000/06/26 18:06:48.437 UT',$
                  '2000/06/26 18:06:48.805 UT','2000/06/26 18:06:49.173 UT',$
                  '2000/06/26 18:07:06.837 UT','2000/06/26 18:07:07.573 UT',$
                  '2000/06/26 18:07:07.941 UT','2000/06/26 18:07:08.309 UT',$
                  '2000/06/26 18:08:04.245 UT','2000/06/26 20:19:05.828 UT',$
                  '2000/06/26 20:19:06.195 UT','2000/06/26 20:19:31.956 UT',$
                  '2000/06/26 22:01:36.210 UT','2000/06/26 23:03:04.674 UT',$
                  '2000/06/26 23:03:08.354 UT','2000/06/26 23:05:33.714 UT',$
                  '2000/06/26 23:28:31.873 UT','2000/06/27 00:32:16.499 UT',$
                  '2000/06/27 01:23:12.371 UT','2000/06/27 01:29:59.747 UT']


; => For 07/10/2000 Event
whistler_times = ['2000/07/09 23:52:08.619 UT','2000/07/10 07:28:37.386 UT',$
                  '2000/07/10 07:29:31.850 UT','2000/07/10 07:29:36.266 UT',$
                  '2000/07/10 07:30:05.338 UT','2000/07/10 07:30:18.954 UT',$
                  '2000/07/10 07:31:57.946 UT','2000/07/10 07:32:10.458 UT',$
                  '2000/07/10 07:32:11.930 UT','2000/07/10 07:34:15.210 UT',$
                  '2000/07/10 07:34:16.314 UT','2000/07/10 07:34:22.938 UT',$
                  '2000/07/10 07:34:25.146 UT','2000/07/10 07:34:25.514 UT',$
                  '2000/07/10 07:34:28.458 UT','2000/07/10 07:34:37.290 UT',$
                  '2000/07/10 07:34:59.738 UT','2000/07/10 07:45:40.794 UT',$
                  '2000/07/10 07:45:43.738 UT']

eholes_times   = ['2000/07/09 19:00:08.384 UT','2000/07/09 19:11:07.468 UT',$
                  '2000/07/09 19:13:33.199 UT','2000/07/09 20:15:27.423 UT',$
                  '2000/07/09 20:17:39.169 UT','2000/07/09 20:23:31.343 UT',$
                  '2000/07/09 20:23:33.919 UT','2000/07/09 20:23:36.863 UT',$
                  '2000/07/09 20:23:39.807 UT','2000/07/09 20:26:33.872 UT',$
                  '2000/07/09 20:26:40.496 UT','2000/07/09 20:28:46.353 UT',$
                  '2000/07/09 20:28:47.455 UT','2000/07/09 20:31:30.112 UT',$
                  '2000/07/09 20:31:31.584 UT','2000/07/09 20:31:32.688 UT',$
                  '2000/07/09 23:56:05.601 UT','2000/07/10 05:18:23.643 UT',$
                  '2000/07/10 05:19:04.123 UT','2000/07/10 05:22:51.547 UT',$
                  '2000/07/10 08:30:00.330 UT','2000/07/10 08:38:34.794 UT',$
                  '2000/07/10 08:38:36.266 UT','2000/07/10 08:43:49.434 UT',$
                  '2000/07/10 08:49:37.194 UT','2000/07/10 08:51:07.722 UT',$
                  '2000/07/10 08:51:08.458 UT','2000/07/10 09:45:35.929 UT',$
                  '2000/07/10 10:13:03.465 UT','2000/07/10 10:13:21.497 UT',$
                  '2000/07/10 10:13:21.865 UT','2000/07/10 10:16:39.481 UT',$
                  '2000/07/10 10:29:23.449 UT','2000/07/10 10:29:23.817 UT',$
                  '2000/07/10 10:29:25.657 UT','2000/07/10 10:30:57.289 UT',$
                  '2000/07/10 11:24:41.705 UT','2000/07/10 11:25:00.105 UT',$
                  '2000/07/10 11:26:06.345 UT','2000/07/10 11:27:59.321 UT',$
                  '2000/07/10 11:33:39.353 UT','2000/07/10 11:33:40.825 UT']


; => For 07/23/2000 Event [FIXED SCETs]
whistler_times = ['2000/07/23 04:41:13.552 UT','2000/07/23 04:41:38.797 UT',$
                  '2000/07/23 04:42:26.491 UT','2000/07/23 04:42:30.774 UT',$
                  '2000/07/23 05:39:03.496 UT','2000/07/23 05:44:40.518 UT',$
                  '2000/07/23 05:59:33.419 UT','2000/07/23 06:03:04.981 UT',$
                  '2000/07/23 06:36:17.921 UT','2000/07/23 07:03:46.196 UT',$
                  '2000/07/23 07:53:55.198 UT','2000/07/23 08:07:18.002 UT',$
                  '2000/07/23 08:18:53.253 UT','2000/07/23 08:18:56.383 UT',$
                  '2000/07/23 08:19:22.392 UT','2000/07/23 08:19:22.720 UT',$
                  '2000/07/23 09:42:14.233 UT','2000/07/24 12:55:12.275 UT' ]

eholes_times   = ['2000/07/23 13:48:07.590 UT','2000/07/23 13:56:56.158 UT',$
                  '2000/07/23 14:11:20.122 UT','2000/07/23 14:21:26.936 UT',$
                  '2000/07/23 14:22:10.318 UT','2000/07/23 14:22:20.775 UT',$
                  '2000/07/23 14:22:21.107 UT','2000/07/23 14:22:21.621 UT',$
                  '2000/07/23 14:22:36.279 UT','2000/07/23 14:23:38.017 UT',$
                  '2000/07/23 14:23:38.319 UT','2000/07/23 14:24:10.289 UT',$
                  '2000/07/23 14:24:16.223 UT','2000/07/23 14:31:24.917 UT',$
                  '2000/07/23 14:32:25.118 UT','2000/07/23 14:33:11.138 UT',$
                  '2000/07/23 14:35:04.782 UT','2000/07/23 14:35:19.863 UT',$
                  '2000/07/23 14:35:24.874 UT','2000/07/23 14:57:31.832 UT',$
                  '2000/07/23 14:57:34.882 UT','2000/07/23 15:01:13.724 UT',$
                  '2000/07/23 15:15:37.441 UT','2000/07/23 15:50:58.180 UT',$
                  '2000/07/23 15:55:11.134 UT','2000/07/23 15:55:11.679 UT',$
                  '2000/07/23 15:56:59.682 UT','2000/07/23 16:18:21.227 UT',$
                  '2000/07/23 16:18:21.688 UT','2000/07/23 17:28:53.874 UT',$
                  '2000/07/23 17:35:34.924 UT','2000/07/23 17:48:37.512 UT',$
                  '2000/07/23 17:48:39.430 UT','2000/07/23 17:52:45.370 UT',$
                  '2000/07/23 17:57:40.397 UT','2000/07/23 17:57:41.510 UT',$
                  '2000/07/23 18:27:25.931 UT','2000/07/23 18:27:26.217 UT',$
                  '2000/07/23 18:27:27.583 UT','2000/07/23 19:26:37.934 UT',$
                  '2000/07/23 19:46:41.990 UT','2000/07/23 19:47:07.664 UT',$
                  '2000/07/23 19:48:11.505 UT','2000/07/23 20:15:40.305 UT',$
                  '2000/07/23 20:18:47.284 UT','2000/07/23 20:24:47.855 UT',$
                  '2000/07/23 21:55:10.902 UT','2000/07/23 22:27:36.001 UT',$
                  '2000/07/23 22:57:14.264 UT','2000/07/23 22:57:47.557 UT',$
                  '2000/07/23 22:57:51.691 UT','2000/07/23 23:00:27.576 UT',$
                  '2000/07/23 23:06:30.816 UT','2000/07/23 23:09:25.725 UT',$
                  '2000/07/23 23:19:21.442 UT','2000/07/23 23:21:05.733 UT',$
                  '2000/07/23 23:21:28.588 UT','2000/07/23 23:33:01.361 UT',$
                  '2000/07/23 23:33:29.544 UT','2000/07/24 00:26:51.818 UT',$
                  '2000/07/24 00:32:01.685 UT','2000/07/24 00:51:24.558 UT',$
                  '2000/07/24 00:51:40.240 UT','2000/07/24 00:51:41.197 UT',$
                  '2000/07/24 00:52:37.152 UT','2000/07/24 03:21:17.045 UT',$
                  '2000/07/24 03:48:19.168 UT','2000/07/24 03:48:30.252 UT',$
                  '2000/07/24 03:59:51.204 UT','2000/07/24 05:21:24.315 UT',$
                  '2000/07/24 10:39:23.973 UT','2000/07/24 11:36:05.563 UT',$
                  '2000/07/24 11:36:45.827 UT','2000/07/24 13:19:40.944 UT',$
                  '2000/07/24 13:45:06.628 UT','2000/07/24 14:16:01.006 UT',$
                  '2000/07/24 14:44:06.662 UT','2000/07/24 14:52:52.786 UT',$
                  '2000/07/24 14:52:53.212 UT','2000/07/24 15:04:44.337 UT',$
                  '2000/07/24 15:21:16.745 UT','2000/07/24 16:50:17.544 UT',$
                  '2000/07/24 17:24:28.239 UT','2000/07/24 17:43:10.346 UT',$
                  '2000/07/24 17:57:45.359 UT','2000/07/24 19:41:21.997 UT',$
                  '2000/07/24 20:44:00.151 UT','2000/07/24 20:50:48.129 UT',$
                  '2000/07/24 21:47:05.672 UT']


    ; => For 08/04/2000 Event [FIXED SCETs]
    whistler_times = ['2000/08/03 16:58:22.313 UT','2000/08/03 17:00:43.796 UT',$
                      '2000/08/03 18:43:41.901 UT','2000/08/03 18:52:27.263 UT',$
                      '2000/08/03 19:06:46.033 UT','2000/08/03 19:10:08.461 UT',$
                      '2000/08/03 19:10:43.020 UT','2000/08/03 19:18:28.845 UT',$
                      '2000/08/03 19:18:56.909 UT','2000/08/03 19:19:03.071 UT',$
                      '2000/08/03 19:27:29.294 UT','2000/08/03 19:34:13.505 UT',$
                      '2000/08/03 19:35:40.561 UT','2000/08/03 19:35:49.459 UT',$
                      '2000/08/03 19:40:05.168 UT','2000/08/03 19:50:40.491 UT',$
                      '2000/08/03 21:51:51.507 UT','2000/08/03 22:04:46.697 UT',$
                      '2000/08/03 22:30:12.340 UT','2000/08/03 23:06:51.684 UT',$
                      '2000/08/03 23:25:52.206 UT','2000/08/04 03:44:40.929 UT',$
                      '2000/08/04 17:50:10.173 UT','2000/08/04 17:50:10.592 UT',$
                      '2000/08/04 17:51:07.046 UT','2000/08/04 17:52:00.778 UT',$
                      '2000/08/04 18:35:36.083 UT','2000/08/04 18:35:39.984 UT',$
                      '2000/08/04 18:35:40.337 UT']
    eholes_times   = ['2000/08/04 06:38:21.239 UT','2000/08/04 06:53:39.477 UT',$
                      '2000/08/04 06:55:39.325 UT','2000/08/04 06:59:05.924 UT',$
                      '2000/08/04 06:59:16.600 UT','2000/08/04 06:59:28.603 UT',$
                      '2000/08/04 06:59:54.983 UT','2000/08/04 07:08:43.379 UT',$
                      '2000/08/04 12:35:00.758 UT','2000/08/04 12:36:39.099 UT',$
                      '2000/08/04 12:38:37.764 UT','2000/08/04 12:38:55.697 UT',$
                      '2000/08/04 12:39:02.196 UT','2000/08/04 12:39:02.669 UT',$
                      '2000/08/04 12:39:05.300 UT','2000/08/04 12:39:05.673 UT',$
                      '2000/08/04 12:39:09.434 UT','2000/08/04 12:39:38.373 UT',$
                      '2000/08/04 12:39:40.195 UT','2000/08/04 12:39:43.030 UT',$
                      '2000/08/04 12:39:47.462 UT','2000/08/04 16:58:28.886 UT',$
                      '2000/08/04 16:58:29.360 UT','2000/08/04 18:22:10.956 UT',$
                      '2000/08/04 21:31:58.161 UT','2000/08/04 21:32:03.052 UT',$
                      '2000/08/04 21:32:04.317 UT','2000/08/04 21:32:07.581 UT',$
                      '2000/08/04 21:32:10.066 UT']


    ; => For 08/15/2000 Event
    whistler_times = ['2000/08/15 13:19:04.951 UT','2000/08/15 14:38:26.628 UT',$
                      '2000/08/15 15:03:15.189 UT','2000/08/15 15:09:11.042 UT',$
                      '2000/08/15 15:56:18.023 UT','2000/08/15 15:56:20.596 UT',$
                      '2000/08/15 16:09:44.308 UT','2000/08/15 17:40:51.316 UT',$
                      '2000/08/15 17:58:30.052 UT','2000/08/15 17:58:30.422 UT',$
                      '2000/08/15 18:09:05.219 UT','2000/08/15 18:16:18.358 UT',$
                      '2000/08/15 18:42:11.683 UT','2000/08/15 18:42:13.158 UT',$
                      '2000/08/15 18:42:27.142 UT','2000/08/15 18:42:27.510 UT',$
                      '2000/08/15 18:42:32.294 UT','2000/08/15 18:42:32.295 UT',$
                      '2000/08/15 18:46:46.582 UT','2000/08/15 19:10:20.806 UT',$
                      '2000/08/15 19:57:33.302 UT','2000/08/15 21:14:05.572 UT',$
                      '2000/08/15 21:14:05.939 UT','2000/08/15 21:18:07.716 UT',$
                      '2000/08/15 21:18:07.717 UT','2000/08/16 02:13:02.628 UT',$
                      '2000/08/16 02:13:04.100 UT','2000/08/16 02:30:04.196 UT',$
                      '2000/08/16 02:30:05.300 UT','2000/08/16 02:30:05.662 UT',$
                      '2000/08/16 02:30:11.188 UT','2000/08/16 02:30:12.660 UT']

    eholes_times   = ['2000/08/15 17:19:52.388 UT','2000/08/15 17:58:30.052 UT',$
                      '2000/08/16 05:22:35.299 UT','2000/08/16 05:23:58.467 UT',$
                      '2000/08/16 06:59:27.491 UT','2000/08/16 08:13:43.971 UT',$
                      '2000/08/16 08:31:45.155 UT','2000/08/16 08:31:51.779 UT',$
                      '2000/08/16 08:32:10.915 UT','2000/08/16 08:32:11.651 UT',$
                      '2000/08/16 08:32:13.491 UT','2000/08/16 08:32:17.907 UT',$
                      '2000/08/16 08:32:19.011 UT','2000/08/16 08:37:42.115 UT',$
                      '2000/08/16 08:39:55.699 UT','2000/08/16 08:40:59.731 UT',$
                      '2000/08/16 08:41:27.699 UT','2000/08/16 08:41:54.563 UT',$
                      '2000/08/16 09:25:06.386 UT','2000/08/16 09:39:18.306 UT',$
                      '2000/08/16 10:25:38.178 UT','2000/08/16 10:30:53.554 UT',$
                      '2000/08/16 10:34:20.370 UT','2000/08/16 10:34:47.970 UT',$
                      '2000/08/16 10:48:28.610 UT','2000/08/16 11:03:35.362 UT',$
                      '2000/08/16 11:08:35.282 UT','2000/08/16 12:29:44.290 UT',$
                      '2000/08/16 12:31:27.698 UT','2000/08/16 13:01:34.946 UT',$
                      '2000/08/16 13:02:43.394 UT','2000/08/16 16:05:20.593 UT',$
                      '2000/08/16 16:59:34.081 UT','2000/08/16 17:00:14.929 UT',$
                      '2000/08/16 17:06:38.752 UT','2000/08/16 20:02:17.536 UT',$
                      '2000/08/16 20:02:25.632 UT','2000/08/16 20:02:27.104 UT',$
                      '2000/08/16 20:02:29.680 UT','2000/08/16 20:36:36.128 UT',$
                      '2000/08/16 20:36:40.912 UT','2000/08/16 21:25:19.151 UT',$
                      '2000/08/16 21:25:20.623 UT','2000/08/16 22:39:41.151 UT',$
                      '2000/08/16 22:39:41.519 UT','2000/08/16 22:39:42.991 UT',$
                      '2000/08/16 22:39:45.935 UT','2000/08/16 22:39:46.302 UT',$
                      '2000/08/16 22:39:47.406 UT','2000/08/16 22:39:51.822 UT',$
                      '2000/08/16 22:39:59.551 UT','2000/08/16 22:40:05.439 UT',$
                      '2000/08/16 22:40:16.110 UT','2000/08/16 23:18:26.910 UT',$
                      '2000/08/16 23:18:45.310 UT','2000/08/16 23:20:45.647 UT',$
                      '2000/08/16 23:27:13.886 UT','2000/08/17 00:12:45.183 UT',$
                      '2000/08/17 03:53:17.358 UT','2000/08/17 03:53:18.830 UT',$
                      '2000/08/17 03:53:36.862 UT','2000/08/17 03:53:37.230 UT',$
                      '2000/08/17 03:53:37.598 UT','2000/08/17 04:14:50.142 UT',$
                      '2000/08/17 06:34:14.781 UT','2000/08/17 06:34:15.517 UT',$
                      '2000/08/17 06:34:25.821 UT','2000/08/17 06:38:00.365 UT',$
                      '2000/08/17 08:25:54.957 UT','2000/08/17 09:00:34.157 UT',$
                      '2000/08/17 10:00:45.708 UT','2000/08/17 12:21:28.364 UT',$
                      '2000/08/17 12:38:17.788 UT','2000/08/17 13:40:46.603 UT',$
                      '2000/08/17 14:01:06.523 UT','2000/08/17 15:18:49.819 UT']


; => For 10/03/2001 Event
whistler_times = ['2001/10/03 05:44:00.074 UT','2001/10/03 05:44:00.442 UT',$
                  '2001/10/03 05:44:06.330 UT','2001/10/03 05:50:14.698 UT',$
                  '2001/10/03 05:52:38.218 UT','2001/10/03 05:53:13.178 UT',$
                  '2001/10/03 05:55:19.402 UT','2001/10/03 05:59:55.402 UT',$
                  '2001/10/03 06:12:26.490 UT','2001/10/03 06:12:28.330 UT',$
                  '2001/10/03 06:14:22.042 UT','2001/10/03 06:18:53.626 UT',$
                  '2001/10/03 06:36:06.602 UT','2001/10/03 06:36:20.218 UT',$
                  '2001/10/03 06:36:21.690 UT','2001/10/03 06:36:36.778 UT',$
                  '2001/10/03 06:36:49.658 UT','2001/10/03 06:40:34.138 UT',$
                  '2001/10/03 07:11:36.218 UT','2001/10/03 07:56:03.482 UT',$
                  '2001/10/04 00:36:06.613 UT','2001/10/04 01:56:15.637 UT',$
                  '2001/10/04 01:56:16.741 UT','2001/10/04 01:56:18.949 UT',$
                  '2001/10/04 01:56:19.317 UT','2001/10/04 01:56:20.421 UT',$
                  '2001/10/04 01:56:21.157 UT','2001/10/04 02:01:14.085 UT',$
                  '2001/10/04 02:09:29.909 UT','2001/10/04 02:07:22.085 UT',$
                  '2001/10/04 02:07:27.237 UT','2001/10/04 02:07:33.493 UT',$
                  '2001/10/04 02:07:43.797 UT','2001/10/04 02:09:44.132 UT',$
                  '2001/10/04 05:19:52.859 UT','2001/10/04 05:49:01.227 UT',$
                  '2001/10/04 05:53:15.885 UT','2001/10/04 05:53:44.227 UT',$
                  '2001/10/04 06:05:43.659 UT','2001/10/04 06:17:59.292 UT',$
                  '2001/10/04 06:37:42.787 UT','2001/10/04 06:50:59.139 UT',$
                  '2001/10/04 08:14:41.603 UT','2001/10/04 08:14:41.971 UT',$
                  '2001/10/04 08:15:56.667 UT','2001/10/04 08:19:44.091 UT',$
                  '2001/10/04 08:20:31.563 UT','2001/10/04 08:25:41.427 UT',$
                  '2001/10/04 08:28:31.075 UT','2001/10/04 08:39:44.139 UT',$
                  '2001/10/04 08:42:03.981 UT','2001/10/04 08:55:36.163 UT',$
                  '2001/10/04 08:59:18.061 UT','2001/10/04 09:18:32.114 UT' ]

eholes_times   = ['2001/10/03 04:01:35.963 UT','2001/10/03 04:01:35.963 UT',$
                  '2001/10/03 04:06:10.491 UT','2001/10/03 04:24:33.755 UT',$
                  '2001/10/03 04:24:38.171 UT','2001/10/03 04:24:39.643 UT',$
                  '2001/10/03 04:24:49.211 UT','2001/10/03 04:24:53.259 UT',$
                  '2001/10/03 04:24:57.307 UT','2001/10/03 04:24:57.675 UT',$
                  '2001/10/03 04:27:14.571 UT','2001/10/03 04:27:16.043 UT',$
                  '2001/10/03 04:27:18.987 UT','2001/10/03 04:27:20.827 UT',$
                  '2001/10/03 04:27:22.667 UT','2001/10/03 04:27:37.387 UT',$
                  '2001/10/03 04:29:05.339 UT','2001/10/03 04:43:36.395 UT',$
                  '2001/10/03 04:43:42.283 UT','2001/10/03 04:46:21.627 UT',$
                  '2001/10/03 05:10:48.475 UT','2001/10/03 06:08:56.378 UT',$
                  '2001/10/03 06:08:56.746 UT','2001/10/03 08:40:09.050 UT',$
                  '2001/10/03 10:51:36.761 UT','2001/10/03 10:51:36.761 UT',$
                  '2001/10/03 11:21:43.625 UT','2001/10/03 11:18:09.833 UT',$
                  '2001/10/03 12:46:50.376 UT','2001/10/03 12:53:53.576 UT',$
                  '2001/10/03 12:56:27.032 UT','2001/10/03 13:03:12.568 UT',$
                  '2001/10/03 13:03:13.304 UT','2001/10/03 13:03:13.304 UT',$
                  '2001/10/03 13:10:10.984 UT','2001/10/03 13:10:12.824 UT',$
                  '2001/10/03 13:21:43.192 UT','2001/10/03 13:21:43.192 UT',$
                  '2001/10/03 13:44:43.928 UT','2001/10/03 14:45:09.096 UT',$
                  '2001/10/03 14:45:55.096 UT','2001/10/03 14:45:55.096 UT',$
                  '2001/10/03 14:45:55.464 UT','2001/10/03 14:45:55.832 UT',$
                  '2001/10/03 14:45:56.936 UT','2001/10/03 14:46:37.048 UT',$
                  '2001/10/03 14:46:45.880 UT','2001/10/03 14:46:54.712 UT',$
                  '2001/10/03 14:46:58.024 UT','2001/10/03 14:47:40.712 UT',$
                  '2001/10/03 14:47:57.272 UT','2001/10/03 14:47:57.272 UT',$
                  '2001/10/03 14:48:31.128 UT','2001/10/03 14:55:16.664 UT',$
                  '2001/10/03 16:10:55.943 UT','2001/10/03 18:42:18.551 UT',$
                  '2001/10/03 18:42:23.703 UT','2001/10/03 18:42:25.175 UT',$
                  '2001/10/03 18:44:58.631 UT','2001/10/03 20:08:42.934 UT',$
                  '2001/10/03 20:08:43.302 UT','2001/10/03 20:08:43.670 UT',$
                  '2001/10/03 20:46:43.798 UT','2001/10/03 23:03:02.597 UT',$
                  '2001/10/04 00:13:26.501 UT','2001/10/04 00:26:34.021 UT',$
                  '2001/10/04 03:08:07.508 UT','2001/10/04 03:21:23.860 UT',$
                  '2001/10/04 03:53:00.900 UT','2001/10/04 09:14:39.186 UT',$
                  '2001/10/04 09:15:20.770 UT','2001/10/04 09:15:21.138 UT',$
                  '2001/10/04 09:23:27.634 UT','2001/10/04 10:01:44.690 UT',$
                  '2001/10/04 10:10:53.010 UT' ]


; => For 10/24/2001 Event
whistler_times = ['2001/10/23 07:02:55.668 UT','2001/10/23 07:10:03.652 UT',$
                  '2001/10/23 08:30:13.412 UT','2001/10/23 08:47:09.092 UT',$
                  '2001/10/23 08:47:19.396 UT','2001/10/23 08:51:51.347 UT',$
                  '2001/10/23 08:58:03.027 UT','2001/10/23 09:23:38.691 UT',$
                  '2001/10/23 09:23:40.163 UT','2001/10/23 09:30:31.219 UT',$
                  '2001/10/23 09:59:41.795 UT','2001/10/23 10:59:03.667 UT',$
                  '2001/10/23 11:05:28.595 UT','2001/10/23 11:07:37.027 UT',$
                  '2001/10/23 11:18:22.499 UT','2001/10/23 21:22:13.932 UT',$
                  '2001/10/23 21:22:15.036 UT','2001/10/23 21:22:27.548 UT',$
                  '2001/10/23 21:56:15.229 UT','2001/10/23 21:56:15.964 UT',$
                  '2001/10/23 21:56:22.955 UT','2001/10/23 21:56:23.323 UT',$
                  '2001/10/23 22:04:32.763 UT','2001/10/23 22:08:46.315 UT',$
                  '2001/10/23 22:11:30.811 UT','2001/10/23 22:15:42.526 UT',$
                  '2001/10/23 22:25:11.084 UT','2001/10/23 22:25:11.820 UT',$
                  '2001/10/23 22:25:29.119 UT','2001/10/25 03:34:27.244 UT',$
                  '2001/10/25 03:37:04.013 UT' ]

eholes_times   = ['2001/10/23 07:04:31.364 UT','2001/10/23 07:04:43.876 UT',$
                  '2001/10/23 07:05:03.748 UT','2001/10/23 07:08:00.388 UT',$
                  '2001/10/23 07:09:50.420 UT','2001/10/23 07:10:13.972 UT',$
                  '2001/10/23 07:10:22.804 UT','2001/10/23 07:48:19.620 UT',$
                  '2001/10/23 07:48:20.724 UT','2001/10/23 07:48:21.460 UT',$
                  '2001/10/23 07:48:22.564 UT','2001/10/23 07:48:23.300 UT',$
                  '2001/10/23 07:48:24.404 UT','2001/10/23 07:48:24.772 UT',$
                  '2001/10/23 08:49:41.092 UT','2001/10/23 08:52:24.851 UT',$
                  '2001/10/23 08:52:25.587 UT','2001/10/23 08:52:33.683 UT',$
                  '2001/10/23 08:52:36.995 UT','2001/10/23 08:52:55.763 UT',$
                  '2001/10/23 08:53:04.227 UT','2001/10/23 08:56:11.171 UT',$
                  '2001/10/23 08:56:17.795 UT','2001/10/23 08:57:29.187 UT',$
                  '2001/10/23 08:57:47.955 UT','2001/10/23 08:57:48.323 UT',$
                  '2001/10/23 08:57:49.059 UT','2001/10/23 08:57:49.795 UT',$
                  '2001/10/23 08:58:09.667 UT','2001/10/23 09:14:50.627 UT',$
                  '2001/10/23 09:21:29.171 UT','2001/10/23 09:21:29.907 UT',$
                  '2001/10/23 09:21:40.947 UT','2001/10/23 09:29:02.179 UT',$
                  '2001/10/23 10:02:17.107 UT','2001/10/23 10:04:07.139 UT',$
                  '2001/10/23 10:11:55.971 UT','2001/10/23 10:28:56.067 UT',$
                  '2001/10/23 10:57:06.291 UT','2001/10/23 10:57:12.915 UT',$
                  '2001/10/23 10:58:32.035 UT','2001/10/23 11:05:52.899 UT',$
                  '2001/10/23 11:13:28.115 UT','2001/10/23 12:00:49.811 UT',$
                  '2001/10/23 16:37:39.121 UT','2001/10/23 16:43:40.129 UT',$
                  '2001/10/23 17:22:35.089 UT','2001/10/23 17:22:37.665 UT',$
                  '2001/10/23 17:22:38.769 UT','2001/10/23 19:07:33.041 UT',$
                  '2001/10/23 19:19:28.433 UT','2001/10/23 19:30:28.992 UT',$
                  '2001/10/23 19:35:40.688 UT','2001/10/23 19:49:55.552 UT',$
                  '2001/10/23 19:54:27.504 UT','2001/10/23 20:05:48.672 UT',$
                  '2001/10/23 20:11:32.384 UT','2001/10/23 20:11:58.144 UT',$
                  '2001/10/23 20:14:37.856 UT','2001/10/23 20:33:50.432 UT',$
                  '2001/10/23 20:34:21.712 UT','2001/10/23 20:36:09.904 UT',$
                  '2001/10/23 20:36:30.512 UT','2001/10/23 20:36:39.712 UT',$
                  '2001/10/23 20:36:40.448 UT','2001/10/23 20:36:53.696 UT',$
                  '2001/10/23 20:37:00.688 UT','2001/10/23 20:37:04.736 UT',$
                  '2001/10/23 20:37:12.096 UT','2001/10/23 20:37:14.304 UT',$
                  '2001/10/23 20:40:51.792 UT','2001/10/23 20:41:33.744 UT',$
                  '2001/10/23 20:42:13.856 UT','2001/10/23 23:07:45.315 UT',$
                  '2001/10/23 23:07:48.627 UT','2001/10/23 23:07:48.627 UT',$
                  '2001/10/23 23:07:49.363 UT','2001/10/23 23:07:49.731 UT',$
                  '2001/10/23 23:07:51.203 UT','2001/10/23 23:07:51.203 UT',$
                  '2001/10/23 23:07:54.515 UT','2001/10/23 23:13:47.795 UT',$
                  '2001/10/23 23:13:49.635 UT','2001/10/23 23:15:37.827 UT',$
                  '2001/10/23 23:40:35.294 UT','2001/10/23 23:40:40.446 UT',$
                  '2001/10/23 23:40:43.391 UT','2001/10/24 00:38:49.087 UT',$
                  '2001/10/24 00:39:44.655 UT','2001/10/24 00:39:45.391 UT',$
                  '2001/10/24 00:39:46.863 UT','2001/10/24 00:40:01.951 UT',$
                  '2001/10/24 00:40:02.319 UT','2001/10/24 00:40:03.423 UT',$
                  '2001/10/24 00:40:04.159 UT','2001/10/24 00:40:04.895 UT',$
                  '2001/10/24 00:40:05.263 UT','2001/10/24 00:46:22.831 UT',$
                  '2001/10/24 01:35:24.255 UT','2001/10/24 02:04:02.447 UT',$
                  '2001/10/24 02:23:05.823 UT','2001/10/24 02:23:06.559 UT',$
                  '2001/10/24 02:23:07.295 UT','2001/10/24 02:25:51.791 UT',$
                  '2001/10/24 02:26:01.359 UT','2001/10/24 02:28:42.910 UT',$
                  '2001/10/24 02:28:42.910 UT','2001/10/24 02:30:33.310 UT',$
                  '2001/10/24 02:45:54.414 UT','2001/10/24 04:10:03.742 UT',$
                  '2001/10/24 04:10:26.926 UT','2001/10/24 04:10:28.766 UT',$
                  '2001/10/24 04:11:54.878 UT','2001/10/24 04:12:01.870 UT',$
                  '2001/10/24 04:12:01.870 UT','2001/10/24 06:33:13.965 UT',$
                  '2001/10/24 06:33:16.541 UT','2001/10/24 06:33:17.277 UT',$
                  '2001/10/24 06:33:18.013 UT','2001/10/24 06:33:21.325 UT',$
                  '2001/10/24 06:33:21.325 UT','2001/10/24 06:33:22.061 UT',$
                  '2001/10/24 06:33:24.637 UT','2001/10/24 06:33:25.005 UT',$
                  '2001/10/24 06:33:25.005 UT','2001/10/24 06:33:28.317 UT',$
                  '2001/10/24 06:41:45.853 UT','2001/10/24 07:25:33.741 UT',$
                  '2001/10/24 07:45:42.253 UT','2001/10/24 08:15:10.493 UT',$
                  '2001/10/24 08:31:35.997 UT','2001/10/24 08:37:15.661 UT',$
                  '2001/10/24 10:07:55.068 UT','2001/10/24 10:51:32.652 UT',$
                  '2001/10/24 10:51:32.652 UT','2001/10/24 10:51:33.388 UT',$
                  '2001/10/24 14:48:33.643 UT','2001/10/24 16:45:07.114 UT',$
                  '2001/10/24 17:00:49.562 UT','2001/10/24 19:51:09.658 UT',$
                  '2001/10/24 20:04:52.874 UT','2001/10/24 20:04:53.242 UT',$
                  '2001/10/24 21:26:21.385 UT','2001/10/24 21:52:48.937 UT',$
                  '2001/10/24 21:56:51.449 UT','2001/10/24 22:29:12.649 UT',$
                  '2001/10/25 00:58:20.200 UT','2001/10/25 01:01:10.584 UT',$
                  '2001/10/25 01:15:57.464 UT','2001/10/25 01:20:36.776 UT',$
                  '2001/10/25 01:20:36.776 UT','2001/10/25 02:34:26.760 UT',$
                  '2001/10/25 02:50:31.288 UT','2001/10/25 02:50:35.704 UT',$
                  '2001/10/25 02:50:55.576 UT','2001/10/25 02:50:55.576 UT',$
                  '2001/10/25 02:50:56.312 UT','2001/10/25 03:15:09.911 UT',$
                  '2001/10/25 03:55:03.383 UT','2001/10/25 03:55:03.751 UT',$
                  '2001/10/25 04:59:22.231 UT','2001/10/25 04:59:22.231 UT',$
                  '2001/10/25 05:34:51.479 UT','2001/10/25 05:46:57.175 UT',$
                  '2001/10/25 07:03:09.206 UT','2001/10/25 07:06:01.798 UT',$
                  '2001/10/25 07:26:28.710 UT','2001/10/25 07:28:13.590 UT',$
                  '2001/10/25 08:29:12.246 UT','2001/10/25 08:29:14.454 UT' ]


; => For 10/10/2002 Event
whistler_times = ['2002/10/09 22:12:30.020 UT','2002/10/10 22:38:13.781 UT',$
                  '2002/10/09 22:38:15.988 UT','2002/10/09 22:38:24.085 UT',$
                  '2002/10/09 22:47:24.309 UT','2002/10/09 23:18:53.988 UT',$
                  '2002/10/10 00:12:12.276 UT','2002/10/10 01:00:57.140 UT',$
                  '2002/10/10 01:10:26.068 UT','2002/10/10 01:11:17.588 UT',$
                  '2002/10/10 01:14:15.700 UT','2002/10/10 01:23:42.420 UT',$
                  '2002/10/10 02:30:17.044 UT','2002/10/10 02:33:04.851 UT',$
                  '2002/10/10 02:33:04.867 UT','2002/10/10 02:33:08.531 UT',$
                  '2002/10/10 02:33:08.899 UT','2002/10/10 02:33:12.947 UT',$
                  '2002/10/10 02:33:17.011 UT','2002/10/10 02:33:17.731 UT',$
                  '2002/10/10 02:33:18.099 UT','2002/10/10 02:33:35.043 UT',$
                  '2002/10/10 02:33:37.987 UT','2002/10/10 02:33:49.763 UT',$
                  '2002/10/10 02:34:19.571 UT','2002/10/10 02:34:55.635 UT',$
                  '2002/10/10 02:34:58.947 UT','2002/10/10 02:35:04.083 UT',$
                  '2002/10/10 02:35:31.699 UT','2002/10/10 02:41:47.779 UT',$
                  '2002/10/10 02:41:50.739 UT','2002/10/10 02:44:20.883 UT',$
                  '2002/10/10 02:57:43.123 UT','2002/10/10 02:59:19.539 UT',$
                  '2002/10/10 02:59:19.907 UT','2002/10/10 03:24:47.843 UT',$
                  '2002/10/10 03:43:05.219 UT','2002/10/10 03:43:05.219 UT']
                  
eholes_times   = ['2002/10/10 03:28:26.067 UT','2002/10/10 03:28:26.435 UT',$
                  '2002/10/10 04:48:58.275 UT']


mts            = my_time_string(whistler_times,STR=1,FORM=1)
ymdb_whist     = mts.DATE_TIME
unix_whist     = mts.UNIX
mts            = my_time_string(eholes_times,STR=1,FORM=1)
ymdb_ehole     = mts.DATE_TIME
unix_ehole     = mts.UNIX


;-----------------------------------------------------------------------------------------
; => Or...
;-----------------------------------------------------------------------------------------
temp       = tds_whist_ehole_times(DATE=sdate[0],FIXFILE=fixfile)
ymdb_whist = temp.WHISTLER_T
unix_whist = temp.WHISTLER_UNX

ymdb_ehole = temp.SOLITARY_T
unix_ehole = temp.SOLITARY_UNX


;-----------------------------------------------------------------------------------------
;-----------------------------------------------------------------------------------------
bmag_2         = [124.55,124.55,125.34,126.66,131.34,118.66,120.72,126.75,125.66,$
                  124.32,125.10,129.54,131.98,131.89,131.94,132.73,133.43,133.45,$
                  133.69,133.78,134.00,133.64,133.42,134.21,133.99,133.83,133.79,$
                  133.80,133.80,136.96,137.02,138.55,137.05,102.66,102.66]
frlow_2        = [28d2,28d2,24d2,22d2,15d2,9d2,1d3,15d2,7d2,17d2,1d3,17d2,85d1,1d3,1d3,$
                  89d1,99d1,1d3,91d1,88d1,94d1,78d1,8d2,75d1,7d2,77d1,73d1,65d1,83d1,  $
                  59d1,51d1,19d2,2d3,15d2,15d2];,,,,,,]
frhigh_2       = [35d2,35d2,33d2,35d2,21d2,16d2,16d2,18d2,19d2,23d2,16d2,26d2,17d2,    $
                  16d2,16d2,18d2,16d2,17d2,17d2,16d2,15d2,15d2,16d2,19d2,17d2,18d2,    $
                  19d2,18d2,17d2,11d2,11d2,23d2,3d3,17d2,17d2];,,,,,,]

frlow  = [8d2,6d2,6d2,6d2,7d2,5d2,7d2,5d2,5d2,6d2,52d1,8d2,9d2,8d2,8d2,79d1,7d2,9d2,   $
          12d2,15d2,55d1,26d1,33d1,37d1,4d2,28d1,16d1];,,,,,,]
frhigh = [2d3,15d2,12d2,12d2,12d2,2d3,12d2,16d2,13d2,16d2,12d2,18d2,18d2,19d2,18d2,    $
          15d2,17d2,21d2,21d2,21d2,11d2,79d1,79d1,7d2,81d1,59d1,39d1];,,,,,,,,,,,,,,,,,,,,,,]

bmag   = [181.00,180.48,181.93,181.97,179.91,180.78,177.55,177.89,174.84,174.68,173.03,$
          167.26,167.31,167.50,167.85,167.97,168.08,162.97,168.58,164.71,164.69,168.59,$
          168.64,169.21,170.71,167.22,152.07];,,,,]

fce_const = qq/me/(2d0*!DPI)*1d-9
fce       = fce_const*(bmag)     ; => Cyclotron Frequency (Hz)

frra_low  = frlow/fce
frra_high = frhigh/fce

rescone_low  = ACOS(frra_low)*18d1/!DPI
rescone_high = ACOS(frra_high)*18d1/!DPI

rc_low       = rescone_low < rescone_high
rc_high      = rescone_low > rescone_high
resc_l_str = STRTRIM(STRING(FORMAT='(f8.2)',rc_low),2L)
resc_h_str = STRTRIM(STRING(FORMAT='(f8.2)',rc_high),2L)

resc_string = resc_l_str+'!Uo!N'+' - '+resc_h_str+'!Uo!N'
resc_str_pr = resc_l_str+'-'+resc_h_str
;-----------------------------------------------------------------------------------------
; => Constants and dummy variables
;-----------------------------------------------------------------------------------------
f      = !VALUES.F_NAN
d      = !VALUES.D_NAN
kB     = 1.380658d-23      ; -Boltzmann Constant (J/K)
muo    = 4d0*!DPI*1d-7     ; -Permeability of free space (N/A^2 or H/m)
K_eV   = 1.160474d4        ; -Conversion = degree Kelvin/eV
epo    = 8.854187817d-12   ; -Permittivity of free space (F/m)
muo    = 4d0*!DPI*1d-7     ; -Permeability of free space (N/A^2 or H/m)
me     = 9.1093897d-31     ; -Electron mass (kg)
mp     = 1.6726231d-27     ; -Proton mass (kg)
qq     = 1.60217733d-19    ; -Fundamental charge (C)
c      = 2.99792458d8      ; -Speed of light in vacuum (m/s)
c2     = (c*1d-3)^2        ; -" " squared (km/s)^2
me_ev  = 0.5109906d6       ; -Electron mass in eV/c^2
me_3dp = me_ev/c2          ; -Electron mass [eV/(km/s)^2]
mp_ev  = 938.27231d6       ; -Proton mass in eV/c^2
mp_3dp = mp_ev/c2          ; -Proton mass [eV/(km/s)^2]
;-----------------------------------------------------------------------------------------
; => fix Pesa Low data
;-----------------------------------------------------------------------------------------
get_data,'N_i2',DATA=ions,DLIM=dlim
idens      = ions.Y
test       = idens
IF (date EQ '111398') THEN i_max = 350.
IF (date EQ '040900') THEN i_max = 100.
IF (date EQ '050300') THEN i_max = 150.  ; => never gets above this
IF (date EQ '052600') THEN i_max = 150.  ; => never gets above this
IF (date EQ '061000') THEN i_max = 150.  ; => never gets above this
IF (date EQ '062600') THEN i_max = 150.  ; => never gets above this
IF (date EQ '071000') THEN i_max = 150.  ; => never gets above this
IF (date EQ '101002') THEN i_max = 950.  ; => never gets above this
badd       = WHERE(idens GT i_max,bdd,COMPLEMENT=goodd)
IF (bdd GT 0L) THEN test[badd] = f
test2      = interp(test[goodd],ions.X[goodd],ions.X,/NO_EXTRAP)
store_data,'N_i2',DATA={X:ions.X,Y:test2},DLIM=dlim

tbad_o     = [time_double('1998-10-26/07:50:00'),time_double('1998-10-26/12:30:00')]
tbad_o     = [time_double('1998-11-13/15:30:00'),time_double('1998-11-13/21:30:00')]
tbad_o     = [time_double('1998-12-14/09:00:00'),time_double('1998-12-15/08:00:00')]
tbad_o     = [time_double('2000-04-10/01:40:00'),time_double('2000-04-10/05:30:00')]
tbad_o     = [time_double('2000-05-03/00:00:00'),time_double('2000-05-03/05:00:00')]
tbad_o     = [time_double('2000-05-26/04:00:00'),time_double('2000-05-25/21:30:00')]
tbad_o     = [time_double('2000-06-10/08:00:00'),time_double('2000-06-10/16:00:00')]
tbad_o     = [time_double('2000-06-26/18:00:00'),time_double('2000-06-26/21:30:00')]
tbad_o     = [time_double('2000-07-10/00:00:00'),time_double('2000-07-10/06:00:00')]
tbad_o     = [time_double('2000-07-23/07:00:00'),time_double('2000-07-23/12:00:00')]
tbad_o     = [time_double('2000-08-03/22:00:00'),time_double('2000-08-04/04:00:00')]
tbad_o     = [time_double('2000-08-15/21:00:00'),time_double('2000-08-16/03:00:00')]
tbad_o     = [time_double('2001-10-03/07:59:00'),time_double('2001-10-04/05:00:00')]
tbad_o     = [time_double('2001-10-23/11:00:00'),time_double('2001-10-24/21:00:00')]
tbad_o     = [time_double('2002-10-09/23:00:00'),time_double('2002-10-10/03:40:00')]

get_data,'sc_pot_2',DATA=scpots,DLIM=dlimsp
scpot      = scpots.Y
badscp     = WHERE(scpots.X LT tbad_o[1] AND scpots.X GT tbad_o[0] AND scpot LT 10.,bdsp)
;IF (bdsp GT 0L) THEN scpot[badscp] = 12.
IF (bdsp GT 0L) THEN scpot[badscp] = 15.

sm_scpot   = SMOOTH(scpot,5L,/EDGE_TRUNCATE,/NAN)
store_data,'sc_pot_3',DATA={X:scpots.X,Y:sm_scpot},DLIM=dlimsp
nnw = tnames()
options,nnw,"YSTYLE",1
options,nnw,"PANEL_SIZE",2.
options,nnw,'XMINOR',5
options,nnw,'XTICKLEN',0.04


dens_whist = interp(test2,ions.X,unix_whist,/NO_EXTRAP)
fpe_const  = SQRT(qq^2*1e6/(me*epo))/(2d0*!DPI)
fpe_whist  = fpe_const[0]*SQRT(dens_whist)          ; => Plasma Frequency (Hz)

bmag_whist = interp(bmag4,t3x,unix_whist,/NO_EXTRAP)
fce_const  = 1d-9*qq/me/(2d0*!DPI)
fce_whist  = fce_const[0]*bmag_whist

nwhist     = N_ELEMENTS(unix_whist)
f_whist    = DINDGEN(nwhist)*(1d4 - 1d2)/(nwhist - 1L) + 1d2  ; => dummy array of whistler freqs
V_Ae       = (bmag_whist*1d-9)^2/(muo*dens_whist*1d6*me)      ; => Electron Alfven speed (m/s)^2
f_ratio    = DBLARR(nwhist,nwhist)                            ; => e Cyclotron to wave freq.
FOR j=0L, nwhist - 1L DO BEGIN $
  FOR k=0L, nwhist - 1L DO BEGIN $
    f_ratio[j,k] = fce_whist[j]/f_whist[k]

; => Propagation angles (deg)
theta_kB   = DINDGEN(nwhist)*((8d1 - 2d1)*!DPI/18d1)/(nwhist - 1L) + (2d1)*!DPI/18d1

cold_vph   = DBLARR(nwhist,nwhist,nwhist)  ; => Whistler Vph (km/s) [j-fce,k-f_w,i-theta]
FOR j=0L, nwhist - 1L DO BEGIN $
  FOR k=0L, nwhist - 1L DO BEGIN $
    FOR i=0L, nwhist - 1L DO BEGIN $
      cold_vph[j,k,i] = SQRT(V_Ae[j]*(f_ratio[j,k]*COS(theta_kB[i]) - 1d0)/f_ratio[j,k]^2)

n_cold_vph = DBLARR(nwhist,nwhist,nwhist)  ; => Whistler Vph/V_Ae
FOR j=0L, nwhist - 1L DO BEGIN $
  n_cold_vph[j,*,*] = cold_vph[j,*,*]/SQRT(V_Ae[j])


omst = '!7x!3'
omms = '!7X!3'
thes = '!7h!3'
ccs  = LINDGEN(50)*(250L - 30L)/49L + 30L
yttl = omms[0]+'!Dce!N'+'/'+omst[0]
xttl = thes[0]+' (!Uo!N)'
vphs = 'V!Dph!N/V!DAe!N'

cstr = {C_COLORS:ccs,NLEVELS:50,YSTYLE:1,XSTYLE:1,YTITLE:yttl,XTITLE:xttl,FILL:1}
CONTOUR,REFORM(n_cold_vph[*,10,*]),theta_kB*18d1/!DPI,f_ratio[*,10],_EXTRA=cstr

FOR j=0L, nwhist - 1L DO BEGIN $
  ttl_tm = whistler_times[j]                                                      & $
  ttl_pr = 'Whistler at: '+ttl_tm[0]                                              & $
  vphra  = minmax(REFORM(n_cold_vph[j,*,*]))                                      & $
  vphn   = REFORM(n_cold_vph[j,*,*])                                              & $
  vph_st = STRTRIM(STRING(FORMAT='(f12.4)',vphra),2)                              & $
  v_stra = vph_st[0]+' < '+vphs[0]+' < '+vph_st[1]                                & $
  tttl   = ttl_pr[0]+' for '+v_stra[0]                                            & $
  CONTOUR,vphn,theta_kB*18d1/!DPI,f_ratio[j,*],_EXTRA=cstr,TITLE=tttl             & $
  WAIT,0.5


mts        = my_time_string(whistler_times,STR=1,FORM=1)
ymdb_whist = mts.DATE_TIME
ft_whist   = mts.TIME_N
w_dates    = STRMID(ymdb_whist[*],0L,4L)+'-'+STRMID(ymdb_whist[*],5L,2L)+'-'+STRMID(ymdb_whist[*],8L,2L)
w_ymdb     = w_dates+'_'+ft_whist
f_pref     = 'Whistler_phase_speeds_f-ratio_theta_'
vae_pref   = 'V!DAe!N = '
FOR j=0L, nwhist - 1L DO BEGIN $
  ttl_tm = whistler_times[j]                                                      & $
  ttl_pr = 'Whistler at: '+ttl_tm[0]                                              & $
  vphra  = minmax(REFORM(n_cold_vph[j,*,*]))                                      & $
  vphn   = REFORM(n_cold_vph[j,*,*])                                              & $
  vph_st = STRTRIM(STRING(FORMAT='(f12.4)',vphra),2)                              & $
  v_stra = vph_st[0]+' < '+vphs[0]+' < '+vph_st[1]                                & $
  v_aest = vae_pref[0]+STRTRIM(STRING(FORMAT='(f12.2)',SQRT(V_Ae[j])*1d-3),2)+' km/s'  & $
  str_element,cstr,'XTITLE',xttl[0]+'  ('+v_aest[0]+')',/ADD_REPLACE              & $
  tttl   = ttl_pr[0]+' for '+v_stra[0]                                            & $
  popen,f_pref[0]+w_ymdb[j],/LAND                                                 & $
    CONTOUR,vphn,theta_kB*18d1/!DPI,f_ratio[j,*],_EXTRA=cstr,TITLE=tttl           & $
  pclose


cold_vph   = DBLARR(nwhist,nwhist)                   ; => Whistler Vph (km/s)
FOR j=0L, nwhist - 1L DO BEGIN $
  FOR k=0L, nwhist - 1L DO BEGIN $
    cold_vph[k,j] = SQRT(c^2*f_whist[k]*(fce_whist[j] - f_whist[k])/fpe_whist[j]^2)*1d-3


fpe_fce    = fpe_whist/fce_whist
sp         = SORT(fpe_fce)
fpe_fce2   = fpe_fce[sp]
cold_vph2  = cold_vph[*,sp]

omst = '!7x!3'
omms = '!7X!3'
ccs  = LINDGEN(50)*(250L - 30L)/49L + 30L
yttl = omst[0]+'!Dpe!N'+'/'+omms[0]+'!Dce!N'
xttl = omst[0]+' (Hz)'

cstr = {C_COLORS:ccs,NLEVELS:50,YSTYLE:1,XSTYLE:1,YTITLE:yttl,XTITLE:xttl}
CONTOUR,cold_vph2,f_whist,fpe_fce2,_EXTRA=cstr


; => Cut-off frequencies of R and L mode waves in a cold plasma
f_cut_off_R = fce/2d0 + SQRT((fce/2d0)^2 + (fpe)^2)
f_cut_off_L = -1d0*fce/2d0 + SQRT((fce/2d0)^2 + (fpe)^2)
;-----------------------------------------------------------------------------------------
; => Look at TDSS data
;-----------------------------------------------------------------------------------------
date    = '040900'
date    = '052600'
my_tdss = get_wind_tds_data(DATE=date,/TDSS)

; => Events with at least 3-Vectors of one field type
;
; 2000/04/10 03:10:42.599 UT  [E-fields]
; 2000/04/10 03:14:11.255 UT  [E-fields]
; 2000/04/10 03:48:25.063 UT  [E-fields]
;
; 2000/05/25 22:37:54.041 UT  [B-fields]
; 2000/05/25 22:43:35.174 UT  [B-fields]
; 


k      = [2L,0L,3L]     ; => For 2000/05/25 22:37:54.041 UT  [B-fields]
k      = [6L,7L,4L]     ; => For 2000/05/25 22:43:35.174 UT  [B-fields]
k      = [34L,33L,31L]  ; => For 2000/04/10 03:10:42.599 UT  [E-fields]
k      = [36L,35L,38L]  ; => For 2000/04/10 03:14:11.255 UT  [E-fields]
k      = [48L,47L,46L]  ; => For 2000/04/10 03:48:25.063 UT  [E-fields]

j      = k[0]
dt     = REFORM(my_tdss.DT[j])*1d-3  ; => Event length (s)
nsps   = (N_ELEMENTS(TRANSPOSE(my_tdss.EFIELD[0,*])) - 1L)/dt[0]
temp   = TRANSPOSE(my_tdss.EFIELD[k,*])
times  = TRANSPOSE(my_tdss.TIME[k,*])*1d-3
scet   = (REFORM(my_tdss.SCET[j]))[0]
to     = time_double(scet)
times += to  ; => now Unix times

mfc1L = 0d0
mfc1H = 1d2
; => If E-fields
efmf1 = vector_bandpass(temp,nsps,mfc1L,mfc1H,/MIDF)
efhf1 = vector_bandpass(temp,nsps,mfc1L,mfc1H,/HIGHF)
; => If B-fields
mfmf1 = vector_bandpass(temp,nsps,mfc1L,mfc1H,/MIDF)
mfhf1 = vector_bandpass(temp,nsps,mfc1L,mfc1H,/HIGHF)


;data  = mfhf1
data  = efhf1
tx    = REFORM(times[*,0])
sat   = 'W'
coord = 'SC'

htr_mv_plot,DATE='052500',CURR=current,MYMAG={X:tx,Y:data},FCUTOFF=[1d2,2d3],$
            SAT=sat,COORD=coord,FIELD='B'

htr_mv_plot,DATE='041000',CURR=current,MYMAG={X:tx,Y:data},FCUTOFF=[1d2,2d3],$
            SAT=sat,COORD=coord,FIELD='E'



;-----------------------------------------------------------------------------------------
; => Constants and dummy variables
;-----------------------------------------------------------------------------------------
f      = !VALUES.F_NAN
d      = !VALUES.D_NAN
kB     = 1.380658d-23      ; -Boltzmann Constant (J/K)
muo    = 4d0*!DPI*1d-7     ; -Permeability of free space (N/A^2 or H/m)
K_eV   = 1.160474d4        ; -Conversion = degree Kelvin/eV
epo    = 8.854187817d-12   ; -Permittivity of free space (F/m)
muo    = 4d0*!DPI*1d-7     ; -Permeability of free space (N/A^2 or H/m)
me     = 9.1093897d-31     ; -Electron mass (kg)
mp     = 1.6726231d-27     ; -Proton mass (kg)
qq     = 1.60217733d-19    ; -Fundamental charge (C)
c      = 2.99792458d8      ; -Speed of light in vacuum (m/s)
c2     = (c*1d-3)^2        ; -" " squared (km/s)^2
me_ev  = 0.5109906d6       ; -Electron mass in eV/c^2
me_3dp = me_ev/c2          ; -Electron mass [eV/(km/s)^2]
mp_ev  = 938.27231d6       ; -Proton mass in eV/c^2
mp_3dp = mp_ev/c2          ; -Proton mass [eV/(km/s)^2]
;-----------------------------------------------------------------------------------------
; => Look at EL moments in Magnetosphere
;-----------------------------------------------------------------------------------------
t_o       = ['1998-11-13/15:00:00','1998-11-13/22:30:00'] 
t_o       = ['2000-04-09/20:20:00','2000-04-10/14:00:00']
t_o       = ['2000-05-02/21:00:00','2000-05-03/10:00:00']
t_o       = ['2000-05-25/20:50:00','2000-05-26/04:20:00']
t_o       = ['2000-06-10/01:00:00','2000-06-11/03:00:00']
t_o       = ['2000-06-26/13:00:00','2000-06-27/02:00:00']
t_o       = ['2000-07-09/18:30:00','2000-07-10/12:00:00']
t_o       = ['2000-07-23/04:40:00','2000-07-24/22:00:00']
t_o       = ['2000-08-03/16:30:00','2000-08-04/22:00:00']
t_o       = ['2000-08-15/13:00:00','2000-08-17/16:00:00']
t_o       = ['2001-10-03/04:00:00','2001-10-04/11:00:00']
t_o       = ['2001-10-23/07:00:00','2001-10-25/09:00:00']
t_o       = ['2002-10-09 22:00:00','2002-10-10 05:00:00']
t_u       = time_double(t_o)
el_times  = REFORM(ael.TIME)
elb_times = REFORM(aelb.TIME)
g_el      = WHERE(el_times LE MAX(t_u,/NAN) AND el_times GE MIN(t_u,/NAN),g_l)
g_elb     = WHERE(elb_times LE MAX(t_u,/NAN) AND elb_times GE MIN(t_u,/NAN),g_lb)
eh_times  = REFORM(aeh.TIME)
ehb_times = REFORM(aehb.TIME)
g_eh      = WHERE(eh_times LE MAX(t_u,/NAN) AND eh_times GE MIN(t_u,/NAN),g_h)
g_ehb     = WHERE(ehb_times LE MAX(t_u,/NAN) AND ehb_times GE MIN(t_u,/NAN),g_hb)

IF (g_l GT 0)  THEN gael  = ael[g_el]   ELSE gael  = 0
IF (g_lb GT 0) THEN gaelb = aelb[g_elb] ELSE gaelb = 0
IF (g_h GT 0)  THEN gaeh  = aeh[g_eh]   ELSE gaeh  = 0
IF (g_hb GT 0) THEN gaehb = aehb[g_ehb] ELSE gaehb = 0
print, g_l, g_lb
; => For 1998-11-13/15:00:00 - 1998-11-13/22:30:00
;         279          95
; => For 2000-04-09/20:20:00 - 2000-04-10/14:00:00
;         636         208
; => For 2000-05-02/21:00:00 - 2000-05-03/10:00:00
;         469          98
; => For 2000-05-25/20:50:00 - 2000-05-26/04:20:00
;         271          96
; => For 2000-06-10/01:00:00 - 2000-06-11/03:00:00
;         937       0
; => For 2000-06-26/13:00:00 - 2000-06-27/02:00:00
;         463       0
; => For 2000-07-09/18:30:00 - 2000-07-10/12:00:00
;         614         192
; => For 2000-07-23/04:40:00 - 2000-07-24/22:00:00
;        1524         653
; => For 2000-08-03/16:30:00 - 2000-08-04/22:00:00
;        1077         389
; => For 2000-08-15/13:00:00 - 2000-08-17/16:00:00
;        1858         387
; => For 2002-10-09/22:00:00 - 2002-10-10/05:00:00
;         225          96
print, g_h, g_hb
; => For 1998-11-13/15:00:00 - 1998-11-13/22:30:00
;         279       0
; => For 2000-04-09/20:20:00 - 2000-04-10/14:00:00
;         616         217
; => For 2000-05-02/21:00:00 - 2000-05-03/10:00:00
;         469         101
; => For 2000-05-25/20:50:00 - 2000-05-26/04:20:00
;         271         102
; => For 2000-06-10/01:00:00 - 2000-06-11/03:00:00
;         904       0
; => For 2000-06-26/13:00:00 - 2000-06-27/02:00:00
;         427       0
; => For 2000-07-09/18:30:00 - 2000-07-10/12:00:00
;         588         202
; => For 2000-07-23/04:40:00 - 2000-07-24/22:00:00
;        1481         682
; => For 2000-08-03/16:30:00 - 2000-08-04/22:00:00
;        1058         403
; => For 2000-08-15/13:00:00 - 2000-08-17/16:00:00
;        1836         401
; => For 2002-10-09/22:00:00 - 2002-10-10/05:00:00
;         204         101

add_scpot,gael,'sc_pot_3'
add_scpot,gaelb,'sc_pot_3'
add_scpot,gaeh,'sc_pot_3'
add_scpot,gaehb,'sc_pot_3'

moments_array_3dp,PLM=gael,PLBM=gaelb,AVGTEMP=avtempe,T_PERP=tperp_e, $
                  T_PARA=tpara_e,V_THERM=vtherme,VELOCITY=elb_vels,   $
                  PRESSURE=press_e,MOMS=moms,/TO_TPLOT,SUFFX='el'

moments_array_3dp,PLM=gaeh,PLBM=gaehb,AVGTEMP=avtempeh,T_PERP=tperp_eh, $
                  T_PARA=tpara_eh,V_THERM=vthermeh,VELOCITY=ehb_vels,   $
                  PRESSURE=press_eh,MOMS=momsh,/TO_TPLOT,SUFFX='eh'

add_vsw2,gael,'Velocity_el'
add_vsw2,gaelb,'Velocity_el'

add_vsw2,gaeh,'Velocity_eh'
add_vsw2,gaehb,'Velocity_eh'

get_data,'Velocity_el',DATA=el_vel
tvels = el_vel.Y*1e-3
store_data,'Velocity_el',DATA={X:el_vel.X,Y:tvels}
get_data,'Velocity_eh',DATA=el_vel
tvels = el_vel.Y*1e-3
store_data,'Velocity_eh',DATA={X:el_vel.X,Y:tvels}
DELVAR,tvels,el_vel
options,'Velocity_el','YTITLE','V!Del!N (1000 km/s)'
options,'Velocity_eh','YTITLE','V!Deh!N (1000 km/s)'
options,'Velocity_eh','MAX_VALUE',5e0
options,'Velocity_eh','MIN_VALUE',-5e0



stime  = STRMID(t_o[*],0,10)+'_'+STRMID(t_o[*],11,2)+STRMID(t_o[*],14,2)
sfname = stime[0]+'_'+stime[1]+'_TDS-Locations_eholes-blue_whistlers-red'

nna = [nn0,'Wind_Radial_Distance','Wind_L-Shell','Wind_Invariant_Latitude']
;nna = [nn0,'Wind_GSM_Latitude','Wind_GSM_Longitude','N_i2']
;nna = [nn0,'Wind_GSE_Latitude','Wind_GSE_Longitude','N_i2']
;nna    = [nn0,'Tanisotropy_el','Tanisotropy_eh']
;nna    = [nn0,'N_i2','T_avg_el','T_avg_eh']
;nna    = [nn0,'N_i2','Velocity_el','Velocity_eh']
options,'N_i2','YLOG',1
;nna = [nn0,'Wind_GSE_Latitude','Wind_GSE_Longitude','N_i2']
;nna = [nn0,'Wind_GSM_Latitude','Wind_GSM_Longitude','N_i2']
;nna = [nn0,'N_i2']
;nna    = [nn0,'N_i2','Tanisotropy_el','Tanisotropy_eh']
;nna    = [nn0,'N_i2','T_avg_el','T_avg_eh']
;nna    = [nn0,'N_i2','Velocity_el','Velocity_eh']

tplot,nna
time_bar,unix_whist,VARNAME=nna,COLOR=250L
time_bar,unix_ehole,VARNAME=nna,COLOR=50L

pref   = 'MFI3s-RadialDistance-Lshell-InvLat_'
;pref   = 'MFI3s-GSM-Lat-Long_Ni_'
;pref   = 'MFI3s-GSE-Lat-Long_Ni_'
;pref   = 'MFI3s-GSE_Tanis-EL-EH_'
;pref   = 'MFI3s-GSE_Ni_Tavg-EL-EH_'
;pref   = 'MFI3s-GSE_Ni_Velocity-EL-EH_'
;pref   = 'MFI3s-GSE-Lat-Long_Ni-LogScale_'
;pref   = 'MFI3s-GSM-Lat-Long_Ni-LogScale_'
;pref   = 'MFI3s-GSE_Ni-LogScale_'
;pref   = 'MFI3s-GSE_Ni-LogScale_Tanis-EL-EH_'
;pref   = 'MFI3s-GSE_Ni-LogScale_Tavg-EL-EH_'
;pref   = 'MFI3s-GSE_Ni-LogScale_Velocity-EL-EH_'

popen,pref+sfname,/port
  tplot,nna
  time_bar,unix_whist,VARNAME=nna,COLOR=250L
  time_bar,unix_ehole,VARNAME=nna,COLOR=50L
pclose

temp_to_tplot,t_o,unix_whist,unix_ehole
;-----------------------------------------------------------------------------------------
; => Print special event to ASCII file
;-----------------------------------------------------------------------------------------
temp = gael[247]   ; => EL at 2000-04-10/03:11:46
del  = convert_vframe(temp,/INTERP)
pd   = pad(del,NUM_PA=24)
df    = distfunc(pd.ENERGY,pd.ANGLES,MASS=pd.MASS,DF=pd.DATA)
extract_tags,del,df

ngrid   = 30
vlim    = 2d4
vout    = (DINDGEN(2L*ngrid + 1L)/ngrid - 1L) * vlim
cont2d,del,NGRID=30,VLIM=2d4,/HEAT_F,/V_TH,/ANI_TEMP,MYONEC=temp

dfpar   = distfunc(vout,0.,PARAM=del)
dfper   = distfunc(0.,vout,PARAM=del)
ndf     = N_ELEMENTS(dfpar)

mform   = '(f12.3,2e20.8)'
fname   = 'EL_2000-04-10_031146_para-perp.txt'
OPENW,gunit,fname,/GET_LUN
  FOR j=0L, ndf - 1L DO BEGIN $
    PRINTF,gunit,FORMAT=mform,vout[j],dfpar[j],dfper[j]
FREE_LUN,gunit


temp   = gaeh[226]   ; => EH at 2000-04-10/03:11:46
ngrid  = 20
vlim   = 6d4
vout   = (DINDGEN(2L*ngrid + 1L)/ngrid - 1L) * vlim
ns     = 3
add_df2d_to_ph,temp,VLIM=vlim,NGRID=ngrid,VBROT=test_n,NSMOOTH=ns
dfpara = SMOOTH(tad.DF_PARA,3L,/EDGE_TRUNCATE,/NAN)
dfperp = SMOOTH(tad.DF_PERP,3L,/EDGE_TRUNCATE,/NAN)

mform   = '(f12.3,2e20.8)'
fname   = 'EH_2000-04-10_031146_para-perp.txt'
OPENW,gunit,fname,/GET_LUN
  FOR j=0L, ndf - 1L DO BEGIN $
    PRINTF,gunit,FORMAT=mform,vout[j],dfpara[j],dfperp[j]
FREE_LUN,gunit


; => Adjust SC Potential to 28 eV
temp = gael[111]   ; => EL at 2000-04-09/23:25:17
temp.SC_POT = 28.0
del  = convert_vframe(temp,/INTERP)
bad   = WHERE(del.ENERGY[*,0] LE del.SC_POT,bd)
IF (bd GT 0) THEN del.DATA[bad,*] = f
pd   = pad(del,NUM_PA=17)
df    = distfunc(pd.ENERGY,pd.ANGLES,MASS=pd.MASS,DF=pd.DATA)
extract_tags,del,df

ngrid   = 30
vlim    = 2d4
vout    = (DINDGEN(2L*ngrid + 1L)/ngrid - 1L) * vlim
dfpar   = distfunc(vout,0.,PARAM=del)
dfper   = distfunc(0.,vout,PARAM=del)
ndf     = N_ELEMENTS(dfpar)

mform   = '(f12.3,2e20.8)'
fname   = 'EL_2000-04-09_232517_para-perp.txt'
OPENW,gunit,fname,/GET_LUN
  FOR j=0L, ndf - 1L DO BEGIN $
    PRINTF,gunit,FORMAT=mform,vout[j],dfpar[j],dfper[j]
FREE_LUN,gunit

;-----------------------------------------------------------------------------------------
; => Look at special event
;-----------------------------------------------------------------------------------------
temp = gael[111]   ; => EL at 2000-04-09/23:25:17
del  = convert_vframe(temp,/INTERP)
bad   = WHERE(del.ENERGY[*,0] LE del.SC_POT,bd)
IF (bd GT 0) THEN del.DATA[bad,*] = f
pd   = pad(del,NUM_PA=24)
df    = distfunc(pd.ENERGY,pd.ANGLES,MASS=pd.MASS,DF=pd.DATA)
extract_tags,del,df
; => Plot values for nothing below SC Potential
cont2d,del,NGRID=30,VLIM=2d4,/HEAT_F,/V_TH,/ANI_TEMP,MYONEC=temp

temp = gael[111]   ; => EL at 2000-04-09/23:25:17
del2 = convert_vframe(temp,/INTERP)
pd   = pad(del2,NUM_PA=24)
df    = distfunc(pd.ENERGY,pd.ANGLES,MASS=pd.MASS,DF=pd.DATA)
extract_tags,del2,df

; => Plot values for interpolation below SC Potential
cont2d,del2,NGRID=30,VLIM=2d4,/HEAT_F,/V_TH,/ANI_TEMP,MYONEC=temp

; => Adjust SC Potential to 28 eV
temp = gael[111]   ; => EL at 2000-04-09/23:25:17
temp.SC_POT = 28.0
del  = convert_vframe(temp,/INTERP)
bad   = WHERE(del.ENERGY[*,0] LE del.SC_POT,bd)
IF (bd GT 0) THEN del.DATA[bad,*] = f
pd   = pad(del,NUM_PA=17)
df    = distfunc(pd.ENERGY,pd.ANGLES,MASS=pd.MASS,DF=pd.DATA)
extract_tags,del,df
; => Plot values for nothing below SC Potential
cont2d,del,NGRID=30,VLIM=2d4,/HEAT_F,/V_TH,/ANI_TEMP,MYONEC=temp
;-----------------------------------------------------------------------------------------
; => Electron Distributions
;-----------------------------------------------------------------------------------------
ngrid   = 30
vlim    = 2d4
vout    = (DINDGEN(2L*ngrid + 1L)/ngrid - 1L) * vlim
dfdir   = '~/Desktop/3DP_contours/'+date[0]+'/PS_EL/'
pddir   = '~/Desktop/3DP_contours/'+date[0]+'/PADS_EL/'
mtsel   = my_time_string(gael.TIME,UNIX=1)
ymdels  = mtsel.DATE_TIME
ymdb    = ymdels
UTtime  = STRMID(ymdb[*],11L,2L)+STRMID(ymdb[*],14L,2L)+$
          STRMID(ymdb[*],17L,2L)+STRMID(ymdb[*],19L,3L)
gdate   = STRMID(ymdb[*],0L,10L)
dfsuff  = '_17PAs-30Grids-one-count_vtherm-taniso-heatf_interp-no-low_DF'
pdsuff  = '_17PAs-30Grids-7-Highest-Energies_interp-no-low_PAD'
nel     = N_ELEMENTS(gael)
FOR j=0L, nel - 1L DO BEGIN                                                         $
  dat   = gael[j]                                                                 & $
  del   = convert_vframe(dat,/INTERP)                                             & $
  bad   = WHERE(del.ENERGY[*,0] LE del.SC_POT,bd)                                 & $
  IF (bd GT 0) THEN del.DATA[bad,*] = f                                           & $
  pd    = pad(del,NUM_PA=17)                                                      & $
  df    = distfunc(pd.ENERGY,pd.ANGLES,MASS=pd.MASS,DF=pd.DATA)                   & $
  extract_tags,del,df                                                             & $
  pltn2 = pddir[0]+'el_'+gdate[j]+'_'+UTtime[j]+pdsuff[0]                         & $
  popen,pltn2,/port                                                               & $
    my_padplot_both,pd,UNITS='flux',EBINS=[0L,6L]                                 & $
  pclose                                                                          & $
  pltn1  = dfdir+'el_'+gdate[j]+'_'+UTtime[j]+dfsuff[0]                           & $
  popen,pltn1,/port                                                               & $
    cont2d,del,NGRID=30,VLIM=2d4,/HEAT_F,/V_TH,/ANI_TEMP,MYONEC=dat               & $
  pclose



ngrid   = 30
vlim    = 2d4
vout    = (DINDGEN(2L*ngrid + 1L)/ngrid - 1L) * vlim
dfdir   = '~/Desktop/3DP_contours/'+date[0]+'/PS_ELB/'
pddir   = '~/Desktop/3DP_contours/'+date[0]+'/PADS_ELB/'
mtsel   = my_time_string(gaelb.TIME,UNIX=1)
ymdels  = mtsel.DATE_TIME
ymdb    = ymdels
UTtime  = STRMID(ymdb[*],11L,2L)+STRMID(ymdb[*],14L,2L)+$
          STRMID(ymdb[*],17L,2L)+STRMID(ymdb[*],19L,3L)
gdate   = STRMID(ymdb[*],0L,10L)
dfsuff  = '_17PAs-30Grids-one-count_vtherm-taniso-heatf_interp-no-low_DF'
pdsuff  = '_17PAs-30Grids-7-Highest-Energies_interp-no-low_PAD'
nelb    = N_ELEMENTS(gaelb)
FOR j=0L, nelb - 1L DO BEGIN                                                        $
  dat   = gaelb[j]                                                                & $
  del   = convert_vframe(dat,/INTERP)                                             & $
  bad   = WHERE(del.ENERGY[*,0] LE del.SC_POT,bd)                                 & $
  IF (bd GT 0) THEN del.DATA[bad,*] = f                                           & $
  pd    = pad(del,NUM_PA=17)                                                      & $
  df    = distfunc(pd.ENERGY,pd.ANGLES,MASS=pd.MASS,DF=pd.DATA)                   & $
  extract_tags,del,df                                                             & $
  pltn2 = pddir[0]+'elb_'+gdate[j]+'_'+UTtime[j]+pdsuff[0]                        & $
  popen,pltn2,/port                                                               & $
    my_padplot_both,pd,UNITS='flux',EBINS=[0L,6L]                                 & $
  pclose                                                                          & $
  pltn1  = dfdir+'elb_'+gdate[j]+'_'+UTtime[j]+dfsuff[0]                          & $
  popen,pltn1,/port                                                               & $
    cont2d,del,NGRID=30,VLIM=2d4,/HEAT_F,/V_TH,/ANI_TEMP,MYONEC=dat               & $
  pclose

;-----------------------------------------------------------------------------------------
; => Look at EL and EH DFs in Magnetosphere
;-----------------------------------------------------------------------------------------
ngrid = 20
vlim  = 6d4
dat   = gaeh[15]  ; => Paul's Event 2000-04-09 at 23:25:17 UT
eh_cont3d,dat,VLIM=vlim,NGRID=ngrid,NSMOOTH=3,/SM_CUTS

ngrid = 30
vlim  = 2d4
dat   = gael[15]  ; => Paul's Event 
eh_cont3d,dat,VLIM=vlim,NGRID=ngrid,NSMOOTH=0,/SM_CUTS


; => Find elements of non-burst (nb) and burst (yb) structures near whistler TDS samples
test0 = bracket(gael.time,unix_whist)
test1 = bracket(gaelb.time,unix_whist)

winds_111398_nb = [LINDGEN(3L)+52L,LINDGEN(3L)+60L,LINDGEN(3L)+64L,LINDGEN(10L)+117L,$
                   LINDGEN(3L)+149L]
winds_111398_yb = -1

winds_040900_nb = [LINDGEN(9L)+232L,LINDGEN(9L)+245L,LINDGEN(5L)+265L,LINDGEN(3L)+275L,$
                   LINDGEN(3L)+283L,LINDGEN(7L)+290L]
winds_040900_yb = LINDGEN(18) + 79L

winds_050300_nb = [LINDGEN(3L)+208L,LINDGEN(4L)+222L,LINDGEN(3L)+227L,LINDGEN(3L)+445L,$
                   LINDGEN(7L)+450L]
winds_050300_yb = -1

winds_052600_nb = [LINDGEN(7L)+0L,LINDGEN(3L)+12L,LINDGEN(3L)+60L,LINDGEN(6L)+65L,$
                   LINDGEN(4L)+72L,LINDGEN(6L)+83L,LINDGEN(8L)+96L,LINDGEN(4L)+110L,$
                   LINDGEN(3L)+139L,LINDGEN(4L)+195L]
winds_052600_yb = -1

winds_061000_nb = [LINDGEN(3L)+50L,LINDGEN(3L)+424L,LINDGEN(5L)+433L,LINDGEN(7L)+815L,$
                   LINDGEN(3L)+828L,LINDGEN(4L)+832L,LINDGEN(4L)+926L]
winds_061000_yb = -1

winds_062600_nb = [LINDGEN(4L)+9L,LINDGEN(3L)+30L,LINDGEN(3L)+52L,LINDGEN(5L)+69L,$
                   LINDGEN(7L)+75L,LINDGEN(4L)+267L]
winds_062600_yb = -1

winds_071000_nb = [LINDGEN(3L)+168L,LINDGEN(8L)+446L,LINDGEN(3L)+456L]
winds_071000_yb = -1

winds_072300_nb = [LINDGEN(3L)+0L,LINDGEN(7L)+35L,LINDGEN(7L)+46L,LINDGEN(7L)+69L,       $
                   LINDGEN(7L)+86L,LINDGEN(21L)+117L,LINDGEN(7L)+133L,LINDGEN(7L)+185L,  $
                   LINDGEN(4L)+1187L]
winds_072300_yb = [LINDGEN(3L)+0L,LINDGEN(7L)+459L]


winds_080400_nb = [LINDGEN(10L)+15L,LINDGEN(50L)+80L,LINDGEN(30L)+195L,LINDGEN(20L)+240L,$
                   LINDGEN(5L)+409L,LINDGEN(10L)+924L,LINDGEN(10L)+950L]
winds_080400_yb = LINDGEN(N_ELEMENTS(gaelb))


winds_081500_nb = [LINDGEN(120L)+9L,LINDGEN(90L)+170L,LINDGEN(10L)+300L,LINDGEN(20L)+480L]
winds_081500_yb = LINDGEN(N_ELEMENTS(gaelb))


winds_101002_nb = [LINDGEN(4L)+5L,LINDGEN(9L)+22L,LINDGEN(3L)+48L,LINDGEN(3L)+81L,       $
                   LINDGEN(3L)+112L,LINDGEN(11L)+118L,LINDGEN(12L)+168L,LINDGEN(3L)+185L,$
                   LINDGEN(3L)+201L,LINDGEN(4L)+213L]
winds_101002_yb = -1


; => Find elements of non-burst (nb) and burst (yb) structures near e-holes TDS samples
test0 = bracket(gael.time,unix_ehole)
test1 = bracket(gaelb.time,unix_ehole)

einds_111398_nb = [LINDGEN(7L)+2L,LINDGEN(3L)+27L,LINDGEN(3L)+126L,LINDGEN(7L)+134L,$
                   LINDGEN(3L)+161L,LINDGEN(11L)+256L]
einds_111398_yb = -1

einds_040900_nb = [LINDGEN(4L)+4L,LINDGEN(3L)+14L,LINDGEN(5L)+109L,LINDGEN(3L)+180L,$
                   LINDGEN(4L)+189L,LINDGEN(3L)+198L]
einds_040900_yb = -1

einds_050300_nb = [LINDGEN(3L)+19L,LINDGEN(7L)+25L,LINDGEN(3L)+40L,LINDGEN(3L)+74L]
einds_050300_yb = -1

einds_052600_nb = [LINDGEN(3L)+167L,LINDGEN(3L)+194L,LINDGEN(3L)+200L,$
                   LINDGEN(11L)+205L,LINDGEN(3L)+234L,LINDGEN(3L)+257L,LINDGEN(3L)+264L]
einds_052600_yb = LINDGEN(16)+80L

einds_061000_nb = [LINDGEN(9L)+432L,LINDGEN(5L)+449L,LINDGEN(4L)+464L,LINDGEN(3L)+474L,$
                   LINDGEN(3L)+488L,LINDGEN(3L)+539L,LINDGEN(5L)+557L,LINDGEN(3L)+563L,$
                   LINDGEN(4L)+635L,LINDGEN(4L)+661L]
einds_061000_yb = -1

einds_062600_nb = [LINDGEN(6L)+156L,LINDGEN(7L)+180L,LINDGEN(3L)+263L,LINDGEN(3L)+320L,$
                   LINDGEN(6L)+357L,LINDGEN(3L)+371L,LINDGEN(3L)+409L,LINDGEN(6L)+440L]
einds_062600_yb = -1

einds_071000_nb = [LINDGEN(9L)+0L,LINDGEN(12L)+41L,LINDGEN(3L)+171L,LINDGEN(5L)+366L,$
                   LINDGEN(16L)+484L,LINDGEN(3L)+531L,LINDGEN(4L)+549L,LINDGEN(4L)+558L,$
                   LINDGEN(8L)+593L]
einds_071000_yb = -1

einds_072300_nb = [LINDGEN(246L)+336L,LINDGEN(65L)+634L,LINDGEN(19L)+728L,   $
                   LINDGEN(3L)+835L,LINDGEN(11L)+852L,LINDGEN(4L)+909L,      $
                   LINDGEN(4L)+1103L,LINDGEN(5L)+1138L,LINDGEN(80L)+1202L,   $
                   LINDGEN(4L)+1332L,LINDGEN(30L)+1353L,LINDGEN(4L)+1436L,   $
                   LINDGEN(10L)+1475L,LINDGEN(4L)+1514L]
einds_072300_yb = [LINDGEN(4L)+94L,LINDGEN(22L)+130L,LINDGEN(32L)+173L,      $
                   LINDGEN(4L)+290L,LINDGEN(4L)+459L,LINDGEN(4L)+555L,       $
                   LINDGEN(4L)+643L,LINDGEN(4L)+650L]

einds_080400_nb = [LINDGEN(30L)+515L,LINDGEN(20L)+730L,LINDGEN(10L)+890L,$
                   LINDGEN(10L)+940L,LINDGEN(10L)+1055L]
einds_080400_yb = LINDGEN(N_ELEMENTS(gaelb))

einds_081500_nb = [LINDGEN(30L)+159L,LINDGEN(280L)+598L,LINDGEN(50L)+980L,$
                   LINDGEN(20L)+1015L,LINDGEN(160L)+1125L,LINDGEN(20L)+1410L,$
                   LINDGEN(5L)+1510L,LINDGEN(5L)+1575L,LINDGEN(40L)+1599L,$
                   LINDGEN(120L)+1720L]
einds_081500_yb = LINDGEN(N_ELEMENTS(gaelb))

einds_101002_nb = [LINDGEN(3L)+204L]
einds_101002_yb = -1



;all_inds_nb     = [winds_111398_nb,einds_111398_nb]
;all_inds_yb     = -1
;all_inds_nb    = [winds_040900_nb,einds_040900_nb]
;all_inds_yb    = winds_040900_nb
;all_inds_nb     = [winds_050300_nb,einds_050300_nb]
;all_inds_yb     = -1
;all_inds_nb     = [winds_052600_nb,einds_052600_nb]
;all_inds_yb     = einds_052600_yb
;all_inds_nb     = [winds_061000_nb,einds_061000_nb]
;all_inds_yb     = -1
;all_inds_nb     = [winds_062600_nb,einds_062600_nb]
;all_inds_yb     = -1
;all_inds_nb     = [winds_071000_nb,einds_071000_nb]
;all_inds_yb     = -1
;all_inds_nb     = [winds_072300_nb,einds_072300_nb]
;all_inds_yb     = [winds_072300_yb,einds_072300_yb]
all_inds_nb     = [winds_080400_nb,einds_080400_nb]
all_inds_yb     = [winds_080400_yb,einds_080400_yb]
;all_inds_nb     = [winds_081500_nb,einds_081500_nb]
;all_inds_yb     = [winds_081500_yb,einds_081500_yb]
;all_inds_nb     = [winds_101002_nb,einds_101002_nb]
;all_inds_yb     = -1


unq_nb          = SORT(UNIQ(all_inds_nb,SORT(all_inds_nb)))
all_inds_nb     = all_inds_nb[unq_nb]
unq_yb          = SORT(UNIQ(all_inds_yb,SORT(all_inds_yb)))
all_inds_yb     = all_inds_yb[unq_yb]


sunv    = [1.,0.,0.]
sunn    = 'Sun Dir.'
ngrid   = 30
vlim    = 2d4
pdir    = '~/Desktop/3DP_contours/'+date[0]+'/PS_EL/'
suffx   = '_3D-30Grids-All-Energies_e-frame_sundir-DF'
tempel  = gael[all_inds_nb]
sp      = SORT(tempel.TIME)
tempel  = tempel[sp]
mtsel   = my_time_string(tempel.TIME,UNIX=1)
ymdels  = mtsel.DATE_TIME
ymdb    = ymdels
UTtime  = STRMID(ymdb[*],11L,2L)+STRMID(ymdb[*],14L,2L)+$
          STRMID(ymdb[*],17L,2L)+STRMID(ymdb[*],19L,3L)
gdate   = STRMID(ymdb[*],0L,10L)
n_ael   = N_ELEMENTS(tempel)
FOR j=0L, n_ael - 1L DO BEGIN                                 $
  dat  = tempel[j]                                          & $
  fnam = pdir+'el_'+gdate[j]+'_'+UTtime[j]+suffx            & $
  popen,fnam,/PORT                                          & $
    eh_cont3d,dat,VLIM=vlim,NGRID=ngrid,NSMOOTH=5,/ONE_C,/SM_CUTS,EX_VEC=sunv,EX_VN=sunn  & $
  pclose

ngrid   = 20
vlim    = 6d4
pdir    = '~/Desktop/3DP_contours/'+date[0]+'/PS_EH/'
suffx   = '_3D-30Grids-All-Energies_e-frame_sundir-DF'
tempeh  = gaeh[all_inds_nb]
sp      = SORT(tempeh.TIME)
tempeh  = tempeh[sp]
mtsel   = my_time_string(tempeh.TIME,UNIX=1)
ymdehs  = mtsel.DATE_TIME
ymdb    = ymdehs
UTtime  = STRMID(ymdb[*],11L,2L)+STRMID(ymdb[*],14L,2L)+$
          STRMID(ymdb[*],17L,2L)+STRMID(ymdb[*],19L,3L)
gdate   = STRMID(ymdb[*],0L,10L)
n_aeh   = N_ELEMENTS(tempeh)
FOR j=0L, n_aeh - 1L DO BEGIN                                 $
  dat  = tempeh[j]                                          & $
  fnam = pdir+'eh_'+gdate[j]+'_'+UTtime[j]+suffx            & $
  popen,fnam,/PORT                                          & $
    eh_cont3d,dat,VLIM=vlim,NGRID=ngrid,NSMOOTH=5,/ONE_C,/SM_CUTS,EX_VEC=sunv,EX_VN=sunn  & $
  pclose

n_aelb  = N_ELEMENTS(all_inds_yb)
ngrid   = 30
vlim    = 2d4
pdir    = '~/Desktop/3DP_contours/'+date[0]+'/PS_ELB/'
suffx   = '_3D-30Grids-All-Energies_e-frame-DF'
tempelb = gaelb[all_inds_yb]
sp      = SORT(tempelb.TIME)
tempelb = tempelb[sp]
mtsel   = my_time_string(tempelb.TIME,UNIX=1)
ymdels  = mtsel.DATE_TIME
ymdb    = ymdels
UTtime  = STRMID(ymdb[*],11L,2L)+STRMID(ymdb[*],14L,2L)+$
          STRMID(ymdb[*],17L,2L)+STRMID(ymdb[*],19L,3L)
gdate   = STRMID(ymdb[*],0L,10L)
FOR j=0L, n_aelb - 1L DO BEGIN                                 $
  dat  = tempelb[j]                                          & $
  fnam = pdir+'elb_'+gdate[j]+'_'+UTtime[j]+suffx            & $
  popen,fnam,/PORT                                           & $
    eh_cont3d,dat,VLIM=vlim,NGRID=ngrid,NSMOOTH=5,/SM_CUTS   & $
  pclose

ngrid   = 20
vlim    = 6d4
pdir    = '~/Desktop/3DP_contours/'+date[0]+'/PS_EHB/'
suffx   = '_3D-30Grids-All-Energies_e-frame-DF'
tempehb = gaehb[all_inds_yb]
sp      = SORT(tempehb.TIME)
tempehb = tempehb[sp]
mtsel   = my_time_string(tempehb.TIME,UNIX=1)
ymdels  = mtsel.DATE_TIME
ymdb    = ymdels
UTtime  = STRMID(ymdb[*],11L,2L)+STRMID(ymdb[*],14L,2L)+$
          STRMID(ymdb[*],17L,2L)+STRMID(ymdb[*],19L,3L)
gdate   = STRMID(ymdb[*],0L,10L)
n_aehb  = N_ELEMENTS(tempehb)
FOR j=0L, n_aehb - 1L DO BEGIN                                 $
  dat  = tempehb[j]                                          & $
  fnam = pdir+'ehb_'+gdate[j]+'_'+UTtime[j]+suffx            & $
  popen,fnam,/PORT                                           & $
    eh_cont3d,dat,VLIM=vlim,NGRID=ngrid,NSMOOTH=5,/SM_CUTS   & $
  pclose



nelb     = N_ELEMENTS(gaelb[all_inds_yb])
; -Calculates DFs and PADs and converts into Electron rest frame
test     = eesa_data_4(gaelb[all_inds_yb],NUM_PA=24L)
myb_delb = test.MOMENTS
myb_pdb  = test.PADS

nel      = N_ELEMENTS(gael[all_inds_nb])
; -Calculates DFs and PADs and converts into Electron rest frame
test     = eesa_data_4(gael[all_inds_nb],NUM_PA=24L) 
my_delb  = test.MOMENTS
my_pdb   = test.PADS



pdir    = '~/Desktop/3DP_contours/'+date[0]+'/PS_EL/'
suffx   = '_24PAs-30Grids-All-Energies_e-frame-DF_w-One-Count'
mtsel   = my_time_string(gael[all_inds_nb].TIME,UNIX=1)
ymdels  = mtsel.DATE_TIME
ymdb    = ymdels
UTtime  = STRMID(ymdb[*],11L,2L)+STRMID(ymdb[*],14L,2L)+$
          STRMID(ymdb[*],17L,2L)+STRMID(ymdb[*],19L,3L)
gdate   = STRMID(ymdb[*],0L,10L)
ngrid  = 30L
vlim   = 2d4
vout   = (DINDGEN(2L*ngrid + 1L)/ngrid - 1L) * vlim
nel    = N_ELEMENTS(gael[all_inds_nb])
FOR j=0L, nel - 1L DO BEGIN                                                           $
  myonec   = gael[all_inds_nb[j]]                                                   & $
  delb     = my_delb[j]                                                             & $
  fnam = pdir+'el_'+gdate[j]+'_'+UTtime[j]+suffx                                    & $
  popen,fnam,/PORT                                                                  & $
    cont2d,delb,NGRID=30,VLIM=2d4,/HEAT_F,MYONEC=myonec                             & $
  pclose
;  dat      = gael[all_inds_nb[j]]                                                   & $
;  dfpara   = one_count_level(dat,VLIM=vlim,NGRID=ngrid,NUM_PA=24L)                  & $
;    OPLOT,vout*1e-3,dfpara,COLOR=150,LINESTYLE=4                                    & $
;    XYOUTS,.60,.380,'- - - : One-Count Level',COLOR=150,/NORMAL                     & $


pdir    = '~/Desktop/3DP_contours/'+date[0]+'/PS_ELB/'
suffx   = '_24PAs-30Grids-All-Energies_e-frame-DF_w-One-Count'
mtsel   = my_time_string(gaelb[all_inds_yb].TIME,UNIX=1)
ymdels  = mtsel.DATE_TIME
ymdb    = ymdels
UTtime  = STRMID(ymdb[*],11L,2L)+STRMID(ymdb[*],14L,2L)+$
          STRMID(ymdb[*],17L,2L)+STRMID(ymdb[*],19L,3L)
gdate   = STRMID(ymdb[*],0L,10L)
ngrid  = 30L
vlim   = 2d4
vout   = (DINDGEN(2L*ngrid + 1L)/ngrid - 1L) * vlim
FOR j=0L, nelb - 1L DO BEGIN                                                          $
  delb     = myb_delb[j]                                                            & $
  myonec   = gaelb[all_inds_yb[j]]                                                  & $
  fnam = pdir+'elb_'+gdate[j]+'_'+UTtime[j]+suffx                                   & $
  popen,fnam,/PORT                                                                  & $
    cont2d,delb,NGRID=30,VLIM=2d4,/HEAT_F,MYONEC=myonec                             & $
  pclose
;  dat      = gaelb[all_inds_yb[j]]                                                  & $
;  dfpara   = one_count_level(dat,VLIM=vlim,NGRID=ngrid,NUM_PA=24L)                  & $
;  delb     = myb_delb[j]                                                            & $
;    cont2d,delb,NGRID=30,VLIM=2d4                                                   & $
;    OPLOT,vout*1e-3,dfpara,COLOR=150,LINESTYLE=4                                    & $
;    XYOUTS,.60,.380,'- - - : One-Count Level',COLOR=150,/NORMAL                     & $
  
;-----------------------------------------------------------------------------------------
; => Look at SST 
;-----------------------------------------------------------------------------------------
date = '102698'
date = '111398'
date = '121498'
date = '040900'
date = '050300'
date = '052600'
date = '061000'
date = '062600'
date = '071000'
date = '072300'
date = '080400'
date = '081500'
date = '101002'
default_extension = '/wind_3dp_pros/wind_data_dir/Wind_3DP_DATA/IDL_Save_Files/'
default_location  = default_extension+date+'/'

DEFSYSV,'!wind3dp_umn',EXISTS=exists
IF NOT KEYWORD_SET(exists) THEN mdir  = FILE_EXPAND_PATH('')+default_location
IF     KEYWORD_SET(exists) THEN mdir  = !wind3dp_umn.WIND_3DP_SAVE_FILE_DIR+date+'/'
IF (mdir EQ '')            THEN mdir = default_location
mfiles = FILE_SEARCH(mdir,'*.sav')

t_o       = ['1998-11-13/14:00:00','1998-11-13/23:30:00'] 
t_o       = ['2000-04-09/20:20:00','2000-04-10/14:00:00']
t_o       = ['2000-05-02/21:00:00','2000-05-03/10:00:00']
t_o       = ['2000-05-25/20:50:00','2000-05-26/04:20:00']
t_o       = ['2000-06-10/01:00:00','2000-06-11/03:00:00']
t_o       = ['2000-06-26/13:00:00','2000-06-27/02:00:00']
t_o       = ['2000-07-09/18:30:00','2000-07-10/12:00:00']
t_o       = ['2000-07-23/04:40:00','2000-07-24/22:00:00']
t_o       = ['2000-08-03/16:30:00','2000-08-04/22:00:00']
t_o       = ['2000-08-15/13:00:00','2000-08-17/16:00:00']
t_o       = ['2002-10-09 22:00:00','2002-10-10 05:00:00']

RESTORE,mfiles[2]

; => Write SST Open and Foil data to ASCII files
guni = 'df'
guni = 'flux'
guni = 'eflux'
write_padspec_ascii,'sf',NUM_PA=10L,DAT_ARR=asf,UNITS=guni,/G_MAGF
write_padspec_ascii,'so',NUM_PA=10L,DAT_ARR=aso,UNITS=guni,/G_MAGF

; => Read in SST Open and Foil data from ASCII files
name      = 'sf'
units     = 'df'
;units     = 'flux'
;units     = 'eflux'
;range_avg = time_double(['2000-04-04/00:00:00','2000-04-04/12:00:00'])
padspec_ascii_to_tplot,name,DATE=date,/DAT_NORM,/DAT_CLN,UNITS=units,RANGE_AVG=range_avg

name      = 'so'
units     = 'df'
;units     = 'flux'
;units     = 'eflux'
;range_avg = time_double(['2000-04-02/12:00:00','2000-04-03/12:00:00'])
padspec_ascii_to_tplot,name,DATE=date,/DAT_NORM,/DAT_CLN,UNITS=units,RANGE_AVG=range_avg



stime  = STRMID(t_o[*],0,10)+'_'+STRMID(t_o[*],11,2)+STRMID(t_o[*],14,2)
sfname = stime[0]+'_'+stime[1]+'_TDS-Locations_eholes-blue_whistlers-red'
pref   = 'SST-Open_stacked-spectra_para-perp-anti_'+units[0]+'_'
nna    = ['nso_pads_df-2-0:1_N_cln','nso_pads_df-2-4:5_N_cln','nso_pads_df-2-8:9_N_cln']

nna    = ['nsf_pads_df-2-0:1_N_cln','nsf_pads_df-2-4:5_N_cln','nsf_pads_df-2-8:9_N_cln']
pref   = 'SST-Foil_stacked-spectra_para-perp-anti_'+units[0]+'_'


popen,pref+sfname,/land
  tplot,nna,TRANGE=time_double(t_o)
  time_bar,unix_whist,VARNAME=nna,COLOR=250L
  time_bar,unix_ehole,VARNAME=nna,COLOR=50L
pclose





t_o       = ['1998-11-13/15:00:00','1998-11-13/22:30:00'] 
t_o       = ['2000-04-09/20:20:00','2000-04-10/14:00:00']
t_o       = ['2000-05-02/21:00:00','2000-05-03/10:00:00']
t_o       = ['2000-05-25/20:50:00','2000-05-26/04:20:00']
t_o       = ['2000-06-10/01:00:00','2000-06-11/03:00:00']
t_o       = ['2000-06-26/13:00:00','2000-06-27/02:00:00']
t_o       = ['2000-07-09/18:30:00','2000-07-10/12:00:00']
t_o       = ['2000-08-03/16:30:00','2000-08-04/22:00:00']
t_o       = ['2000-08-15/13:00:00','2000-08-17/16:00:00']
t_o       = ['2002-10-09 22:00:00','2002-10-10 05:00:00']
t_u       = time_double(t_o)
sf_times  = REFORM(asf.TIME)
so_times  = REFORM(aso.TIME)
g_sf      = WHERE(sf_times LE MAX(t_u,/NAN) AND sf_times GE MIN(t_u,/NAN),g_f)
g_so      = WHERE(so_times LE MAX(t_u,/NAN) AND so_times GE MIN(t_u,/NAN),g_o)

IF (g_f GT 0) THEN gasf  = asf[g_sf] ELSE gasf = 0
IF (g_o GT 0) THEN gaso  = aso[g_so] ELSE gaso = 0
print, g_f, g_o
; => For 1998-11-13/15:00:00 - 1998-11-13/22:30:00
;        1115        2232

wsfinds_111398_nb = [LINDGEN(4L)+210L,LINDGEN(3L)+243L,LINDGEN(3L)+260L,    $
                     LINDGEN(32L)+471L,LINDGEN(3L)+601L]
esfinds_111398_nb = [LINDGEN(17L)+10L,LINDGEN(3L)+111L,LINDGEN(3L)+506L,    $
                     LINDGEN(19L)+539L,LINDGEN(4L)+651L,LINDGEN(4L)+1026L,  $
                     LINDGEN(20L)+1044L]

wsoinds_111398_nb = [LINDGEN(5L)+421L,LINDGEN(4L)+487L,LINDGEN(4L)+521L,    $
                     LINDGEN(8L)+942L,LINDGEN(34L)+967L,LINDGEN(4L)+1206L]
esoinds_111398_nb = [LINDGEN(36L)+10L,LINDGEN(3L)+224L,LINDGEN(4L)+1013L,   $
                     LINDGEN(4L)+1078L,LINDGEN(22L)+1094L,LINDGEN(4L)+1305L,$
                     LINDGEN(4L)+2058L,LINDGEN(4L)+2090L,LINDGEN(4L)+2124L]


wsoinds_061000_nb = [LINDGEN(3L)+249L,LINDGEN(5L)+3397L,LINDGEN(10L)+3480L,    $
                     LINDGEN(3L)+6543L,LINDGEN(3L)+6565L,LINDGEN(3L)+6630L,    $
                     LINDGEN(3L)+6663L,LINDGEN(5L)+6672L,LINDGEN(3L)+7409L]

esoinds_061000_nb = [LINDGEN(3L)+3461L,LINDGEN(3L)+3477L,LINDGEN(4L)+3500L,   $
                     LINDGEN(20L)+3604L,LINDGEN(6L)+3727L,LINDGEN(4L)+3802L,  $
                     LINDGEN(4L)+3912L,LINDGEN(15L)+4316L,LINDGEN(10L)+4471L, $
                     LINDGEN(3L)+4518L,LINDGEN(3L)+5094L,LINDGEN(3L)+5296L]

test = bracket(gaso.time,unix_whist)
print, test[*,0],format='(";",7I)'
test = bracket(gaso.time,unix_ehole)
print, test[*,0],format='(";",7I)'

all_inds_sf     = [wsfinds_111398_nb,esfinds_111398_nb]
all_inds_so     = [wsoinds_111398_nb,esoinds_111398_nb]


unq_nb          = SORT(UNIQ(all_inds_sf,SORT(all_inds_sf)))
all_inds_sf     = all_inds_sf[unq_nb]
unq_yb          = SORT(UNIQ(all_inds_so,SORT(all_inds_so)))
all_inds_so     = all_inds_so[unq_yb]
nso             = N_ELEMENTS(gaso[all_inds_so])
nsf             = N_ELEMENTS(gasf[all_inds_sf])

plot3d_options,MAP='ham',LOG =1,TRIANGULATE=1,COMPRESS=1

mtsf   = my_time_string(gasf[all_inds_sf].TIME,UNIX=1)
mtso   = my_time_string(gaso[all_inds_so].TIME,UNIX=1)
ymdsf  = mtsf.DATE_TIME
ymdso  = mtso.DATE_TIME

ymdb    = ymdso
UTtime  = STRMID(ymdb[*],11L,2L)+STRMID(ymdb[*],14L,2L)+$
          STRMID(ymdb[*],17L,2L)+STRMID(ymdb[*],19L,3L)
gdate   = STRMID(ymdb[*],0L,10L)
pdir    = '~/Desktop/3DP_contours/'+date[0]+'/Hammer-Aitoff_Projections/'
suffx   = '_All-Energies_smoothed'
pref    = 'SST-Open_Hammer-Aitoff_'
FOR j=0L, nso - 1L DO BEGIN                          $
  dat    = gaso[all_inds_so[j]]                    & $
  fname  = pdir+pref+gdate[j]+'_'+UTtime[j]+suffx  & $
  popen,fname,/PORT                                & $
    plot3d,dat,BNCENTER=-1,UNITS='flux'            & $
  pclose

ymdb    = ymdsf
UTtime  = STRMID(ymdb[*],11L,2L)+STRMID(ymdb[*],14L,2L)+$
          STRMID(ymdb[*],17L,2L)+STRMID(ymdb[*],19L,3L)
gdate   = STRMID(ymdb[*],0L,10L)
pdir    = '~/Desktop/3DP_contours/'+date[0]+'/Hammer-Aitoff_Projections/'
suffx   = '_All-Energies'
pref    = 'SST-Foil_Hammer-Aitoff_'
FOR j=0L, nsf - 1L DO BEGIN                          $
  dat    = gasf[all_inds_sf[j]]                    & $
  fname  = pdir+pref+gdate[j]+'_'+UTtime[j]+suffx  & $
  popen,fname,/PORT                                & $
    plot3d,dat,BNCENTER=-1,UNITS='df'              & $
  pclose

;-----------------------------------------------------------------------------------------
; => Look at all EL and EH DFs
;-----------------------------------------------------------------------------------------
ngrid = 20
vlim  = 6d4
dat   = gaeh[15]
eh_cont3d,dat,VLIM=vlim,NGRID=ngrid,NSMOOTH=6,/SM_CUTS


nelb     = N_ELEMENTS(gaelb)
test     = eesa_data_4(gaelb,NUM_PA=24L) ; -Calculates DFs and PADs and converts into Electron rest frame
myb_delb = test.MOMENTS
myb_pdb  = test.PADS
nel      = N_ELEMENTS(gael)
test     = eesa_data_4(gael,NUM_PA=24L) ; -Calculates DFs and PADs and converts into Electron rest frame
my_delb  = test.MOMENTS
my_pdb   = test.PADS

mtsel   = my_time_string(gael.TIME,UNIX=1)
ymdels  = mtsel.DATE_TIME
mtsel   = my_time_string(gaelb.TIME,UNIX=1)
ymdelbs = mtsel.DATE_TIME
; => Eesa Low
ymdb    = ymdels
UTtime  = STRMID(ymdb[*],11L,2L)+STRMID(ymdb[*],14L,2L)+$
          STRMID(ymdb[*],17L,2L)+STRMID(ymdb[*],19L,3L)
gdate   = STRMID(ymdb[*],0L,10L)
FOR j=0L, nel  - 1L DO BEGIN                                                       $
  pdb    = my_pdb[j]                                                             & $
  pltn2  = '~/Desktop/3DP_contours/'+date[0]+'/PADS_EL/'                         & $
  pltn2 += 'el_'+gdate[j]+'_'+UTtime[j]+'-24PAs-8-Highest-Energies_e-frame-PAD'  & $
  popen,pltn2,/port                                                              & $
  my_padplot_both,pdb,UNITS='flux',EBINS=[0L,7L]                                 & $
  pclose                                                                         & $
  delb  = my_delb[j]                                                             & $
  pltn1  = '~/Desktop/3DP_contours/'+date[0]+'/PS_EL/'                           & $
  pltn1 += 'el_'+gdate[j]+'_'+UTtime[j]+'-24PAs-30Grids-All-Energies_e-frame-DF' & $
  popen,pltn1,/port                                                              & $
  cont2d,delb,NGRID=30,VLIM=2d4                                                  & $
  pclose

; => Eesa Low Burst
ymdb    = ymdelbs
UTtime  = STRMID(ymdb[*],11L,2L)+STRMID(ymdb[*],14L,2L)+$
          STRMID(ymdb[*],17L,2L)+STRMID(ymdb[*],19L,3L)
gdate   = STRMID(ymdb[*],0L,10L)
FOR j=0L, nelb - 1L DO BEGIN                                                        $
  pdb    = myb_pdb[j]                                                             & $
  pltn2  = '~/Desktop/3DP_contours/'+date[0]+'/PADS_ELB/'                         & $
  pltn2 += 'elb_'+gdate[j]+'_'+UTtime[j]+'-24PAs-8-Highest-Energies_e-frame-PAD'  & $
  popen,pltn2,/port                                                               & $
  my_padplot_both,pdb,UNITS='flux',EBINS=[0L,7L]                                  & $
  pclose                                                                          & $
  delb  = myb_delb[j]                                                             & $
  pltn1  = '~/Desktop/3DP_contours/'+date[0]+'/PS_ELB/'                           & $
  pltn1 += 'elb_'+gdate[j]+'_'+UTtime[j]+'-24PAs-30Grids-All-Energies_e-frame-DF' & $
  popen,pltn1,/port                                                               & $
  cont2d,delb,NGRID=30,VLIM=2d4                                                   & $
  pclose


el          = gael[15]
; => Calculate one count level
onc_el      = el
temp        = moments_3d(onc_el,SC_POT=onc_el.SC_POT)
vdrift      = temp.VELOCITY
onc_el.VSW  = vdrift
onc_el.DATA = 1.
donc_el     = convert_vframe(onc_el,/INTERP)
pdnc_el     = pad(donc_el,NUM_PA=24)
dfnc_el     = distfunc(pdnc_el.ENERGY,pdnc_el.ANGLES,MASS=pdnc_el.MASS,DF=pdnc_el.DATA)
extract_tags,donc_el,dfnc_el


ngrid  = 30L
vlim   = 2d4
vout   = (DINDGEN(2L*ngrid + 1L)/ngrid - 1L) * vlim
dfpara = distfunc(vout,0.,PARAM=donc_el)    ; -vparallel cut (black line)
dfperp = distfunc(0.,vout,PARAM=donc_el)    ; -vperp cut (blue line)

delb   = convert_vframe(el,/INTERP)     ; => Convert to Solar Wind frame
pad    = pad(delb,NUM_PA=24)       ; => 24 Pitch-Angles
df     = distfunc(pad.ENERGY,pad.ANGLES,MASS=pad.MASS,DF=pad.DATA)  ; => Calc. DF
extract_tags,delb,df

wi,1
wset,1
popen,'el_04_09_2000_2325x17_PAD_8-HighestE_Number-Energy_Flux_Ve-Drift',/PORT
  my_padplot_both,pad,UNITS='flux',EBINS=[0L,7L]
pclose

wi,2
wset,2
popen,'el_04_09_2000_2325x17_DF_w-One-Count_and_HeatF_Ve-Drift',/PORT
  cont2d,delb,ngrid=30,vlim=2d4,/HEAT_F
  OPLOT,vout*1e-3,dfpara,COLOR=150,LINESTYLE=4
  XYOUTS,.60,.380,'- - - : One-Count Level',COLOR=150,/NORMAL
pclose



FOR j=0L, g_l DO BEGIN                            $
  el         = gael[j]                          & $
  temp       = moments_3d(el,SC_POT=el.SC_POT)  & $
  temp_l[j]  = temp

FOR j=0L, g_lb DO BEGIN                            $
  elb        = gaelb[j]                          & $
  temp       = moments_3d(elb,SC_POT=elb.SC_POT) & $
  temp_lb[j] = temp
;-----------------------------------------------------------------------------------------
; => Look at EL moment
;-----------------------------------------------------------------------------------------
LOADCT,39
DEVICE,DECOMPOSED=0
date = '040900'
mydate = my_str_date(DATE=date)
date   = mydate.S_DATE[0]  ; -('MMDDYY')
mdate  = mydate.DATE[0]    ; -('YYYYMMDD')
ldate  = STRMID(mdate,4L,4L)+STRMID(mdate,0L,4L)
mdir   = FILE_EXPAND_PATH('IDL_stuff/Wind_3DP_DATA/IDL_Save_Files/'+date)
mfiles = FILE_SEARCH(mdir,'*.sav')
RESTORE,mfiles[0]
ael0 = ael
aeh0 = aeh
RESTORE,mfiles[1]
ael  = [ael0,ael]
aeh  = [aeh0,aeh]
sp   = SORT(ael.TIME)
ael  = ael[sp]
sp   = SORT(aeh.TIME)
aeh  = aeh[sp]      
el   = ael[129]
print, time_string(el.TIME)
;       2000-04-09/23:25:17

onc_el      = el
temp        = moments_3d(onc_el,SC_POT=onc_el.SC_POT)
vdrift      = temp.VELOCITY
onc_el.VSW  = vdrift
onc_el.DATA = 1.
donc_el     = convert_vframe(onc_el,/INTERP)
pdnc_el     = pad(donc_el,NUM_PA=24)
dfnc_el     = distfunc(pdnc_el.ENERGY,pdnc_el.ANGLES,MASS=pdnc_el.MASS,DF=pdnc_el.DATA)
extract_tags,donc_el,dfnc_el
cont2d,donc_el,ngrid=30,vlim=2d4


el.VSW = vdrift
delb   = convert_vframe(el,/INTERP)     ; => Convert to Solar Wind frame
pad    = pad(delb,NUM_PA=24)       ; => 24 Pitch-Angles
df     = distfunc(pad.ENERGY,pad.ANGLES,MASS=pad.MASS,DF=pad.DATA)  ; => Calc. DF
extract_tags,delb,df

ngrid  = 30L
vlim   = 2d4
vout   = (DINDGEN(2L*ngrid + 1L)/ngrid - 1L) * vlim
dfpara = distfunc(vout,0.,PARAM=donc_el)    ; -vparallel cut (black line)
dfperp = distfunc(0.,vout,PARAM=donc_el)    ; -vperp cut (blue line)

wset,1
popen,'el_04_09_2000_2325x17_PAD_8-HighestE_Number-Energy_Flux_Ve-Drift',/PORT
  my_padplot_both,pad,UNITS='flux',EBINS=[0L,7L]
pclose

wset,0
popen,'el_04_09_2000_2325x17_DF_w-One-Count_and_HeatF_Ve-Drift',/PORT
  cont2d,delb,ngrid=30,vlim=2d4,/HEAT_F
  OPLOT,vout*1e-3,dfpara,COLOR=150,LINESTYLE=4
  XYOUTS,.60,.380,'- - - : One-Count Level',COLOR=150,/NORMAL
pclose


nrg    = TOTAL(delb.ENERGY,2,/NAN)/TOTAL(FINITE(delb.ENERGY),2,/NAN)
print, nrg[0:5]
;      1112.99      689.160      426.769      264.837      164.957      103.320
str_format = moments_3d()
tempa = moments_3d(delb,format=str_format,SC_POT=delb.sc_pot,ERANGE=[5,14])
temph = moments_3d(delb,format=str_format,SC_POT=delb.sc_pot,ERANGE=[0,4])

tpara = tempa.MAGT3[2]
tpera = 5e-1*(tempa.MAGT3[0] + tempa.MAGT3[1])
tparh = temph.MAGT3[2]
tperh = 5e-1*(temph.MAGT3[0] + temph.MAGT3[0])

print, tempa.AVGTEMP, temph.AVGTEMP, tempa.VTHERMAL, temph.VTHERMAL
;      16.6322      467.554      2418.79      12824.5
print, tpara, tpera, tpera/tpara
;      18.2384      15.8290     0.867898
print, tparh, tperh, tperh/tparh
;      483.481      440.083     0.910237
print, tperh/tpera, tparh/tpara
;      27.8022      26.5090

wset,1
popen,'el_04_09_2000_2325x17_PAD_8-HighestE_Number-Energy_Flux',/PORT
  my_padplot_both,pad,UNITS='flux',EBINS=[0L,7L]
pclose

ngrid  = 30L
vlim   = 2d4
vout   = (DINDGEN(2L*ngrid + 1L)/ngrid - 1L) * vlim
dfpara = distfunc(vout,0.,PARAM=donc_el)    ; -vparallel cut (black line)
dfperp = distfunc(0.,vout,PARAM=donc_el)    ; -vperp cut (blue line)

wset,0
;popen,'el_04_09_2000_2325x17_DF_wo-One-Count',/PORT
;popen,'el_04_09_2000_2325x17_DF_w-One-Count',/PORT
popen,'el_04_09_2000_2325x17_DF_w-One-Count_and_HeatF',/PORT
  cont2d,delb,ngrid=30,vlim=2d4,/HEAT_F
  OPLOT,vout*1e-3,dfpara,COLOR=150,LINESTYLE=4
  XYOUTS,.60,.380,'- - - : One-Count Level',COLOR=150,/NORMAL
;  cont2d,delb,ngrid=30,vlim=2d4,/MYONEC
;  cont2d,delb,ngrid=30,vlim=2d4
pclose

; => Calculate the Heat Flux if present
el_magf  = delb.MAGF
uel_magf = el_magf/ SQRT(TOTAL(el_magf^2,/NAN))
i3       = [[0,4,8],[9,13,17],[18,22,26]]
sum      = mom_sum(delb,SC_POT=delb.SC_POT)
charge   = sum.CHARGE
mass     = sum.MASS
nnorm    = SQRT(ABS(2*charge/mass))  ; -[(km/s) eV^(-1/2)]
sumt     = mom_translate(sum)
qtens    = (mass*nnorm^2)*sumt.NVVV
qqqs     = (sumt.NVVV[sumt.MAP_R3])[i3]
qvec     = TOTAL(qqqs,1L,/NAN)         ; => [eV km/s cm^(-3), GSE]
uqvec    = qvec/ SQRT(TOTAL(qvec^2,/NAN))
print, uqvec, uel_magf
;     0.788349    -0.614572    0.0284060
;     0.709819    -0.535295     0.457840
print, SQRT(TOTAL(el_magf^2,/NAN)), SQRT(TOTAL(qvec^2,/NAN))*1e-3 
;      84.4663      12.1237  ; => Heat Flux [keV km/s cm^(-3), GSE]
q_dot_b  = my_dot_prod(uel_magf,uqvec)
thet_qb  = ACOS(q_dot_b)*18d1/!DPI
print, thet_qb, 18d1 - thet_qb
;       25.635126       154.36487

el_fce = (qq*1d-9/me)*SQRT(TOTAL(el_magf^2,/NAN))
el_fcp = (qq*1d-9/mp)*SQRT(TOTAL(el_magf^2,/NAN))
print, el_fce, el_fcp
;       14856.097       8.0908831    ; => [Hz]


print, tempa., temph.
print, tempa., temph.


;-----------------------------------------------------------------------------------------
; => Documentation and Notes
;-----------------------------------------------------------------------------------------
HELP,tempa,/STRUCT,OUTPUT=hout
PRINT,hout,FORMAT='(";",a)'
;*****************************************************************************************
;** Structure <20e9e10>, 20 tags, length=176, data length=174, refs=3:
;   TIME            DOUBLE       9.5532272e+08
;   SC_POT          FLOAT           27.8728
;   SC_CURRENT      FLOAT       9.10034e+06
;   MAGF            FLOAT     Array[3]
;   DENSITY         FLOAT         0.0137371
;   AVGTEMP         FLOAT           18.0050
;   VTHERMAL        FLOAT           2516.64
;   VELOCITY        FLOAT     Array[3]
;   FLUX            FLOAT     Array[3]
;   PTENS           FLOAT     Array[6]
;   MFTENS          FLOAT     Array[6]
;   T3              FLOAT     Array[3]
;   SYMM            FLOAT     Array[3]
;   SYMM_THETA      FLOAT           6.33005
;   SYMM_PHI        FLOAT           258.729
;   SYMM_ANG        FLOAT           64.2551
;   MAGT3           FLOAT     Array[3]
;   ERANGE          FLOAT     Array[2]
;   MASS            FLOAT       5.68566e-06
;   VALID           INT              1
;*****************************************************************************************


HELP,el,/STRUCT,OUTPUT=hout
PRINT,hout,FORMAT='(";",a)'
;*****************************************************************************************
;** Structure <20de810>, 40 tags, length=76476, data length=76475, refs=2:
;   PROJECT_NAME    STRING    'Wind 3D Plasma'
;   DATA_NAME       STRING    'Eesa Low'
;   UNITS_NAME      STRING    'Counts'
;   UNITS_PROCEDURE STRING    'convert_esa_units'
;   TIME            DOUBLE       9.5532272e+08
;   END_TIME        DOUBLE       9.5532272e+08
;   TRANGE          DOUBLE    Array[2]
;   INTEG_T         DOUBLE           3.1001112
;   DELTA_T         DOUBLE           198.40712
;   MASS            DOUBLE       5.6856591e-06
;   GEOMFACTOR      DOUBLE       0.00039375000
;   INDEX           LONG               415
;   N_SAMPLES       LONG                 1
;   SHIFT           BYTE         4
;   VALID           INT              1
;   SPIN            LONG              3104
;   NBINS           INT             88
;   NENERGY         INT             15
;   DACCODES        INT       Array[8, 15]
;   VOLTS           FLOAT     Array[8, 15]
;   DATA            FLOAT     Array[15, 88]
;   ENERGY          FLOAT     Array[15, 88]
;   DENERGY         FLOAT     Array[15, 88]
;   PHI             FLOAT     Array[15, 88]
;   DPHI            FLOAT     Array[15, 88]
;   THETA           FLOAT     Array[15, 88]
;   DTHETA          FLOAT     Array[15, 88]
;   BINS            BYTE      Array[15, 88]
;   DT              FLOAT     Array[15, 88]
;   GF              FLOAT     Array[15, 88]
;   BKGRATE         FLOAT     Array[15, 88]
;   DEADTIME        FLOAT     Array[15, 88]
;   DVOLUME         FLOAT     Array[15, 88]
;   DDATA           FLOAT     Array[15, 88]
;   MAGF            FLOAT     Array[3]
;   VSW             FLOAT     Array[3]
;   DOMEGA          FLOAT     Array[88]
;   SC_POT          FLOAT           27.8728
;   E_SHIFT         FLOAT           0.00000
;   COUNTS          FLOAT     Array[15, 88]
;*****************************************************************************************
HELP,pad,/STRUCT,OUTPUT=hout
PRINT,hout,FORMAT='(";",a)'
;*****************************************************************************************
;** Structure <2122610>, 21 tags, length=14028, data length=14024, refs=1:
;   PROJECT_NAME    STRING    'Wind 3D Plasma'
;   DATA_NAME       STRING    'Eesa Low PAD'
;   VALID           INT              1
;   UNITS_NAME      STRING    'df'
;   TIME            DOUBLE       9.5532272e+08
;   END_TIME        DOUBLE       9.5532272e+08
;   INTEG_T         DOUBLE           3.1001112
;   NBINS           INT             24
;   NENERGY         LONG                15
;   DATA            FLOAT     Array[15, 24]
;   ENERGY          FLOAT     Array[15, 24]
;   ANGLES          FLOAT     Array[15, 24]
;   DENERGY         FLOAT     Array[15, 88]
;   BTH             FLOAT           27.2478
;   BPH             FLOAT          -37.0210
;   GF              FLOAT     Array[15, 24]
;   DT              FLOAT     Array[15, 24]
;   GEOMFACTOR      DOUBLE       0.00039375000
;   MASS            DOUBLE       5.6856591e-06
;   UNITS_PROCEDURE STRING    'convert_esa_units'
;   DEADTIME        FLOAT     Array[15, 24]
;*****************************************************************************************
HELP,df,/STRUCT,OUTPUT=hout
PRINT,hout,FORMAT='(";",a)'
;*****************************************************************************************
;** Structure <c3b4db0>, 3 tags, length=6000, data length=6000, refs=1:
;   VX0             FLOAT     Array[500]
;   VY0             FLOAT     Array[500]
;   DFC             FLOAT     Array[500]
;*****************************************************************************************









