gdates  = ['111398','040900','061000','071000','072300',$
           '080400','081500','102401','101002']
ndates  = N_ELEMENTS(gdates)
FOR j=0L, ndates - 1L DO BEGIN              $
  date = gdates[j]                        & $
  temp_whist_poyntingflux_plots,DATE=date


; => Look at relationship between <S_z>-GSM and Z-GSM

;--------------------------------------------------------------------------------------------------------------
;               SCET                      Positive Correlation             +Ex Angles             Type of eDF
;                                    [0 = no, 1 = yes, 2 = negative]    [start-end, deg]
;--------------------------------------------------------------------------------------------------------------

; => 3 E-fields and 1 B-field
       1998-11-13/18:20:57.978                     2                    +178.8  - +146.0           Ranisotropic
       1998-11-13/18:20:59.590                     2                     -14.7  -  -47.5           Ranisotropic
       1998-11-13/18:21:08.092                     2                     +43.9  -  +11.1           Ranisotropic

       2000-04-10/02:49:47.201                     2                    -113.0  - -144.7           Ranisotropic
       2000-04-10/02:49:47.303                     2                    -124.8  - -156.5           Ranisotropic
       2000-04-10/02:55:03.002                     2                     -65.1  -  -96.8           Ranisotropic
       2000-04-10/03:10:43.077                     2                    +209.1  - +177.4           Ranisotropic
       2000-04-10/03:14:11.849                     2                     +85.5  -  +53.8           Ranisotropic
       2000-04-10/03:47:32.845                     2                     +69.6  -  +37.9           Ranisotropic
       2000-04-10/03:48:25.816                     2                     +36.9  -   +5.1           Ranisotropic
; => 3 B-fields and 1 E-field
       2000-06-10/12:48:06.950                     1                    +187.8  - +156.0           Ranisotropic
       2000-06-10/12:48:15.360                     1                     -69.2  - -100.9           Ranisotropic
       2000-06-10/12:48:21.086                     1                     -14.4  -  -46.1           Ranisotropic
       2000-06-10/12:48:33.873                     1                     -59.7  -  -91.5           Ranisotropic
       2000-06-10/13:06:57.530                     1                     -93.7  - -125.4           Manisotropic
       2000-06-10/13:07:04.610                     1                    +163.9  - +132.2           Manisotropic
       2000-06-10/13:07:06.975                     1                    -110.8  - -142.5           Manisotropic
       2000-06-10/13:07:09.310                     1                     -21.9  -  -53.6           Manisotropic
       2000-06-10/13:07:09.799                     1                     -78.7  - -110.4           Manisotropic
       2000-06-10/13:07:17.471                     1                    +110.1  -  +78.4           Manisotropic
       2000-06-10/13:07:21.074                     1                     +51.7  -  +20.0           Manisotropic
       2000-06-10/13:07:31.037                     1                     -25.4  -  -57.1           Manisotropic
       2000-06-10/13:07:32.401                     1                    +176.2  - +144.4           Manisotropic
       2000-06-10/13:07:33.206                     1                     +82.7  -  +51.0           Manisotropic
       2000-06-10/13:07:39.001                     1                    +129.7  -  +97.9           Manisotropic
       2000-06-10/13:07:40.716                     1                     -69.6  - -101.3           Manisotropic
       2000-06-10/13:08:34.879                     1                    +119.7  -  +88.0           Manisotropic
       2000-06-10/13:10:32.960                     1                     +85.4  -  +53.6           Manisotropic

       2000-07-09/22:49:28.993                     2                    +157.7  -  +33.7           Manisotropic
       2000-07-09/23:56:06.302                     0                    +183.5  - +152.4           Manisotropic

       2000-07-23/07:53:55.198                     1                     -70.6  - -103.5           Ranisotropic
       2000-07-23/08:18:53.253                     1                     +53.2  -  +20.4           Ranisotropic
       2000-07-23/08:18:56.383                     1                     +36.7  -   +3.9           Ranisotropic
       2000-07-23/08:19:22.392                     1                    +147.5  - +114.7           Ranisotropic
       2000-07-23/08:19:22.720                     1                    +108.0  -  +75.1           Ranisotropic
       2000-07-23/08:25:37.845                     1                     -24.5  -  -57.3           Ranisotropic

       2000-08-03/22:04:46.697                     0                     -16.7  -  -16.7
       2000-08-03/23:25:52.206                     0                    -151.4  - -151.4

       2000-08-15/19:10:21.328                     2                     -33.6  -  -65.9           Manisotropic
       2000-08-15/21:14:06.376                     2                    -117.8  - -150.1           Ranisotropic
       2000-08-15/21:18:08.282                     2                     +61.5  -  +29.2           Ranisotropic
       2000-08-16/02:13:03.331                     2                     +16.2  -  -16.1           Ranisotropic
       2000-08-16/02:13:04.591                     2                    +227.3  - +195.0           Ranisotropic

       2001-10-23/21:22:13.932                     2                    +123.8  -  +92.2           Mbeamflattop
       2001-10-23/21:22:15.036                     0                      +1.4  -  -30.2           Mbeamflattop
       2001-10-23/21:22:27.548                     0                      +7.2  -  -24.4           Mbeamflattop
       2001-10-23/21:56:15.229                     0                     +27.5  -   -4.1           Mbeamflattop
       2001-10-23/21:56:15.964                     0                     -57.0  -  -88.6           Mbeamflattop
       2001-10-23/21:56:22.955                     0                    -132.2  - -163.8           Mbeamflattop
       2001-10-23/21:56:23.323                     0                    +172.8  - +141.2           Mbeamflattop
       2001-10-23/22:04:32.763                     0                     +68.7  -  +37.1           Manisotropic
       2001-10-23/22:08:46.315                     0                    -125.1  - -156.7           Manisotropic
       2001-10-23/22:11:30.811                     0                     -68.0  -  -99.6           Mbeamflattop
       2001-10-23/22:15:42.526                     0                     -73.2  - -104.8           Mbeamflattop
       2001-10-23/22:25:11.084                     2                      +0.9  -  -30.7           Mbeamflattop
       2001-10-23/22:25:11.820                     0                     -60.6  -  -92.2           Mbeamflattop
       2001-10-23/22:25:29.119                     2                     +98.9  -  +67.3           Mbeamflattop

       2002-10-10/02:30:17.675                     1                     +90.2  -  +57.4           Ranisotropic
       2002-10-10/02:33:05.411                     1                    +105.3  -  +72.5           Ranisotropic
       2002-10-10/02:33:08.966                     2                     +38.4  -   +5.7           Ranisotropic
       2002-10-10/02:33:13.393                     2                    +227.1  - +194.4           Ranisotropic
       2002-10-10/02:33:18.374                     2                     -10.9  -  -43.6           Ranisotropic
       2002-10-10/02:33:18.841                     2                     -66.9  -  -99.6           Ranisotropic
       2002-10-10/02:35:04.737                     2                    +185.3  - +152.5           Ranisotropic
       2002-10-10/02:41:48.565                     2                     +29.6  -   -3.1           Ranisotropic




date = '111398'
date = '040900'
t    = ['1998-11-13/11:00:00','1998-11-14/04:00:00'] 
t    = ['2000-04-09/17:00:00','2000-04-10/08:00:00']

tr3   = time_double(t)
mag3  = read_wind_mfi(TRANGE=tr3)
t3x   = mag3.MAG.X
bmag4 = mag3.MAG.Y
magf4 = mag3.BGSE.Y
magf5 = mag3.BGSM.Y
;-----------------------------------------------------------------------------------------
; => Define dummy variables
;-----------------------------------------------------------------------------------------
f              = !VALUES.F_NAN
d              = !VALUES.D_NAN
muo            = 4d0*!DPI*1d-7     ; -Permeability of free space (N/A^2 or H/m)
dumbf          = REPLICATE(f,1,2048)
dumbd          = REPLICATE(d,1,2048)
;-----------------------------------------------------------------------------------------
; => Check date 
;-----------------------------------------------------------------------------------------
mydate  = my_str_date(DATE=date)
sdate   = mydate.S_DATE[0]  ; -('MMDDYY')
ldate   = mydate.DATE[0]    ; -('YYYYMMDD')
tdate   = mydate.TDATE[0]   ; => 'YYYY-MM-DD'
;-----------------------------------------------------------------------------------------
; => Get whistler stats
;-----------------------------------------------------------------------------------------
temp       = whistler_insta_read()
fw_low0    = temp.FLOW_PEAK
fw_high0   = temp.FHIGH_PEAK
wscets0    = STRTRIM(temp.SCETS,2)
zgsmpos0   = temp.Z_GSM_POS
;-----------------------------------------------------------------------------------------
; => Get whistler times
;-----------------------------------------------------------------------------------------
temp0       = tds_whist_ehole_times(DATE=date[0],FIXFILE=fixes)
ymdb_whist0 = temp0.WHISTLER_T
unix_whist0 = temp0.WHISTLER_UNX

; => Find good elements
test       = my_array_where(ymdb_whist0,wscets0,/N_UNIQ)
ymdb_whist = ymdb_whist0[test[*,0]]
wscets     = wscets0[test[*,1]]
fw_low     = fw_low0[test[*,1]]
fw_high    = fw_high0[test[*,1]]
zgsmpos    = zgsmpos0[test[*,1]]
;-----------------------------------------------------------------------------------------
; => Get TDS data
;-----------------------------------------------------------------------------------------
; => Get TDSS data
my_tdss    = get_wind_tds_data(DATE=date,FIXFILE=fixes,/TDSS)
;-----------------------------------------------------------------------------------------
; => Find good elements
;-----------------------------------------------------------------------------------------
tests      = my_array_where(ymdb_whist,my_tdss.SCET,/N_UNIQ)

; => Get ONLY whistler TDSS
IF (tests[0] NE -1) THEN scetss  = my_tdss.SCET[tests[*,1]]             ELSE scetss  = ''
IF (tests[0] NE -1) THEN fieldss = REFORM(my_tdss.EFIELD[tests[*,1],*]) ELSE fieldss = dumbf
IF (tests[0] NE -1) THEN timess  = REFORM(my_tdss.TIME[tests[*,1],*])   ELSE timess  = dumbd
IF (tests[0] NE -1) THEN evnums  = my_tdss.EVENT_N[tests[*,1]]          ELSE evnums  = -1
IF (tests[0] NE -1) THEN atypes  = my_tdss.A_TYPE[tests[*,1]]           ELSE atypes  = ''
IF (tests[0] NE -1) THEN sangss  = my_tdss.S_ANG[tests[*,1]]            ELSE sangss  = 0.
IF (tests[0] NE -1) THEN eangss  = my_tdss.E_ANG[tests[*,1]]            ELSE eangss  = 0.

ascets     = scetss
; => STRMID(scet,0,2)+STRMID(scet,3,2)+'-'+STRMID(scet,6,2)+'x'+STRMID(scet,9,3)
ascets2    = string_replace_char(string_replace_char(ascets,'/','-'),' ','_')
ascets2    = STRMID(ascets2[*],0L,23L)  ; => Remove the _UT
fdates     = STRMID(ascets2[*],0L,11L)
fscets     = STRMID(ascets2[*],11L)
fscets     = STRMID(fscets[*],0,2)+STRMID(fscets[*],3,2)+'-'+$
             STRMID(fscets[*],6,2)+'x'+STRMID(fscets[*],9,3)
fn_scets   = fdates[*]+fscets[*]

afields    = fieldss
atimes     = timess
aevnum     = evnums
aatype     = atypes
asangs     = sangss
aeangs     = eangss
; => Eliminate bad elements
bad        = WHERE(ascets EQ '',bd,COMPLEMENT=good,NCOMPLEMENT=gd)
IF (gd GT 0) THEN ascets  = ascets[good]
IF (gd GT 0) THEN afields = afields[good,*]
IF (gd GT 0) THEN atimes  = atimes[good,*]
IF (gd GT 0) THEN aevnum  = aevnum[good]
IF (gd GT 0) THEN aatype  = aatype[good]
IF (gd GT 0) THEN asangs  = asangs[good]
IF (gd GT 0) THEN aeangs  = aeangs[good]
; => sort elements
mts        = my_time_string(ascets,STR=1,FORM=1,PREC=3,/NOMSSG)
ascets     = mts.DATE_TIME
aunix      = mts.UNIX
sp         = SORT(aunix)
ascets     = ascets[sp]
aunix      = aunix[sp]
afields    = afields[sp,*]
atimes     = atimes[sp,*]
aevnum     = aevnum[sp]
aatype     = aatype[sp]
asangs     = asangs[sp]
aeangs     = aeangs[sp]

; => Sort list times
mts        = my_time_string(wscets,STR=1,FORM=1,PREC=3,/NOMSSG)
wunix      = mts.UNIX
sp         = SORT(wunix)
wscets     = wscets[sp]
fw_low     = fw_low[sp]
fw_high    = fw_high[sp]
zgsmpos    = zgsmpos[sp]
; => Find good elements
test       = my_array_where(wscets,ascets,/N_UNIQ)
wscetsa    = wscets[test[*,0]]
fw_lowa    = fw_low[test[*,0]]
fw_higha   = fw_high[test[*,0]]
zgsmposa   = zgsmpos[test[*,0]]
; => Find unique elements
unq        = UNIQ(wscetsa,SORT(wscetsa))
wscets2    = wscetsa[unq]
fw_low2    = fw_lowa[unq]
fw_high2   = fw_higha[unq]
zgsmpos2   = zgsmposa[unq]

fwl_str    = STRTRIM(STRING(FORMAT='(f15.1)',fw_low2),2)
fwh_str    = STRTRIM(STRING(FORMAT='(f15.1)',fw_high2),2)
fil_str    = fwl_str[*]+'-'+fwh_str[*]+'Hz_'
zgsmstr    = 'Z!DGSM!N Pos. = '+STRTRIM(STRING(FORMAT='(f18.2)',zgsmpos2),2)+' km'
;-----------------------------------------------------------------------------------------
; => define fields
;-----------------------------------------------------------------------------------------
nsams   = N_ELEMENTS(REFORM(my_tdss.TIME[0,*]))
n_avgs  = N_ELEMENTS(aevnum) - 1L
efxyz   = DBLARR(N_ELEMENTS(wscets2),nsams,3L)  ; => Dummy array of E-fields (mV/m)
bfxyz   = DBLARR(N_ELEMENTS(wscets2),nsams,3L)  ; => Dummy array of B-fields (nT)
FOR k=0L, n_avgs DO BEGIN                                                $
  t_type = STRMID(aatype[k],0L,2L)                                     & $
  t_sct  = ascets[k]                                                   & $
  test0  = WHERE(t_sct EQ wscets2,gt0)                                 & $
  g      = REFORM(test0[0])                                            & $
  IF (t_type EQ 'EX' AND gt0 GT 0) THEN efxyz[g,*,0] = afields[k,*]    & $
  IF (t_type EQ 'EY' AND gt0 GT 0) THEN efxyz[g,*,1] = afields[k,*]    & $
  IF (t_type EQ 'EZ' AND gt0 GT 0) THEN efxyz[g,*,2] = afields[k,*]    & $
  IF (t_type EQ 'BX' AND gt0 GT 0) THEN bfxyz[g,*,0] = afields[k,*]    & $
  IF (t_type EQ 'BY' AND gt0 GT 0) THEN bfxyz[g,*,1] = afields[k,*]    & $
  IF (t_type EQ 'BZ' AND gt0 GT 0) THEN bfxyz[g,*,2] = afields[k,*]

;-----------------------------------------------------------------------------------------
; => find unique elements of fields
;-----------------------------------------------------------------------------------------
unqel   = UNIQ(ascets,SORT(ascets))
nscets  = REFORM(ascets[unqel])
nunix   = REFORM(aunix[unqel])
nsangs  = REFORM(asangs[unqel])
neangs  = REFORM(aeangs[unqel])
nevnm   = REFORM(aevnum[unqel])
natype  = aatype[unqel]
fn_scet = fn_scets[unqel]
ntimes  = REFORM(atimes[unqel,*])
n_uq    = N_ELEMENTS(unqel) - 1L
;-----------------------------------------------------------------------------------------
; => interpolate angles
;-----------------------------------------------------------------------------------------
nangsi = DBLARR(nsams,n_uq+1L)
FOR k=0L, n_uq DO BEGIN                                              $
  kstr  = 'T'+STRTRIM(k,2)                                         & $
  tt0         = REFORM(ntimes[k,*])*1d-3 + nunix[k]                & $
  tts0        = [MIN(tt0,/NAN),MAX(tt0,/NAN)]                      & $
  temp0       = interp([nsangs[k],neangs[k]],tts0,tt0,/NO_EXTRAP)  & $
  str_element,tds_unx,kstr,tt0,/ADD_REPLACE                        & $
  nangsi[*,k] = temp0

san_str    = STRTRIM(STRING(FORMAT='(f15.1)',nsangs),2)
ean_str    = STRTRIM(STRING(FORMAT='(f15.1)',neangs),2)
ang_str    = san_str[*]+'!Uo!N'+'-'+ean_str[*]+'!Uo!N'
fang_str   = '+E!Dx!N Angle to Sun:  '+ang_str[*]
;-----------------------------------------------------------------------------------------
; => filter fields
;-----------------------------------------------------------------------------------------
FOR k=0L, n_uq DO BEGIN                                                           $
  kstr  = 'T'+STRTRIM(k,2)                                                      & $
  evln  = (MAX(ntimes[k,*],/NAN) - MIN(ntimes[k,*],/NAN))*1d-3                  & $
  tsam  = (nsams - 1L)/evln                                                     & $
  flow  = fw_low2[k]                                                            & $
  fhigh = fw_high2[k]                                                           & $
  filte = vector_bandpass(REFORM(efxyz[k,*,*]),tsam[0],flow[0],fhigh[0],/MIDF)  & $
  filtb = vector_bandpass(REFORM(bfxyz[k,*,*]),tsam[0],flow[0],fhigh[0],/MIDF)  & $
  str_element,filter_ef,kstr,filte,/ADD_REPLACE                                 & $
  str_element,filter_bf,kstr,filtb,/ADD_REPLACE
;-----------------------------------------------------------------------------------------
; => calculate Poynting flux
;-----------------------------------------------------------------------------------------
; => S-fields [milliergs cm^(-2) s^(-1)]
FOR k=0L, n_uq DO BEGIN                                                 $
  kstr  = 'T'+STRTRIM(k,2)                                            & $
  vec_ef = REFORM(filter_ef.(k))*1d-3                                 & $
  vec_bf = REFORM(filter_bf.(k))*1d-9                                 & $
  poy_sf = my_crossp_2(vec_ef,vec_bf,/NOM)/muo*1d6                    & $
  str_element,filter_sf,kstr,poy_sf,/ADD_REPLACE

; => Note:  For 1998-11-13, S // X- and Z-WAVES coordinates and B-field mostly // Z-WAVES


; => eulermat(0d0,phi,180d0,/DEG)
; => rot_ef  = DBLARR(n_uq+1L,nsams,3L)  ; => [# of TDSS, # of points, 3L]
;-----------------------------------------------------------------------------------------
; => rotate fields into GSE and FAC Coordinates [use Sun Dir. as second vector]
;-----------------------------------------------------------------------------------------
unx_t0     = ntimes*1d-3 + (nunix # REPLICATE(1d0,2048L))
t_mag0     = tds_bfield(unx_t0,nsangs,neangs,B3SMAG=mag3.BGSE,DATE=date,/NOCURR)
mag_gse    = t_mag0.G3MAG
mag_waves  = t_mag0.ROT_3MFI
sun_dir    = [1.,0.,0.]

FOR k=0L, n_uq DO BEGIN                                                   $
  kstr    = 'T'+STRTRIM(k,2)                                            & $
  unx0    = REFORM(unx_t0[k,*])                                         & $
  g_magf  = REFORM(mag_gse[k,*,*])                                      & $
  angles  = REFORM(nangsi[*,k])                                         & $
  vec_ef  = REFORM(filter_ef.(k))*1d0                                   & $
  vec_bf  = REFORM(filter_bf.(k))*1d0                                   & $
  vec_sf  = REFORM(filter_sf.(k))*1d0                                   & $
  rot_ef  = DBLARR(nsams,3L)                                            & $
  rot_bf  = DBLARR(nsams,3L)                                            & $
  rot_sf  = DBLARR(nsams,3L)                                            & $
  FOR j=0L, nsams - 1L DO BEGIN                                           $
    rotm0 = eulermat(0d0,angles[j],180d0,/DEG)                          & $
    t_eef = REFORM(rotm0 ## REFORM(vec_ef[j,*]))                        & $
    t_ebf = REFORM(rotm0 ## REFORM(vec_bf[j,*]))                        & $
    t_esf = REFORM(rotm0 ## REFORM(vec_sf[j,*]))                        & $
    rot_ef[j,*] = t_eef                                                 & $
    rot_bf[j,*] = t_ebf                                                 & $
    rot_sf[j,*] = t_esf                                                 & $
  ENDFOR                                                                & $
  str_element,rotated_gse_ef,kstr,rot_ef,/ADD_REPLACE                   & $
  str_element,rotated_gse_bf,kstr,rot_bf,/ADD_REPLACE                   & $
  str_element,rotated_gse_sf,kstr,rot_sf,/ADD_REPLACE                   & $
  rot_ef  = DBLARR(nsams,3L)                                            & $
  rot_bf  = DBLARR(nsams,3L)                                            & $
  rot_sf  = DBLARR(nsams,3L)                                            & $
  FOR j=0L, nsams - 1L DO BEGIN                                           $
    magf  = REFORM(g_magf[j,*])                                         & $
    rotm0 = rot_mat(magf,sun_dir)                                       & $
    t_eef = REFORM(rotm0 ## REFORM(vec_ef[j,*]))                        & $
    t_ebf = REFORM(rotm0 ## REFORM(vec_bf[j,*]))                        & $
    t_esf = REFORM(rotm0 ## REFORM(vec_sf[j,*]))                        & $
    rot_ef[j,*] = t_eef                                                 & $
    rot_bf[j,*] = t_ebf                                                 & $
    rot_sf[j,*] = t_esf                                                 & $
  ENDFOR                                                                & $
  str_element,rotated_fac_ef,kstr,rot_ef,/ADD_REPLACE                   & $
  str_element,rotated_fac_bf,kstr,rot_bf,/ADD_REPLACE                   & $
  str_element,rotated_fac_sf,kstr,rot_sf,/ADD_REPLACE

; => *_gse_*  =  fields rotated into GSE Coordinates
; => *_fac_*  =  fields rotated into FACs


;-----------------------------------------------------------------------------------------
; => look at components
;-----------------------------------------------------------------------------------------
xtntm     = ['0','40','80','120','160','200','240']
xtvtm     = [0e0,4e1,8e1,12e1,16e1,2e2,24e1]
xtstm     = N_ELEMENTS(xtvtm) - 1L
xtt1      = 'Time (ms)'
exstr_s   = {XSTYLE:1,YSTYLE:1,NODATA:1,XTICKNAME:xtntm,XTICKV:xtvtm,$
             XTICKS:xtstm,XTITLE:xtt1,XMINOR:10,XTICKLEN:0.04}
yttlsrs   = ['S!D!9x!3'+',1!N (!7l!3'+'W/m!U2!N'+')',$
             'S!D!9x!3'+',2!N (!7l!3'+'W/m!U2!N'+')',$
             'S!D!9#!3'+'!N (!7l!3'+'W/m!U2!N'+')']
yttlbrs   = ['B!D!9x!3'+',1!N (nT)','B!D!9x!3'+',2!N (nT)',$
             'B!D!9#!3'+'!N (nT)']
yttlers   = ['E!D!9x!3'+',1!N (mV/m)','E!D!9x!3'+',2!N (mV/m)',$
             'E!D!9#!3'+'!N (mV/m)']

yttlsws   = ['S!Dx!N (!7l!3'+'W/m!U2!N'+')','S!Dy!N (!7l!3'+'W/m!U2!N'+')',$
             'S!Dz!N (!7l!3'+'W/m!U2!N'+')']
yttlbws   = ['B!Dx!N (nT)','B!Dy!N (nT)','B!Dz!N (nT)']
yttlews   = ['E!Dx!N (mV/m)','E!Dy!N (mV/m)','E!Dz!N (mV/m)']

ffr_prefx = 'FIXED_rotated_filtered_'
ffw_prefx = 'FIXED_WAVES-Coords_filtered_'
colors    = [250,150,50]
!P.CHARSIZE = 1.5
!P.MULTI    = [0,1,3]
fil_st2     = STRMID(fil_str[*],0l,STRLEN(fil_str[*])-1)

;  YRANGE:yra_s
; => Plot Filtered fields 
FOR k=0L, n_uq DO BEGIN                                                   $
  ms_times = REFORM(ntimes[k,*])                                        & $
  sr_field = rotated_fac_sf.(k)                                         & $
  er_field = rotated_fac_ef.(k)                                         & $
  br_field = rotated_fac_bf.(k)                                         & $
  sw_field = filter_sf.(k)                                              & $
  ew_field = filter_ef.(k)                                              & $
  bw_field = filter_bf.(k)                                              & $
  yra_sr   = [-1e0*MAX(ABS(sr_field),/NAN),MAX(ABS(sr_field),/NAN)]     & $
  yra_br   = [-1e0*MAX(ABS(br_field),/NAN),MAX(ABS(br_field),/NAN)]     & $
  yra_er   = [-1e0*MAX(ABS(er_field),/NAN),MAX(ABS(er_field),/NAN)]     & $
  yra_sw   = [-1e0*MAX(ABS(sw_field),/NAN),MAX(ABS(sw_field),/NAN)]     & $
  yra_bw   = [-1e0*MAX(ABS(bw_field),/NAN),MAX(ABS(bw_field),/NAN)]     & $
  yra_ew   = [-1e0*MAX(ABS(ew_field),/NAN),MAX(ABS(ew_field),/NAN)]     & $
  fname0   = ffw_prefx[0]+fil_str[k]+fn_scet[k]+'_Sxyz'                 & $
  popen,fname0,/LAND                                                    & $
    FOR j=0L, 2L DO BEGIN                                                 $
      IF (j EQ 0) THEN ttle = 'Poynting Flux [WAVES-Coords] at: '+nscets[k] & $
      IF (j EQ 1) THEN ttle = 'Filtered: '+fil_st2[k]+', '+fang_str[k]  & $
      IF (j EQ 2) THEN ttle = zgsmstr[k]                                & $
      PLOT,ms_times,sw_field[*,j],_EXTRA=exstr_s,YTITLE=yttlsws[j],YRANGE=yra_sw,TITLE=ttle  & $
        OPLOT,ms_times,sw_field[*,j],COLOR=colors[j]                    & $
    ENDFOR                                                              & $
  pclose                                                                & $
  fname0   = ffw_prefx[0]+fil_str[k]+fn_scet[k]+'_Bxyz'                 & $
  popen,fname0,/LAND                                                    & $
    FOR j=0L, 2L DO BEGIN                                                 $
      IF (j EQ 0) THEN ttle = 'Magnetic Field [WAVES-Coords] at: '+nscets[k] & $
      IF (j EQ 1) THEN ttle = 'Filtered: '+fil_st2[k]+', '+fang_str[k]  & $
      IF (j EQ 2) THEN ttle = zgsmstr[k]                                & $
      PLOT,ms_times,bw_field[*,j],_EXTRA=exstr_s,YTITLE=yttlbws[j],YRANGE=yra_bw,TITLE=ttle  & $
        OPLOT,ms_times,bw_field[*,j],COLOR=colors[j]                    & $
    ENDFOR                                                              & $
  pclose                                                                & $
  fname0   = ffw_prefx[0]+fil_str[k]+fn_scet[k]+'_Exyz'                 & $
  popen,fname0,/LAND                                                    & $
    FOR j=0L, 2L DO BEGIN                                                 $
      IF (j EQ 0) THEN ttle = 'Electric Field [WAVES-Coords] at: '+nscets[k] & $
      IF (j EQ 1) THEN ttle = 'Filtered: '+fil_st2[k]+', '+fang_str[k]  & $
      IF (j EQ 2) THEN ttle = zgsmstr[k]                                & $
      PLOT,ms_times,ew_field[*,j],_EXTRA=exstr_s,YTITLE=yttlews[j],YRANGE=yra_ew,TITLE=ttle  & $
        OPLOT,ms_times,ew_field[*,j],COLOR=colors[j]                    & $
    ENDFOR                                                              & $
  pclose                                                                & $
  fname0   = ffw_prefx[0]+fil_str[k]+fn_scet[k]+'_S-FACs'               & $
  popen,fname0,/LAND                                                    & $
    FOR j=0L, 2L DO BEGIN                                                 $
      IF (j EQ 0) THEN ttle = 'Poynting Flux [FACs] at: '+nscets[k]     & $
      IF (j EQ 1) THEN ttle = 'Filtered: '+fil_st2[k]+', '+fang_str[k]  & $
      IF (j EQ 2) THEN ttle = zgsmstr[k]                                & $
      PLOT,ms_times,sr_field[*,j],_EXTRA=exstr_s,YTITLE=yttlsrs[j],YRANGE=yra_sr,TITLE=ttle  & $
        OPLOT,ms_times,sr_field[*,j],COLOR=colors[j]                    & $
    ENDFOR                                                              & $
  pclose                                                                & $
  fname0   = ffw_prefx[0]+fil_str[k]+fn_scet[k]+'_B-FACs'               & $
  popen,fname0,/LAND                                                    & $
    FOR j=0L, 2L DO BEGIN                                                 $
      IF (j EQ 0) THEN ttle = 'Magnetic Field [FACs] at: '+nscets[k]    & $
      IF (j EQ 1) THEN ttle = 'Filtered: '+fil_st2[k]+', '+fang_str[k]  & $
      IF (j EQ 2) THEN ttle = zgsmstr[k]                                & $
      PLOT,ms_times,br_field[*,j],_EXTRA=exstr_s,YTITLE=yttlbrs[j],YRANGE=yra_br,TITLE=ttle  & $
        OPLOT,ms_times,br_field[*,j],COLOR=colors[j]                    & $
    ENDFOR                                                              & $
  pclose                                                                & $
  fname0   = ffw_prefx[0]+fil_str[k]+fn_scet[k]+'_E-FACs'               & $
  popen,fname0,/LAND                                                    & $
    FOR j=0L, 2L DO BEGIN                                                 $
      IF (j EQ 0) THEN ttle = 'Electric Field [FACs] at: '+nscets[k]    & $
      IF (j EQ 1) THEN ttle = 'Filtered: '+fil_st2[k]+', '+fang_str[k]  & $
      IF (j EQ 2) THEN ttle = zgsmstr[k]                                & $
      PLOT,ms_times,er_field[*,j],_EXTRA=exstr_s,YTITLE=yttlers[j],YRANGE=yra_er,TITLE=ttle  & $
        OPLOT,ms_times,er_field[*,j],COLOR=colors[j]                    & $
    ENDFOR                                                              & $
  pclose
;-----------------------------------------------------------------------------------------
; => look at zoomed-in plots
;-----------------------------------------------------------------------------------------
xtntm     = ['120','130','140','150','160']
xtvtm     = [12e1,13e1,14e1,15e1,16e1]
xtstm     = N_ELEMENTS(xtvtm) - 1L
xtt1      = 'Time (ms)'
xra       = [12e1,16e1]
exstr_s   = {XSTYLE:1,YSTYLE:1,NODATA:1,XTICKNAME:xtntm,XTICKV:xtvtm,$
             XTICKS:xtstm,XTITLE:xtt1,XRANGE:xra,XMINOR:10,XTICKLEN:0.04}
yttlsrs   = ['S!D!9x!3'+',1!N (!7l!3'+'W/m!U2!N'+')',$
             'S!D!9x!3'+',2!N (!7l!3'+'W/m!U2!N'+')',$
             'S!D!9#!3'+'!N (!7l!3'+'W/m!U2!N'+')']
yttlbrs   = ['B!D!9x!3'+',1!N (nT)','B!D!9x!3'+',2!N (nT)',$
             'B!D!9#!3'+'!N (nT)']
yttlers   = ['E!D!9x!3'+',1!N (mV/m)','E!D!9x!3'+',2!N (mV/m)',$
             'E!D!9#!3'+'!N (mV/m)']

yttlsws   = ['S!Dx!N (!7l!3'+'W/m!U2!N'+')','S!Dy!N (!7l!3'+'W/m!U2!N'+')',$
             'S!Dz!N (!7l!3'+'W/m!U2!N'+')']
yttlbws   = ['B!Dx!N (nT)','B!Dy!N (nT)','B!Dz!N (nT)']
yttlews   = ['E!Dx!N (mV/m)','E!Dy!N (mV/m)','E!Dz!N (mV/m)']

ffr_prefx = 'FIXED_rotated_zoomed-in_filtered_'
ffw_prefx = 'FIXED_WAVES-Coords_zoomed-in_filtered_'
colors    = [250,150,50]
!P.CHARSIZE = 1.5
!P.MULTI    = [0,1,3]

; => Plot Filtered fields [Zoomed into 120-160 ms]
FOR k=0L, n_uq DO BEGIN                                                   $
  ms_times = REFORM(ntimes[k,*])                                        & $
  sr_field = rotated_fac_sf.(k)                                         & $
  er_field = rotated_fac_ef.(k)                                         & $
  br_field = rotated_fac_bf.(k)                                         & $
  sw_field = filter_sf.(k)                                              & $
  ew_field = filter_ef.(k)                                              & $
  bw_field = filter_bf.(k)                                              & $
  yra_sr   = [-1e0*MAX(ABS(sr_field),/NAN),MAX(ABS(sr_field),/NAN)]     & $
  yra_br   = [-1e0*MAX(ABS(br_field),/NAN),MAX(ABS(br_field),/NAN)]     & $
  yra_er   = [-1e0*MAX(ABS(er_field),/NAN),MAX(ABS(er_field),/NAN)]     & $
  yra_sw   = [-1e0*MAX(ABS(sw_field),/NAN),MAX(ABS(sw_field),/NAN)]     & $
  yra_bw   = [-1e0*MAX(ABS(bw_field),/NAN),MAX(ABS(bw_field),/NAN)]     & $
  yra_ew   = [-1e0*MAX(ABS(ew_field),/NAN),MAX(ABS(ew_field),/NAN)]     & $
  fname0   = ffw_prefx[0]+fil_str[k]+fn_scet[k]+'_Sxyz'                 & $
  popen,fname0,/LAND                                                    & $
    FOR j=0L, 2L DO BEGIN                                                 $
      IF (j EQ 0) THEN ttle = 'Poynting Flux [WAVES-Coords] at: '+nscets[k] & $
      IF (j EQ 1) THEN ttle = 'Filtered: '+fil_st2[k]+', '+fang_str[k]  & $
      IF (j EQ 2) THEN ttle = zgsmstr[k]                                & $
      PLOT,ms_times,sw_field[*,j],_EXTRA=exstr_s,YTITLE=yttlsws[j],YRANGE=yra_sw,TITLE=ttle  & $
        OPLOT,ms_times,sw_field[*,j],COLOR=colors[j]                    & $
    ENDFOR                                                              & $
  pclose                                                                & $
  fname0   = ffw_prefx[0]+fil_str[k]+fn_scet[k]+'_Bxyz'                 & $
  popen,fname0,/LAND                                                    & $
    FOR j=0L, 2L DO BEGIN                                                 $
      IF (j EQ 0) THEN ttle = 'Magnetic Field [WAVES-Coords] at: '+nscets[k] & $
      IF (j EQ 1) THEN ttle = 'Filtered: '+fil_st2[k]+', '+fang_str[k]  & $
      IF (j EQ 2) THEN ttle = zgsmstr[k]                                & $
      PLOT,ms_times,bw_field[*,j],_EXTRA=exstr_s,YTITLE=yttlbws[j],YRANGE=yra_bw,TITLE=ttle  & $
        OPLOT,ms_times,bw_field[*,j],COLOR=colors[j]                    & $
    ENDFOR                                                              & $
  pclose                                                                & $
  fname0   = ffw_prefx[0]+fil_str[k]+fn_scet[k]+'_Exyz'                 & $
  popen,fname0,/LAND                                                    & $
    FOR j=0L, 2L DO BEGIN                                                 $
      IF (j EQ 0) THEN ttle = 'Electric Field [WAVES-Coords] at: '+nscets[k] & $
      IF (j EQ 1) THEN ttle = 'Filtered: '+fil_st2[k]+', '+fang_str[k]  & $
      IF (j EQ 2) THEN ttle = zgsmstr[k]                                & $
      PLOT,ms_times,ew_field[*,j],_EXTRA=exstr_s,YTITLE=yttlews[j],YRANGE=yra_ew,TITLE=ttle  & $
        OPLOT,ms_times,ew_field[*,j],COLOR=colors[j]                    & $
    ENDFOR                                                              & $
  pclose                                                                & $
  fname0   = ffw_prefx[0]+fil_str[k]+fn_scet[k]+'_S-FACs'               & $
  popen,fname0,/LAND                                                    & $
    FOR j=0L, 2L DO BEGIN                                                 $
      IF (j EQ 0) THEN ttle = 'Poynting Flux [FACs] at: '+nscets[k]     & $
      IF (j EQ 1) THEN ttle = 'Filtered: '+fil_st2[k]+', '+fang_str[k]  & $
      IF (j EQ 2) THEN ttle = zgsmstr[k]                                & $
      PLOT,ms_times,sr_field[*,j],_EXTRA=exstr_s,YTITLE=yttlsrs[j],YRANGE=yra_sr,TITLE=ttle  & $
        OPLOT,ms_times,sr_field[*,j],COLOR=colors[j]                    & $
    ENDFOR                                                              & $
  pclose                                                                & $
  fname0   = ffw_prefx[0]+fil_str[k]+fn_scet[k]+'_B-FACs'               & $
  popen,fname0,/LAND                                                    & $
    FOR j=0L, 2L DO BEGIN                                                 $
      IF (j EQ 0) THEN ttle = 'Magnetic Field [FACs] at: '+nscets[k]    & $
      IF (j EQ 1) THEN ttle = 'Filtered: '+fil_st2[k]+', '+fang_str[k]  & $
      IF (j EQ 2) THEN ttle = zgsmstr[k]                                & $
      PLOT,ms_times,br_field[*,j],_EXTRA=exstr_s,YTITLE=yttlbrs[j],YRANGE=yra_br,TITLE=ttle  & $
        OPLOT,ms_times,br_field[*,j],COLOR=colors[j]                    & $
    ENDFOR                                                              & $
  pclose                                                                & $
  fname0   = ffw_prefx[0]+fil_str[k]+fn_scet[k]+'_E-FACs'               & $
  popen,fname0,/LAND                                                    & $
    FOR j=0L, 2L DO BEGIN                                                 $
      IF (j EQ 0) THEN ttle = 'Electric Field [FACs] at: '+nscets[k]    & $
      IF (j EQ 1) THEN ttle = 'Filtered: '+fil_st2[k]+', '+fang_str[k]  & $
      IF (j EQ 2) THEN ttle = zgsmstr[k]                                & $
      PLOT,ms_times,er_field[*,j],_EXTRA=exstr_s,YTITLE=yttlers[j],YRANGE=yra_er,TITLE=ttle  & $
        OPLOT,ms_times,er_field[*,j],COLOR=colors[j]                    & $
    ENDFOR                                                              & $
  pclose
















bmag        = SQRT(TOTAL(mag_waves^2,3,/NAN))
mag_wavesxy = SQRT(TOTAL(mag_waves[*,*,0:1]^2,3,/NAN))/bmag
mag_wavesx  = REFORM(mag_waves[*,*,0])/bmag
mag_wavesy  = REFORM(mag_waves[*,*,1])/bmag
mag_wavesz  = REFORM(mag_waves[*,*,2])/bmag


xdata = reform(unx_t0[1,*])
y1dat = rotated_fac_sf.(1)[*,0]
y2dat = rotated_fac_sf.(1)[*,1]
y3dat = rotated_fac_sf.(1)[*,2]
ymagn = SQRT(y1dat^2 + y2dat^2 + y3dat^2)
!P.CHARSIZE = 1.5
!P.MULTI = [0,1,3]
WSET,0
plot,xdata,y1dat,_extra=exstr,YTITLE='S_perp1 (mW/m!U2!N'+')'
  oplot,xdata,y1dat,color=50
plot,xdata,y2dat,_extra=exstr,YTITLE='S_perp2 (mW/m!U2!N'+')'
  oplot,xdata,y2dat,color=150
plot,xdata,y3dat,_extra=exstr,YTITLE='S_para (mW/m!U2!N'+')'
  oplot,xdata,y3dat,color=250

!P.CHARSIZE = 1.5
!P.MULTI = [0,1,3]
WSET,1
y1dat = filter_sf.(1)[*,0]
y2dat = filter_sf.(1)[*,1]
y3dat = filter_sf.(1)[*,2]
plot,xdata,y1dat,_extra=exstr,YTITLE='S_x (mW/m!U2!N'+')'+'!C'+'[WAVES]'
  oplot,xdata,y1dat,color=50
plot,xdata,y2dat,_extra=exstr,YTITLE='S_y (mW/m!U2!N'+')'+'!C'+'[WAVES]'
  oplot,xdata,y2dat,color=150
plot,xdata,y3dat,_extra=exstr,YTITLE='S_z (mW/m!U2!N'+')'+'!C'+'[WAVES]'
  oplot,xdata,y3dat,color=250



!P.MULTI = 0

s1unitw = filter_sf.(1)/(SQRT(TOTAL(filter_sf.(1)^2,2,/nan)) # REPLICATE(1d0,3))
mf1uwv  = reform(mag_waves[1,*,*])/(reform(bmag[1,*]) # REPLICATE(1d0,3))
testdot = my_dot_prod(s1unitw,mf1uwv)
s_ang_b = ACOS(testdot)*18d1/!DPI

plot,xdata,s_ang_b,yrange=[-18d1,18d1]

plot,xdata,testdot,yrange=[-1d0,1d0]




